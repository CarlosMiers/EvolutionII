/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Vista;

import Clases.Config;
import Clases.ControlGrabado;
import Clases.numero_a_letras;
import Conexion.BDConexion;
import Conexion.Conexion;
import Conexion.Control;
import Conexion.ObtenerFecha;
import DAO.cobranzaDAO;
import DAO.configuracionDAO;
import DAO.sucursalDAO;
import Modelo.Tablas;
import Modelo.cobranza;
import Modelo.configuracion;
import Modelo.sucursal;
import java.awt.Color;
import java.awt.Font;
import java.awt.Image;
import java.awt.Toolkit;
import java.awt.event.KeyAdapter;
import java.awt.event.KeyEvent;
import java.net.URL;
import java.sql.Connection;
import java.sql.Date;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.text.DecimalFormat;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.Calendar;
import java.util.GregorianCalendar;
import java.util.HashMap;
import java.util.Map;
import javax.swing.ImageIcon;
import javax.swing.JDialog;
import javax.swing.JFrame;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JScrollPane;
import javax.swing.RowFilter;
import javax.swing.RowSorter;
import javax.swing.UIManager;
import javax.swing.plaf.ColorUIResource;
import javax.swing.JTable;
import javax.swing.JTextField;
import javax.swing.SwingConstants;
import javax.swing.UnsupportedLookAndFeelException;
import javax.swing.table.DefaultTableCellRenderer;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableModel;
import javax.swing.table.TableRowSorter;
import net.sf.jasperreports.engine.JasperCompileManager;
import net.sf.jasperreports.engine.JasperFillManager;
import net.sf.jasperreports.engine.JasperPrint;
import net.sf.jasperreports.engine.JasperPrintManager;
import net.sf.jasperreports.engine.JasperReport;
import net.sf.jasperreports.engine.util.JRLoader;
import net.sf.jasperreports.view.JasperViewer;
import org.openide.util.Exceptions;

/**
 *
 */
public class cobranzaspb extends javax.swing.JFrame {

    Conexion con = null;
    Statement stm, stm2 = null;
    ResultSet results = null;
    Tablas modelo = new Tablas();
    Tablas modelo2 = new Tablas();
    JScrollPane scroll = new JScrollPane();
    private TableRowSorter trsfiltro;
    ObtenerFecha ODate = new ObtenerFecha();
    Date dFechaInicio = null;
    Date dFechaFinal = null;
    String cSql = null;
    String cReferencia = null;
    Double nGastos, nOrdinario, tGastos, Punitorio, tOrdinario = 0.00;
    String cPunitorio, cGastos, cOrdinario = null;
    int nPeriodo = 0;

    SimpleDateFormat formatoFecha = new SimpleDateFormat("dd/MM/yyyy"); // FORMATO DE FECHA
    DecimalFormat formatea = new DecimalFormat("###,###.##");

    /**
     * Creates new form Template
     */
    ImageIcon icononuevo = new ImageIcon("src/Iconos/nuevo.png");
    ImageIcon iconoeditar = new ImageIcon("src/Iconos/editar.png");
    ImageIcon iconoborrar = new ImageIcon("src/Iconos/eliminar.png");
    ImageIcon iconoprint = new ImageIcon("src/Iconos/impresora.png");
    ImageIcon iconosalir = new ImageIcon("src/Iconos/salir.png");
    ImageIcon icorefresh = new ImageIcon("src/Iconos/refrescar.png");

    public cobranzaspb() {
        initComponents();
        this.Agregar.setIcon(icononuevo);
        this.Anular.setIcon(iconoborrar);
        this.Listar.setIcon(iconoprint);
        this.Salir.setIcon(iconosalir);
        this.refrescar.setIcon(icorefresh);
        this.vencetimbrado.setVisible(false);
        this.nrotimbrado.setVisible(false);
        this.jTable1.setShowGrid(false);
        this.jTable1.setOpaque(true);
        this.jTable1.setBackground(new Color(102, 204, 255));
        this.jTable1.setForeground(Color.BLACK);
        this.setLocationRelativeTo(null); //Centramos el formulario
        this.idcontrol.setVisible(false);
        this.cargarTitulo();
        this.cargarTitulo2();
        this.Inicializar();
    }

    Control hand = new Control();

    private void Inicializar() {
        Calendar c2 = new GregorianCalendar();
        this.FechaInicial.setCalendar(c2);
        this.FechaFinal.setCalendar(c2);
        dFechaInicio = ODate.de_java_a_sql(this.FechaInicial.getDate());
        dFechaFinal = ODate.de_java_a_sql(this.FechaFinal.getDate());
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        imprimir_recibo = new javax.swing.JDialog();
        jPanel4 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        nrorecibo = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        cuenta = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        fecha = new com.toedter.calendar.JDateChooser();
        jLabel4 = new javax.swing.JLabel();
        nombrecliente = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        totalpago = new javax.swing.JFormattedTextField();
        jScrollPane2 = new javax.swing.JScrollPane();
        Observacion = new javax.swing.JTextArea();
        jLabel6 = new javax.swing.JLabel();
        aceptarrecibo = new javax.swing.JButton();
        salir_recibo = new javax.swing.JButton();
        imprimir_recibo2 = new javax.swing.JDialog();
        jPanel5 = new javax.swing.JPanel();
        jLabel7 = new javax.swing.JLabel();
        nrorecibo1 = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        cuenta1 = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        fecha1 = new com.toedter.calendar.JDateChooser();
        vistaprevia = new javax.swing.JButton();
        salir_recibo2 = new javax.swing.JButton();
        jLabel32 = new javax.swing.JLabel();
        nombrecliente2 = new javax.swing.JTextField();
        jLabel33 = new javax.swing.JLabel();
        totalpago2 = new javax.swing.JFormattedTextField();
        jLabel34 = new javax.swing.JLabel();
        jScrollPane6 = new javax.swing.JScrollPane();
        Observacion1 = new javax.swing.JTextArea();
        imprimir_factura2 = new javax.swing.JDialog();
        jPanel7 = new javax.swing.JPanel();
        jLabel22 = new javax.swing.JLabel();
        nrorecibo3 = new javax.swing.JTextField();
        jLabel23 = new javax.swing.JLabel();
        cuenta3 = new javax.swing.JTextField();
        jLabel24 = new javax.swing.JLabel();
        fecha3 = new com.toedter.calendar.JDateChooser();
        jLabel25 = new javax.swing.JLabel();
        nombrecliente3 = new javax.swing.JTextField();
        jScrollPane5 = new javax.swing.JScrollPane();
        observacion = new javax.swing.JTextArea();
        jLabel27 = new javax.swing.JLabel();
        salir_recibo4 = new javax.swing.JButton();
        jLabel28 = new javax.swing.JLabel();
        interespunitorio = new javax.swing.JFormattedTextField();
        jLabel29 = new javax.swing.JLabel();
        gastos = new javax.swing.JFormattedTextField();
        vistaprevia3 = new javax.swing.JButton();
        jLabel30 = new javax.swing.JLabel();
        jLabel31 = new javax.swing.JLabel();
        interesmoratorio = new javax.swing.JFormattedTextField();
        jLabel35 = new javax.swing.JLabel();
        interesordinario = new javax.swing.JFormattedTextField();
        vencetimbrado = new com.toedter.calendar.JDateChooser();
        nrotimbrado = new javax.swing.JTextField();
        nrofactura = new javax.swing.JTextField();
        tablaaux = new javax.swing.JDialog();
        jPanel6 = new javax.swing.JPanel();
        jScrollPane3 = new javax.swing.JScrollPane();
        jTable2 = new javax.swing.JTable();
        loterecibo = new javax.swing.JDialog();
        jPanel8 = new javax.swing.JPanel();
        jLabel10 = new javax.swing.JLabel();
        jPanel9 = new javax.swing.JPanel();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        facturainicial = new javax.swing.JTextField();
        facturafinal = new javax.swing.JTextField();
        jPanel10 = new javax.swing.JPanel();
        imprimirlotes = new javax.swing.JButton();
        SalirLotes = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        Agregar = new javax.swing.JButton();
        Anular = new javax.swing.JButton();
        Salir = new javax.swing.JButton();
        idcontrol = new javax.swing.JTextField();
        jPanel3 = new javax.swing.JPanel();
        FechaInicial = new com.toedter.calendar.JDateChooser();
        FechaFinal = new com.toedter.calendar.JDateChooser();
        refrescar = new javax.swing.JButton();
        Listar = new javax.swing.JButton();
        panel1 = new org.edisoncor.gui.panel.Panel();
        labelMetric1 = new org.edisoncor.gui.label.LabelMetric();
        jComboBox1 = new javax.swing.JComboBox();
        jTextField1 = new javax.swing.JTextField();
        jPanel11 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        jMenuItem2 = new javax.swing.JMenuItem();
        jSeparator2 = new javax.swing.JPopupMenu.Separator();
        jMenuItem5 = new javax.swing.JMenuItem();
        jSeparator1 = new javax.swing.JPopupMenu.Separator();
        jMenuItem1 = new javax.swing.JMenuItem();
        jSeparator3 = new javax.swing.JPopupMenu.Separator();
        jMenuItem3 = new javax.swing.JMenuItem();
        jSeparator4 = new javax.swing.JPopupMenu.Separator();
        jMenuItem4 = new javax.swing.JMenuItem();

        jPanel4.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));

        jLabel1.setFont(new java.awt.Font("Lucida Grande", 1, 14)); // NOI18N
        jLabel1.setText("Nº Recibo");

        nrorecibo.setFont(new java.awt.Font("Lucida Grande", 1, 14)); // NOI18N
        nrorecibo.setEnabled(false);

        jLabel2.setFont(new java.awt.Font("Lucida Grande", 1, 14)); // NOI18N
        jLabel2.setText("Fecha");

        cuenta.setFont(new java.awt.Font("Lucida Grande", 1, 14)); // NOI18N
        cuenta.setEnabled(false);

        jLabel3.setFont(new java.awt.Font("Lucida Grande", 1, 14)); // NOI18N
        jLabel3.setText("Cuenta");

        fecha.setEnabled(false);
        fecha.setFont(new java.awt.Font("Lucida Grande", 1, 14)); // NOI18N

        jLabel4.setFont(new java.awt.Font("Lucida Grande", 1, 14)); // NOI18N
        jLabel4.setText("Denominación");

        nombrecliente.setFont(new java.awt.Font("Lucida Grande", 1, 14)); // NOI18N
        nombrecliente.setEnabled(false);

        jLabel5.setFont(new java.awt.Font("Lucida Grande", 1, 14)); // NOI18N
        jLabel5.setText("Importe");

        totalpago.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        totalpago.setEnabled(false);
        totalpago.setFont(new java.awt.Font("Lucida Grande", 1, 14)); // NOI18N

        Observacion.setColumns(20);
        Observacion.setFont(new java.awt.Font("Lucida Grande", 1, 12)); // NOI18N
        Observacion.setRows(5);
        jScrollPane2.setViewportView(Observacion);

        jLabel6.setFont(new java.awt.Font("Lucida Grande", 1, 14)); // NOI18N
        jLabel6.setText("Observaciones");

        aceptarrecibo.setFont(new java.awt.Font("Lucida Grande", 1, 14)); // NOI18N
        aceptarrecibo.setText("Vista Previa");
        aceptarrecibo.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        aceptarrecibo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                aceptarreciboActionPerformed(evt);
            }
        });

        salir_recibo.setFont(new java.awt.Font("Lucida Grande", 1, 14)); // NOI18N
        salir_recibo.setText("Salir del Modo Impresión");
        salir_recibo.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        salir_recibo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                salir_reciboActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGap(77, 77, 77)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel1)
                            .addComponent(jLabel2))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(fecha, javax.swing.GroupLayout.PREFERRED_SIZE, 144, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(nrorecibo, javax.swing.GroupLayout.PREFERRED_SIZE, 138, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel4Layout.createSequentialGroup()
                            .addGap(128, 128, 128)
                            .addComponent(aceptarrecibo)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(salir_recibo))
                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel4Layout.createSequentialGroup()
                            .addGap(46, 46, 46)
                            .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(jLabel5)
                                .addComponent(jLabel3)
                                .addComponent(jLabel4))
                            .addGap(18, 18, 18)
                            .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(cuenta, javax.swing.GroupLayout.PREFERRED_SIZE, 117, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(nombrecliente, javax.swing.GroupLayout.PREFERRED_SIZE, 372, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(totalpago, javax.swing.GroupLayout.PREFERRED_SIZE, 117, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 324, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jLabel6)))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(30, 30, 30)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(nrorecibo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(fecha, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel3)
                    .addComponent(cuenta, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(10, 10, 10)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(nombrecliente, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(totalpago, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5))
                .addGap(9, 9, 9)
                .addComponent(jLabel6)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(aceptarrecibo)
                    .addComponent(salir_recibo))
                .addGap(24, 24, 24))
        );

        javax.swing.GroupLayout imprimir_reciboLayout = new javax.swing.GroupLayout(imprimir_recibo.getContentPane());
        imprimir_recibo.getContentPane().setLayout(imprimir_reciboLayout);
        imprimir_reciboLayout.setHorizontalGroup(
            imprimir_reciboLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        imprimir_reciboLayout.setVerticalGroup(
            imprimir_reciboLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        jPanel5.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));

        jLabel7.setFont(new java.awt.Font("Lucida Grande", 1, 14)); // NOI18N
        jLabel7.setText("Nº Recibo");

        nrorecibo1.setFont(new java.awt.Font("Lucida Grande", 1, 14)); // NOI18N
        nrorecibo1.setEnabled(false);

        jLabel8.setFont(new java.awt.Font("Lucida Grande", 1, 14)); // NOI18N
        jLabel8.setText("Fecha");

        cuenta1.setFont(new java.awt.Font("Lucida Grande", 1, 14)); // NOI18N
        cuenta1.setEnabled(false);

        jLabel9.setFont(new java.awt.Font("Lucida Grande", 1, 14)); // NOI18N
        jLabel9.setText("Cuenta");

        fecha1.setEnabled(false);
        fecha1.setFont(new java.awt.Font("Lucida Grande", 1, 14)); // NOI18N

        vistaprevia.setFont(new java.awt.Font("Lucida Grande", 1, 14)); // NOI18N
        vistaprevia.setText("Vista Previa");
        vistaprevia.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        vistaprevia.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                vistapreviaActionPerformed(evt);
            }
        });

        salir_recibo2.setFont(new java.awt.Font("Lucida Grande", 1, 14)); // NOI18N
        salir_recibo2.setText("Salir del Modo Impresión");
        salir_recibo2.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        salir_recibo2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                salir_recibo2ActionPerformed(evt);
            }
        });

        jLabel32.setFont(new java.awt.Font("Lucida Grande", 1, 14)); // NOI18N
        jLabel32.setText("Denominación");

        nombrecliente2.setFont(new java.awt.Font("Lucida Grande", 1, 14)); // NOI18N
        nombrecliente2.setEnabled(false);

        jLabel33.setFont(new java.awt.Font("Lucida Grande", 1, 14)); // NOI18N
        jLabel33.setText("Importe");

        totalpago2.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        totalpago2.setEnabled(false);
        totalpago2.setFont(new java.awt.Font("Lucida Grande", 1, 14)); // NOI18N

        jLabel34.setFont(new java.awt.Font("Lucida Grande", 1, 14)); // NOI18N
        jLabel34.setText("Observaciones");

        Observacion1.setColumns(20);
        Observacion1.setFont(new java.awt.Font("Lucida Grande", 1, 12)); // NOI18N
        Observacion1.setRows(5);
        jScrollPane6.setViewportView(Observacion1);

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addGap(75, 75, 75)
                        .addComponent(jLabel7)
                        .addGap(22, 22, 22))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel5Layout.createSequentialGroup()
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel8)
                        .addGap(29, 29, 29)))
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(nrorecibo1, javax.swing.GroupLayout.PREFERRED_SIZE, 134, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(fecha1, javax.swing.GroupLayout.PREFERRED_SIZE, 144, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addGap(36, 36, 36)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel9)
                    .addComponent(jLabel32)
                    .addComponent(jLabel33))
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addGap(28, 28, 28)
                        .addComponent(cuenta1, javax.swing.GroupLayout.PREFERRED_SIZE, 117, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel5Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 28, Short.MAX_VALUE)
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(totalpago2, javax.swing.GroupLayout.PREFERRED_SIZE, 117, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(nombrecliente2, javax.swing.GroupLayout.PREFERRED_SIZE, 372, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addContainerGap())))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel5Layout.createSequentialGroup()
                .addGap(85, 85, 85)
                .addComponent(vistaprevia)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(salir_recibo2)
                .addGap(19, 19, 19))
            .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel5Layout.createSequentialGroup()
                    .addGap(146, 146, 146)
                    .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jScrollPane6, javax.swing.GroupLayout.PREFERRED_SIZE, 324, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel34))
                    .addContainerGap(76, Short.MAX_VALUE)))
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(nrorecibo1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(fecha1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel8))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cuenta1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel9))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(nombrecliente2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel32))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel33)
                    .addComponent(totalpago2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 174, Short.MAX_VALUE)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(vistaprevia)
                    .addComponent(salir_recibo2))
                .addGap(31, 31, 31))
            .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel5Layout.createSequentialGroup()
                    .addGap(185, 185, 185)
                    .addComponent(jLabel34)
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                    .addComponent(jScrollPane6, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(88, Short.MAX_VALUE)))
        );

        javax.swing.GroupLayout imprimir_recibo2Layout = new javax.swing.GroupLayout(imprimir_recibo2.getContentPane());
        imprimir_recibo2.getContentPane().setLayout(imprimir_recibo2Layout);
        imprimir_recibo2Layout.setHorizontalGroup(
            imprimir_recibo2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        imprimir_recibo2Layout.setVerticalGroup(
            imprimir_recibo2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        jPanel7.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));

        jLabel22.setFont(new java.awt.Font("Lucida Grande", 1, 14)); // NOI18N
        jLabel22.setText("Nº Recibo");

        nrorecibo3.setFont(new java.awt.Font("Lucida Grande", 1, 14)); // NOI18N
        nrorecibo3.setEnabled(false);

        jLabel23.setFont(new java.awt.Font("Lucida Grande", 1, 14)); // NOI18N
        jLabel23.setText("Fecha");

        cuenta3.setFont(new java.awt.Font("Lucida Grande", 1, 14)); // NOI18N
        cuenta3.setEnabled(false);

        jLabel24.setFont(new java.awt.Font("Lucida Grande", 1, 14)); // NOI18N
        jLabel24.setText("Cuenta");

        fecha3.setEnabled(false);
        fecha3.setFont(new java.awt.Font("Lucida Grande", 1, 14)); // NOI18N

        jLabel25.setFont(new java.awt.Font("Lucida Grande", 1, 14)); // NOI18N
        jLabel25.setText("Denominación");

        nombrecliente3.setFont(new java.awt.Font("Lucida Grande", 1, 14)); // NOI18N
        nombrecliente3.setEnabled(false);

        observacion.setColumns(20);
        observacion.setFont(new java.awt.Font("Lucida Grande", 1, 12)); // NOI18N
        observacion.setRows(5);
        jScrollPane5.setViewportView(observacion);

        jLabel27.setFont(new java.awt.Font("Lucida Grande", 1, 14)); // NOI18N
        jLabel27.setText("Observaciones");

        salir_recibo4.setFont(new java.awt.Font("Lucida Grande", 1, 14)); // NOI18N
        salir_recibo4.setText("Salir del Modo Impresión");
        salir_recibo4.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        salir_recibo4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                salir_recibo4ActionPerformed(evt);
            }
        });

        jLabel28.setFont(new java.awt.Font("Lucida Grande", 1, 14)); // NOI18N
        jLabel28.setText("Interés Punitorio");

        interespunitorio.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        interespunitorio.setEnabled(false);
        interespunitorio.setFont(new java.awt.Font("Lucida Grande", 1, 14)); // NOI18N

        jLabel29.setFont(new java.awt.Font("Lucida Grande", 1, 14)); // NOI18N
        jLabel29.setText("Gastos");

        gastos.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        gastos.setEnabled(false);
        gastos.setFont(new java.awt.Font("Lucida Grande", 1, 14)); // NOI18N

        vistaprevia3.setFont(new java.awt.Font("Lucida Grande", 1, 14)); // NOI18N
        vistaprevia3.setText("Grabar");
        vistaprevia3.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        vistaprevia3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                vistaprevia3ActionPerformed(evt);
            }
        });

        jLabel30.setFont(new java.awt.Font("Lucida Grande", 1, 14)); // NOI18N
        jLabel30.setText("Nro Factura");

        jLabel31.setFont(new java.awt.Font("Lucida Grande", 1, 14)); // NOI18N
        jLabel31.setText("Interés Moratorio");

        interesmoratorio.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        interesmoratorio.setEnabled(false);
        interesmoratorio.setFont(new java.awt.Font("Lucida Grande", 1, 14)); // NOI18N

        jLabel35.setFont(new java.awt.Font("Lucida Grande", 1, 14)); // NOI18N
        jLabel35.setText("Interés Ordinario");

        interesordinario.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        interesordinario.setEnabled(false);
        interesordinario.setFont(new java.awt.Font("Lucida Grande", 1, 14)); // NOI18N

        nrotimbrado.setHorizontalAlignment(javax.swing.JTextField.RIGHT);

        nrofactura.setHorizontalAlignment(javax.swing.JTextField.RIGHT);

        javax.swing.GroupLayout jPanel7Layout = new javax.swing.GroupLayout(jPanel7);
        jPanel7.setLayout(jPanel7Layout);
        jPanel7Layout.setHorizontalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addGap(45, 45, 45)
                .addComponent(vistaprevia3, javax.swing.GroupLayout.PREFERRED_SIZE, 177, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(salir_recibo4)
                .addGap(39, 39, 39))
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel7Layout.createSequentialGroup()
                        .addGap(46, 46, 46)
                        .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel24)
                            .addComponent(jLabel25))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(cuenta3, javax.swing.GroupLayout.PREFERRED_SIZE, 117, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(nombrecliente3, javax.swing.GroupLayout.PREFERRED_SIZE, 372, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 324, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel27)))
                    .addGroup(jPanel7Layout.createSequentialGroup()
                        .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel7Layout.createSequentialGroup()
                                .addGap(104, 104, 104)
                                .addComponent(jLabel23))
                            .addGroup(jPanel7Layout.createSequentialGroup()
                                .addGap(75, 75, 75)
                                .addComponent(jLabel22)))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(nrorecibo3, javax.swing.GroupLayout.PREFERRED_SIZE, 134, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(fecha3, javax.swing.GroupLayout.PREFERRED_SIZE, 144, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel7Layout.createSequentialGroup()
                        .addGap(24, 24, 24)
                        .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(jPanel7Layout.createSequentialGroup()
                                .addComponent(jLabel30)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(nrofactura, javax.swing.GroupLayout.PREFERRED_SIZE, 117, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addGroup(jPanel7Layout.createSequentialGroup()
                                    .addComponent(jLabel28)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(interespunitorio, javax.swing.GroupLayout.PREFERRED_SIZE, 117, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(jPanel7Layout.createSequentialGroup()
                                    .addComponent(jLabel31)
                                    .addGap(18, 18, 18)
                                    .addComponent(interesmoratorio, javax.swing.GroupLayout.PREFERRED_SIZE, 117, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel7Layout.createSequentialGroup()
                                    .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                        .addComponent(jLabel35)
                                        .addComponent(jLabel29))
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(gastos, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 117, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(interesordinario, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 117, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                        .addGap(37, 37, 37)
                        .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(vencetimbrado, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(nrotimbrado, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(13, Short.MAX_VALUE))
        );
        jPanel7Layout.setVerticalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel22)
                    .addComponent(nrorecibo3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(fecha3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel23))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel24)
                    .addComponent(cuenta3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel25)
                    .addComponent(nombrecliente3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(interesmoratorio, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel31))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(interespunitorio, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel28))
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel7Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel29)
                            .addComponent(gastos, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel7Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(vencetimbrado, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(interesordinario, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jLabel35)))
                        .addGap(0, 26, Short.MAX_VALUE)))
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel30)
                    .addComponent(nrotimbrado, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(nrofactura, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(15, 15, 15)
                .addComponent(jLabel27)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(22, 22, 22)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(salir_recibo4)
                    .addComponent(vistaprevia3))
                .addContainerGap())
        );

        javax.swing.GroupLayout imprimir_factura2Layout = new javax.swing.GroupLayout(imprimir_factura2.getContentPane());
        imprimir_factura2.getContentPane().setLayout(imprimir_factura2Layout);
        imprimir_factura2Layout.setHorizontalGroup(
            imprimir_factura2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        imprimir_factura2Layout.setVerticalGroup(
            imprimir_factura2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        jTable2.setModel(modelo2);
        jScrollPane3.setViewportView(jTable2);

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 375, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(15, Short.MAX_VALUE))
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 275, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(14, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout tablaauxLayout = new javax.swing.GroupLayout(tablaaux.getContentPane());
        tablaaux.getContentPane().setLayout(tablaauxLayout);
        tablaauxLayout.setHorizontalGroup(
            tablaauxLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        tablaauxLayout.setVerticalGroup(
            tablaauxLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        jPanel8.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));

        jLabel10.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel10.setText("Impresión de Facturas por Lotes de Números");

        javax.swing.GroupLayout jPanel8Layout = new javax.swing.GroupLayout(jPanel8);
        jPanel8.setLayout(jPanel8Layout);
        jPanel8Layout.setHorizontalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addGap(90, 90, 90)
                .addComponent(jLabel10)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel8Layout.setVerticalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel8Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel10)
                .addContainerGap())
        );

        jPanel9.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));

        jLabel11.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel11.setText("Iniciar Impresión desde la Factura");

        jLabel12.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel12.setText("Culminar Impresión en la Factura");

        facturainicial.setHorizontalAlignment(javax.swing.JTextField.RIGHT);

        facturafinal.setHorizontalAlignment(javax.swing.JTextField.RIGHT);

        javax.swing.GroupLayout jPanel9Layout = new javax.swing.GroupLayout(jPanel9);
        jPanel9.setLayout(jPanel9Layout);
        jPanel9Layout.setHorizontalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel9Layout.createSequentialGroup()
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel9Layout.createSequentialGroup()
                        .addGap(128, 128, 128)
                        .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel12)
                            .addComponent(jLabel11)))
                    .addGroup(jPanel9Layout.createSequentialGroup()
                        .addGap(167, 167, 167)
                        .addComponent(facturainicial, javax.swing.GroupLayout.PREFERRED_SIZE, 133, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel9Layout.createSequentialGroup()
                        .addGap(167, 167, 167)
                        .addComponent(facturafinal, javax.swing.GroupLayout.PREFERRED_SIZE, 133, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel9Layout.setVerticalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel9Layout.createSequentialGroup()
                .addGap(27, 27, 27)
                .addComponent(jLabel11)
                .addGap(12, 12, 12)
                .addComponent(facturainicial, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel12)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(facturafinal, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(46, Short.MAX_VALUE))
        );

        jPanel10.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));

        imprimirlotes.setText("Envíar a Impresora");
        imprimirlotes.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                imprimirlotesActionPerformed(evt);
            }
        });

        SalirLotes.setText("Salir");
        SalirLotes.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SalirLotesActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel10Layout = new javax.swing.GroupLayout(jPanel10);
        jPanel10.setLayout(jPanel10Layout);
        jPanel10Layout.setHorizontalGroup(
            jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel10Layout.createSequentialGroup()
                .addGap(79, 79, 79)
                .addComponent(imprimirlotes, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(51, 51, 51)
                .addComponent(SalirLotes, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(97, Short.MAX_VALUE))
        );
        jPanel10Layout.setVerticalGroup(
            jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel10Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(imprimirlotes)
                    .addComponent(SalirLotes))
                .addContainerGap())
        );

        javax.swing.GroupLayout lotereciboLayout = new javax.swing.GroupLayout(loterecibo.getContentPane());
        loterecibo.getContentPane().setLayout(lotereciboLayout);
        lotereciboLayout.setHorizontalGroup(
            lotereciboLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel8, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jPanel9, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jPanel10, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        lotereciboLayout.setVerticalGroup(
            lotereciboLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(lotereciboLayout.createSequentialGroup()
                .addComponent(jPanel8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel9, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel10, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setName("frame_clientes"); // NOI18N
        addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                formFocusGained(evt);
            }
        });
        addWindowFocusListener(new java.awt.event.WindowFocusListener() {
            public void windowGainedFocus(java.awt.event.WindowEvent evt) {
                formWindowGainedFocus(evt);
            }
            public void windowLostFocus(java.awt.event.WindowEvent evt) {
            }
        });
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowActivated(java.awt.event.WindowEvent evt) {
                formWindowActivated(evt);
            }
        });

        Agregar.setBackground(new java.awt.Color(255, 255, 255));
        Agregar.setFont(new java.awt.Font("Tahoma", 1, 10)); // NOI18N
        Agregar.setText(" Agregar Registro");
        Agregar.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        Agregar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AgregarActionPerformed(evt);
            }
        });

        Anular.setBackground(new java.awt.Color(255, 255, 255));
        Anular.setFont(new java.awt.Font("Tahoma", 1, 10)); // NOI18N
        Anular.setText("Anular Cobranza");
        Anular.setToolTipText("");
        Anular.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        Anular.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AnularActionPerformed(evt);
            }
        });

        Salir.setBackground(new java.awt.Color(255, 255, 255));
        Salir.setFont(new java.awt.Font("Tahoma", 1, 10)); // NOI18N
        Salir.setText("     Salir");
        Salir.setToolTipText("");
        Salir.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        Salir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SalirActionPerformed(evt);
            }
        });

        idcontrol.setEditable(false);

        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder("Filtrar entre los Días"));

        refrescar.setText("Refrescar");
        refrescar.setActionCommand("Filtrar");
        refrescar.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        refrescar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                refrescarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(refrescar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(FechaInicial, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(FechaFinal, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(26, 26, 26))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap(24, Short.MAX_VALUE)
                .addComponent(FechaInicial, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(FechaFinal, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(refrescar))
        );

        Listar.setBackground(new java.awt.Color(255, 255, 255));
        Listar.setFont(new java.awt.Font("Tahoma", 1, 10)); // NOI18N
        Listar.setText(org.openide.util.NbBundle.getMessage(cobranzaspb.class, "ventas.Listar.text")); // NOI18N
        Listar.setToolTipText(org.openide.util.NbBundle.getMessage(cobranzaspb.class, "ventas.Listar.toolTipText")); // NOI18N
        Listar.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        Listar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ListarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(idcontrol, javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(Agregar, javax.swing.GroupLayout.DEFAULT_SIZE, 144, Short.MAX_VALUE)
                            .addComponent(Salir, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(Listar, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(Anular, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(32, 32, 32)
                .addComponent(Agregar)
                .addGap(18, 18, 18)
                .addComponent(Anular)
                .addGap(18, 18, 18)
                .addComponent(Listar)
                .addGap(16, 16, 16)
                .addComponent(Salir)
                .addGap(29, 29, 29)
                .addComponent(idcontrol, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(201, Short.MAX_VALUE))
        );

        panel1.setColorPrimario(new java.awt.Color(102, 153, 255));
        panel1.setColorSecundario(new java.awt.Color(0, 204, 255));

        labelMetric1.setText("Cobranzas");

        jComboBox1.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Nombre del Cliente", "N° de Recibo" }));
        jComboBox1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox1ActionPerformed(evt);
            }
        });

        jTextField1.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jTextField1.setSelectionColor(new java.awt.Color(0, 63, 62));
        jTextField1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jTextField1KeyPressed(evt);
            }
        });

        javax.swing.GroupLayout panel1Layout = new javax.swing.GroupLayout(panel1);
        panel1.setLayout(panel1Layout);
        panel1Layout.setHorizontalGroup(
            panel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(labelMetric1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, 172, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(30, 30, 30)
                .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 378, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(396, Short.MAX_VALUE))
        );
        panel1Layout.setVerticalGroup(
            panel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panel1Layout.createSequentialGroup()
                .addContainerGap(22, Short.MAX_VALUE)
                .addGroup(panel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(labelMetric1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(20, 20, 20))
        );

        jTable1.setAutoResizeMode(JTable.AUTO_RESIZE_OFF);
        jScrollPane1.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jScrollPane1.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                jScrollPane1FocusGained(evt);
            }
        });

        jTable1.setModel(modelo);
        jTable1.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        jTable1.setSelectionBackground(new java.awt.Color(51, 204, 255));
        jTable1.setSelectionForeground(new java.awt.Color(0, 0, 255));
        jTable1.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                jTable1FocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                jTable1FocusLost(evt);
            }
        });
        jTable1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable1MouseClicked(evt);
            }
        });
        jTable1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jTable1KeyPressed(evt);
            }
        });
        jScrollPane1.setViewportView(jTable1);

        javax.swing.GroupLayout jPanel11Layout = new javax.swing.GroupLayout(jPanel11);
        jPanel11.setLayout(jPanel11Layout);
        jPanel11Layout.setHorizontalGroup(
            jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel11Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1))
        );
        jPanel11Layout.setVerticalGroup(
            jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 575, Short.MAX_VALUE)
        );

        jMenu1.setText("Menú Cobranzas");
        jMenu1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenu1ActionPerformed(evt);
            }
        });

        jMenuItem2.setText("Recibo x Total");
        jMenuItem2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem2ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem2);
        jMenu1.add(jSeparator2);

        jMenuItem5.setText("Recibo x Amortización - Int. Ordinario");
        jMenuItem5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem5ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem5);
        jMenu1.add(jSeparator1);

        jMenuItem1.setText("Recibo x Amortización");
        jMenuItem1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem1ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem1);
        jMenu1.add(jSeparator3);

        jMenuItem3.setText("Factura x Intereses - Gastos");
        jMenuItem3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem3ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem3);
        jMenu1.add(jSeparator4);

        jMenuItem4.setText("Imprimir Recibos por Lotes");
        jMenuItem4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem4ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem4);

        jMenuBar1.add(jMenu1);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel11, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
            .addComponent(panel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(panel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel11, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(0, 19, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jComboBox1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jComboBox1ActionPerformed

    private void jTextField1KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextField1KeyPressed
        this.jTextField1.addKeyListener(new KeyAdapter() {
            public void keyReleased(final KeyEvent e) {
                String cadena = (jTextField1.getText()).toUpperCase();
                jTextField1.setText(cadena);
                int indiceColumnaTabla = 0;
                switch (jComboBox1.getSelectedIndex()) {
                    case 0:
                        indiceColumnaTabla = 4;
                        break;//por nombre
                    case 1:
                        indiceColumnaTabla = 1;
                        break;//por codigo
                }
                repaint();
                filtro(indiceColumnaTabla);
            }
        });
        trsfiltro = new TableRowSorter(jTable1.getModel());
        jTable1.setRowSorter(trsfiltro);
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField1KeyPressed

    private void SalirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SalirActionPerformed
        this.dispose();
        // TODO add your handling code here:
    }//GEN-LAST:event_SalirActionPerformed

    private void AgregarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AgregarActionPerformed
        ControlGrabado.REGISTRO_GRABADO = "";
        String cOpcion = "new";
//        if (Config.nIvaIncluido == 1) {
        //     new detalle_cobranzas(cOpcion).setVisible(true);
        //    new detalle_cobranzas_amasb(cOpcion).setVisible(true);//amasb credi efectivo
        //      new detalle_cobranzas_crediseguro(cOpcion).setVisible(true);
        //      } else {
        new detalle_cobranzas_pb(cOpcion).setVisible(true);
        // new detalle_cobranzas_crediseguro(cOpcion).setVisible(true);
//        }
    }//GEN-LAST:event_AgregarActionPerformed

    private void jTable1KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTable1KeyPressed
        int nFila = this.jTable1.getSelectedRow();
        this.idcontrol.setText(this.jTable1.getValueAt(nFila, 0).toString());
        // TODO add your handling code here:
    }//GEN-LAST:event_jTable1KeyPressed

    private void jTable1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable1MouseClicked
        int nFila = this.jTable1.getSelectedRow();
        this.idcontrol.setText(this.jTable1.getValueAt(nFila, 0).toString());
        // TODO add your handling code here:
    }//GEN-LAST:event_jTable1MouseClicked

    private void jTable1FocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jTable1FocusGained
        // TODO add your handling code here:
    }//GEN-LAST:event_jTable1FocusGained

    private void jScrollPane1FocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jScrollPane1FocusGained
        // TODO add your handling code here:
    }//GEN-LAST:event_jScrollPane1FocusGained

    private void formWindowGainedFocus(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowGainedFocus
        dFechaInicio = ODate.de_java_a_sql(this.FechaInicial.getDate());
        dFechaFinal = ODate.de_java_a_sql(this.FechaFinal.getDate());
        this.cargarTabla();
        // TODO add your handling code here:
    }//GEN-LAST:event_formWindowGainedFocus

    private void formWindowActivated(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowActivated
        // TODO add your handling code here:
    }//GEN-LAST:event_formWindowActivated

    private void formFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_formFocusGained
        // TODO add your handling code here:
    }//GEN-LAST:event_formFocusGained

    private void AnularActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AnularActionPerformed
        if (Config.cNivelUsuario.equals("1")) {
            if (!this.idcontrol.getText().isEmpty()) {
                Object[] opciones = {"   Si   ", "   No   "};
                int ret = JOptionPane.showOptionDialog(null, "Desea Eliminar esta Cobranza ? ", "Confirmación", 0, 3, null, opciones, opciones[0]);
                if (ret == 0) {
                    BDConexion BD = new BDConexion();
                    BD.BorrarDetalles("cabecera_ventas", "creferencia='" + this.idcontrol.getText().trim() + "'");
                    BD.BorrarDetalles("facturacobranzas", "idcobranzas='" + this.idcontrol.getText().trim() + "'");
                    BD.BorrarDetalles("detalle_forma_cobro", "idmovimiento='" + this.idcontrol.getText().trim() + "'");
                    BD.BorrarDetalles("detalle_cobranzas", "iddetalle='" + this.idcontrol.getText().trim() + "'");
                    BD.BorrarDetalles("cobranzas", "idpagos='" + this.idcontrol.getText() + "'");
                } else {
                    JOptionPane.showMessageDialog(null, "Debe Seleccionar una Celda para Eliminar");
                }

            } else {
                JOptionPane.showMessageDialog(null, "Debe Seleccionar una Celda para Eliminar");
            }
        } else {
            JOptionPane.showMessageDialog(null, "No esta Autorizado para Eliminar una Cobranza");
            return;
        }
        // TODO add your handling code here:
    }//GEN-LAST:event_AnularActionPerformed

    private void jTable1FocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jTable1FocusLost
        // TODO add your handling code here:
    }//GEN-LAST:event_jTable1FocusLost

    private void refrescarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_refrescarActionPerformed
        GrillaCobranzas GrillaOC = new GrillaCobranzas();
        Thread HiloGrilla = new Thread(GrillaOC);
        HiloGrilla.start();

        // TODO add your handling code here:
    }//GEN-LAST:event_refrescarActionPerformed

    private void jMenuItem2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem2ActionPerformed
        this.imprimir_recibo.setSize(607, 436);
        int nFila = this.jTable1.getSelectedRow();
        cReferencia = this.jTable1.getValueAt(nFila, 0).toString();
        con = new Conexion();
        stm = con.conectar();

        cSql = "SELECT numero,cliente,cobranzas.totalpago,cuota,numerocuota,detalle_cobranzas.nrofactura, ";
        cSql += " clientes.nombre,clientes.ruc,cobranzas.fecha ";
        cSql += " FROM cobranzas ";
        cSql += " INNER JOIN detalle_cobranzas ";
        cSql += " ON cobranzas.idpagos=detalle_cobranzas.iddetalle ";
        cSql += " INNER JOIN clientes ";
        cSql += " ON clientes.codigo=cobranzas.cliente ";
        cSql += " WHERE idpagos= '" + cReferencia + "'";
        cSql += " GROUP BY idpagos ";
        try {
            String detalle = "Pago de Cuota Nro ";
            double ntotal = 0;
            results = stm.executeQuery(cSql);
            while (results.next()) {
                this.totalpago.setText(formatea.format(results.getDouble("totalpago")));
                detalle += results.getString("cuota") + "," + "/";
                detalle += results.getString("numerocuota");
            }
            this.Observacion.setText(detalle);
            stm.close();
        } catch (SQLException ex) {
            Exceptions.printStackTrace(ex);
        }

        this.nrorecibo.setText(this.jTable1.getValueAt(nFila, 1).toString());
        try {
            this.fecha.setDate(formatoFecha.parse(this.jTable1.getValueAt(nFila, 2).toString()));
        } catch (ParseException ex) {
            Exceptions.printStackTrace(ex);
        }
        this.cuenta.setText(this.jTable1.getValueAt(nFila, 3).toString().trim());
        this.nombrecliente.setText(this.jTable1.getValueAt(nFila, 4).toString().trim());

        imprimir_recibo.setTitle("Emitir Recibo por el Total");
        imprimir_recibo.setLocationRelativeTo(null);
        imprimir_recibo.setVisible(true);
        // TODO add your handling code here:
        // TODO add your handling code here:
    }//GEN-LAST:event_jMenuItem2ActionPerformed

    private void salir_reciboActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_salir_reciboActionPerformed
        imprimir_recibo.setVisible(false);
        // TODO add your handling code here:
    }//GEN-LAST:event_salir_reciboActionPerformed

    private void aceptarreciboActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_aceptarreciboActionPerformed
        GeneraReciboDinero ReciboDinero = new GeneraReciboDinero();
        Thread HiloReciboDinero = new Thread(ReciboDinero);
        HiloReciboDinero.start();
        // TODO add your handling code here:
    }//GEN-LAST:event_aceptarreciboActionPerformed

    private void vistapreviaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_vistapreviaActionPerformed
        GeneraReciboCapital ReciboCapital = new GeneraReciboCapital();
        Thread HiloReciboCapital = new Thread(ReciboCapital);
        HiloReciboCapital.start();
    }//GEN-LAST:event_vistapreviaActionPerformed

    private void salir_recibo2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_salir_recibo2ActionPerformed
        this.imprimir_recibo2.setVisible(false);
        // TODO add your handling code here:
    }//GEN-LAST:event_salir_recibo2ActionPerformed

    private void jMenu1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenu1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jMenu1ActionPerformed

    private void jMenuItem1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem1ActionPerformed
        // TODO add your handling code here:
        con = new Conexion();
        stm = con.conectar();
        int nFila = this.jTable1.getSelectedRow();
        cReferencia = this.jTable1.getValueAt(nFila, 0).toString();
        cSql = "SELECT numero,cliente,SUM(amortiza) as totalpago,clientes.ruc,cobranzas.fecha ";
        cSql += " FROM cobranzas ";
        cSql += " INNER JOIN detalle_cobranzas ";
        cSql += " ON cobranzas.idpagos=detalle_cobranzas.iddetalle ";
        cSql += " INNER JOIN clientes ";
        cSql += " ON clientes.codigo=cobranzas.cliente ";
        cSql += " WHERE idpagos= '" + cReferencia + "'";
        cSql += " GROUP BY idpagos ";

        try {
            results = stm.executeQuery(cSql);
            while (results.next()) {
                this.totalpago2.setText(formatea.format(results.getDouble("totalpago")));
            }
            results.close();
            stm.close();
        } catch (SQLException ex) {
            Exceptions.printStackTrace(ex);
        }
        this.imprimir_recibo2.setSize(607, 436);
        this.nrorecibo1.setText(this.jTable1.getValueAt(nFila, 1).toString());
        try {
            this.fecha1.setDate(formatoFecha.parse(this.jTable1.getValueAt(nFila, 2).toString()));
        } catch (ParseException ex) {
            Exceptions.printStackTrace(ex);
        }
        this.cuenta1.setText(this.jTable1.getValueAt(nFila, 3).toString().trim());
        this.nombrecliente2.setText(this.jTable1.getValueAt(nFila, 4).toString().trim());

        imprimir_recibo2.setTitle("Emitir Recibo por las Amortizaciones");
        imprimir_recibo2.setLocationRelativeTo(null);
        imprimir_recibo2.setVisible(true);

    }//GEN-LAST:event_jMenuItem1ActionPerformed

    private void salir_recibo4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_salir_recibo4ActionPerformed
        this.imprimir_factura2.setVisible(false);
        // TODO add your handling code here:
    }//GEN-LAST:event_salir_recibo4ActionPerformed

    private void vistaprevia3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_vistaprevia3ActionPerformed

        Object[] opciones = {"   Si   ", "   No   "};
        int ret = JOptionPane.showOptionDialog(null, "Desea Generar la Factura por Cobranzas? ", "Confirmación", 0, 3, null, opciones, opciones[0]);
        if (ret == 0) {
            GrabarFacturaCobros GrabarFactura = new GrabarFacturaCobros();
            Thread HiloFactura = new Thread(GrabarFactura);
            HiloFactura.start();
            JOptionPane.showMessageDialog(null, "Factura Generada con Éxito");
        }
        // TODO add your handling code here:
    }//GEN-LAST:event_vistaprevia3ActionPerformed

    private void jMenuItem3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem3ActionPerformed
        int nsucu = 1;
        sucursalDAO sucDAO = new sucursalDAO();
        sucursal sucu = null;
        try {
            sucu = sucDAO.buscarId(1);
            String cBoca = sucu.getExpedicion().trim();
            Double nFactura = sucu.getFactura();
            int n = (int) nFactura.doubleValue()+1;
            String formatString = String.format("%%0%dd", 7);
            String formattedString = String.format(formatString, n);
            this.nrofactura.setText(cBoca + "-" + formattedString);
            vencetimbrado.setDate(sucu.getVencetimbrado());
            nrotimbrado.setText(sucu.getNrotimbrado());
        } catch (SQLException ex) {
            Exceptions.printStackTrace(ex);
        }
        VistaFactura Vista = new VistaFactura();
        Thread HiloVista = new Thread(Vista);
        HiloVista.start();

        int nFila = this.jTable1.getSelectedRow();
        this.idcontrol.setText(jTable1.getValueAt(nFila, 0).toString());
        this.imprimir_factura2.setSize(607, 475);
        this.nrorecibo3.setText(this.jTable1.getValueAt(nFila, 1).toString());
        try {
            this.fecha3.setDate(formatoFecha.parse(this.jTable1.getValueAt(nFila, 2).toString()));
        } catch (ParseException ex) {
            Exceptions.printStackTrace(ex);
        }
        this.cuenta3.setText(this.jTable1.getValueAt(nFila, 3).toString().trim());
        this.nombrecliente3.setText(this.jTable1.getValueAt(nFila, 4).toString().trim());

        cReferencia = jTable1.getValueAt(nFila, 0).toString();

        imprimir_factura2.setTitle("Emitir Factura");
        imprimir_factura2.setLocationRelativeTo(null);
        imprimir_factura2.setVisible(true);

        // TODO add your handling code here:
    }//GEN-LAST:event_jMenuItem3ActionPerformed

    private void imprimirlotesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_imprimirlotesActionPerformed
        Object[] opciones = {"   Si   ", "   No   "};
        int opcion = JOptionPane.showOptionDialog(null, "Desea Imprimir la Facturas? ", "Confirmación", 0, 3, null, opciones, opciones[0]);
        if (opcion == 0) {
            LoteRecibo Lote = new LoteRecibo();
            Thread HiloLote = new Thread(Lote);
            HiloLote.start();
        }
        // TODO add your handling code here:
    }//GEN-LAST:event_imprimirlotesActionPerformed

    private void SalirLotesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SalirLotesActionPerformed
        loterecibo.setVisible(false);
        // TODO add your handling code here:
    }//GEN-LAST:event_SalirLotesActionPerformed

    private void jMenuItem4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem4ActionPerformed
        this.loterecibo.setSize(439, 288);
        loterecibo.setTitle("Impresión de Recibos por Lotes");
        loterecibo.setLocationRelativeTo(null);
        loterecibo.setVisible(true);
        // TODO add your handling code here:
    }//GEN-LAST:event_jMenuItem4ActionPerformed

    private void ListarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ListarActionPerformed
        EmiteRecibo Emite = new EmiteRecibo();
        Thread HiloReporte = new Thread(Emite);
        HiloReporte.start();
    }//GEN-LAST:event_ListarActionPerformed

    private void jMenuItem5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem5ActionPerformed
        this.imprimir_recibo.setSize(607, 436);
        int nFila = this.jTable1.getSelectedRow();
        cReferencia = this.jTable1.getValueAt(nFila, 0).toString();
        con = new Conexion();
        stm = con.conectar();
        cSql = "SELECT numero,cliente,sum(amortiza+minteres) as totalpago,cuota,numerocuota,detalle_cobranzas.nrofactura, ";
        cSql += " clientes.nombre,clientes.ruc,cobranzas.fecha ";
        cSql += " FROM cobranzas ";
        cSql += " INNER JOIN detalle_cobranzas ";
        cSql += " ON cobranzas.idpagos=detalle_cobranzas.iddetalle ";
        cSql += " INNER JOIN clientes ";
        cSql += " ON clientes.codigo=cobranzas.cliente ";
        cSql += " WHERE idpagos= '" + cReferencia + "'";
        cSql += " GROUP BY idpagos ";
        try {
            String detalle = "Pago de Cuota Nro ";
            double ntotal = 0;
            results = stm.executeQuery(cSql);
            while (results.next()) {
                this.totalpago.setText(formatea.format(results.getDouble("totalpago")));
                detalle += results.getString("cuota") + "," + "/";
                detalle += results.getString("numerocuota");
            }
            this.Observacion.setText(detalle);
            stm.close();
        } catch (SQLException ex) {
            Exceptions.printStackTrace(ex);
        }

        this.nrorecibo.setText(this.jTable1.getValueAt(nFila, 1).toString());
        try {
            this.fecha.setDate(formatoFecha.parse(this.jTable1.getValueAt(nFila, 2).toString()));
        } catch (ParseException ex) {
            Exceptions.printStackTrace(ex);
        }
        this.cuenta.setText(this.jTable1.getValueAt(nFila, 3).toString().trim());
        this.nombrecliente.setText(this.jTable1.getValueAt(nFila, 4).toString().trim());

        imprimir_recibo.setTitle("Emitir Recibo por Amortización-Int. Ordinario");
        imprimir_recibo.setLocationRelativeTo(null);
        imprimir_recibo.setVisible(true);
        // TODO add your handling code here:
        // TODO add your handling code here:
        // TODO add your handling code here:
    }//GEN-LAST:event_jMenuItem5ActionPerformed

    public void filtro(int nNumeroColumna) {
        trsfiltro.setRowFilter(RowFilter.regexFilter(jTextField1.getText(), nNumeroColumna));
    }

    private void cargarTitulo2() {
        modelo2.addColumn("Ordinario");
        modelo2.addColumn("Punitorio");
        modelo2.addColumn("Gastos");

        int[] anchos = {100, 100, 100};
        for (int i = 0; i < modelo2.getColumnCount(); i++) {
            this.jTable2.getColumnModel().getColumn(i).setPreferredWidth(anchos[i]);
        }

    }

    private void cargarTitulo() {
        modelo.addColumn("REF");
        modelo.addColumn("N° Recibo");
        modelo.addColumn("Fecha");
        modelo.addColumn("Cuenta");
        modelo.addColumn("Denominación Cliente");
        modelo.addColumn("Moneda");
        modelo.addColumn("Sucursal");
        modelo.addColumn("Cotización");
        modelo.addColumn("Total Cobro");
        modelo.addColumn("Asiento");
        modelo.addColumn("Cobrador");
        modelo.addColumn("Usuario");

        int[] anchos = {3, 100, 90, 90, 200, 100, 100, 100, 100, 90, 200, 200};
        for (int i = 0; i < modelo.getColumnCount(); i++) {
            this.jTable1.getColumnModel().getColumn(i).setPreferredWidth(anchos[i]);
        }
        ((DefaultTableCellRenderer) jTable1.getTableHeader().getDefaultRenderer()).setHorizontalAlignment(JLabel.CENTER);// Este código es para centrar las cabeceras de la tabla.
        jTable1.getTableHeader().setFont(new Font("Arial Black", 1, 11));

        Font font = new Font("Arial", Font.BOLD, 10);
        this.jTable1.setFont(font);

        DefaultTableCellRenderer TablaRenderer = new DefaultTableCellRenderer();
        DefaultTableCellRenderer AlinearCentro = new DefaultTableCellRenderer();
        TablaRenderer.setHorizontalAlignment(SwingConstants.RIGHT); // aqui defines donde alinear 
        AlinearCentro.setHorizontalAlignment(SwingConstants.CENTER);

        this.jTable1.getColumnModel().getColumn(0).setMaxWidth(0);
        this.jTable1.getColumnModel().getColumn(0).setMinWidth(0);
        this.jTable1.getTableHeader().getColumnModel().getColumn(0).setMaxWidth(0);
        this.jTable1.getTableHeader().getColumnModel().getColumn(0).setMinWidth(0);

        this.jTable1.getColumnModel().getColumn(5).setCellRenderer(TablaRenderer);
        this.jTable1.getColumnModel().getColumn(6).setCellRenderer(TablaRenderer);
        this.jTable1.getColumnModel().getColumn(7).setCellRenderer(TablaRenderer);
        this.jTable1.getColumnModel().getColumn(8).setCellRenderer(TablaRenderer);
        this.jTable1.getColumnModel().getColumn(9).setCellRenderer(TablaRenderer);
        this.jTable1.getColumnModel().getColumn(10).setCellRenderer(TablaRenderer);

    }

    public void cargarTabla() {
        //Uso la Clase SimpleDateFormat para darle formato al campo fecha

        //Instanciamos esta clase para alinear las celdas numericas a la derecha
        cSql = "SELECT idpagos,numero,sucursal,cobrador,cobranzas.fecha,";
        cSql = cSql + "cliente,moneda,totalpago,asiento,sucambio,codusuario,";
        cSql = cSql + "sucursales.nombre AS nombresucursal,clientes.nombre AS nombrecliente, ";
        cSql = cSql + "monedas.nombre AS nombremoneda,usuarios.last_name AS nombreusuario, ";
        cSql = cSql + "cobradores.nombre as nombrecobrador,cobranzas.cotizacionmoneda ";
        cSql = cSql + "FROM cobranzas ";
        cSql = cSql + "INNER JOIN sucursales ";
        cSql = cSql + "ON sucursales.codigo=cobranzas.sucursal ";
        cSql = cSql + "INNER JOIN clientes ";
        cSql = cSql + "ON clientes.codigo=cobranzas.cliente ";
        cSql = cSql + "INNER JOIN monedas ";
        cSql = cSql + "ON monedas.codigo=cobranzas.moneda ";
        cSql = cSql + "INNER JOIN usuarios ";
        cSql = cSql + "ON usuarios.employee_id=cobranzas.codusuario ";
        cSql = cSql + "INNER JOIN cobradores ";
        cSql = cSql + "ON cobradores.codigo=cobranzas.cobrador ";
        cSql = cSql + " WHERE cobranzas.fecha BETWEEN '" + dFechaInicio + "' AND '" + dFechaFinal + "'";
        cSql = cSql + " ORDER BY cobranzas.fecha";

        DefaultTableCellRenderer TablaRenderer = new DefaultTableCellRenderer();
        TablaRenderer.setHorizontalAlignment(SwingConstants.RIGHT); // aqui defines donde alinear 

        //Llamo a la clase conexion para conectarme a la base de datos
        con = new Conexion();
        stm = con.conectar();
        ResultSet results = null;
        //Antes de Cargar el Jtable Ajustamos el ancho de las columnas con el Ancho que se nos antoje

        int cantidadRegistro = modelo.getRowCount();
        for (int i = 1; i <= cantidadRegistro; i++) {
            modelo.removeRow(0);
        }
        try {
            results = stm.executeQuery(cSql);
            while (results.next()) {
                //Instanciamos la Clase DecimalFormat para darle formato numerico a las celdas.

                // Se crea un array que será una de las filas de la tabla.
                // Se rellena cada posición del array con una de las columnas de la tabla en base de datos.
                Object[] fila = new Object[12]; // Cantidad de columnas en la tabla
                fila[0] = results.getString("idpagos");
                fila[1] = results.getString("numero");
                fila[2] = formatoFecha.format(results.getDate("fecha"));
                fila[3] = results.getString("cliente");
                fila[4] = results.getString("nombrecliente");
                fila[5] = results.getString("nombremoneda");
                fila[6] = results.getString("nombresucursal");
                fila[7] = formatea.format(results.getDouble("cotizacionmoneda"));
                fila[8] = formatea.format(results.getDouble("totalpago"));
                fila[9] = formatea.format(results.getDouble("asiento"));
                fila[10] = results.getString("nombrecobrador");
                fila[11] = results.getString("nombreusuario");
                modelo.addRow(fila);          // Se añade al modelo la fila completa.
            }
            this.jTable1.setRowSorter(new TableRowSorter(modelo));
            this.jTable1.updateUI();
            int cantFilas = this.jTable1.getRowCount();
            if (cantFilas > 0) {
                this.Anular.setEnabled(true);
            } else {
                this.Anular.setEnabled(false);
            }
            stm.close();
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(new JFrame(),
                    "El Sistema No Puede Ingresar a los Datos",
                    "Mensaje del Sistema", JOptionPane.ERROR_MESSAGE);
            System.out.println(ex);
        }
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            javax.swing.UIManager.setLookAndFeel(UIManager.getSystemLookAndFeelClassName());
        } catch (Exception e) {    //</editor-fold>
        }
        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new cobranzaspb().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton Agregar;
    private javax.swing.JButton Anular;
    private com.toedter.calendar.JDateChooser FechaFinal;
    private com.toedter.calendar.JDateChooser FechaInicial;
    private javax.swing.JButton Listar;
    private javax.swing.JTextArea Observacion;
    private javax.swing.JTextArea Observacion1;
    private javax.swing.JButton Salir;
    private javax.swing.JButton SalirLotes;
    private javax.swing.JButton aceptarrecibo;
    private javax.swing.JTextField cuenta;
    private javax.swing.JTextField cuenta1;
    private javax.swing.JTextField cuenta3;
    private javax.swing.JTextField facturafinal;
    private javax.swing.JTextField facturainicial;
    private com.toedter.calendar.JDateChooser fecha;
    private com.toedter.calendar.JDateChooser fecha1;
    private com.toedter.calendar.JDateChooser fecha3;
    private javax.swing.JFormattedTextField gastos;
    private javax.swing.JTextField idcontrol;
    private javax.swing.JDialog imprimir_factura2;
    private javax.swing.JDialog imprimir_recibo;
    private javax.swing.JDialog imprimir_recibo2;
    private javax.swing.JButton imprimirlotes;
    private javax.swing.JFormattedTextField interesmoratorio;
    private javax.swing.JFormattedTextField interesordinario;
    private javax.swing.JFormattedTextField interespunitorio;
    private javax.swing.JComboBox jComboBox1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel24;
    private javax.swing.JLabel jLabel25;
    private javax.swing.JLabel jLabel27;
    private javax.swing.JLabel jLabel28;
    private javax.swing.JLabel jLabel29;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel30;
    private javax.swing.JLabel jLabel31;
    private javax.swing.JLabel jLabel32;
    private javax.swing.JLabel jLabel33;
    private javax.swing.JLabel jLabel34;
    private javax.swing.JLabel jLabel35;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JMenuItem jMenuItem2;
    private javax.swing.JMenuItem jMenuItem3;
    private javax.swing.JMenuItem jMenuItem4;
    private javax.swing.JMenuItem jMenuItem5;
    private javax.swing.JPanel jPanel10;
    private javax.swing.JPanel jPanel11;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JPanel jPanel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JScrollPane jScrollPane6;
    private javax.swing.JPopupMenu.Separator jSeparator1;
    private javax.swing.JPopupMenu.Separator jSeparator2;
    private javax.swing.JPopupMenu.Separator jSeparator3;
    private javax.swing.JPopupMenu.Separator jSeparator4;
    private javax.swing.JTable jTable1;
    private javax.swing.JTable jTable2;
    private javax.swing.JTextField jTextField1;
    private org.edisoncor.gui.label.LabelMetric labelMetric1;
    private javax.swing.JDialog loterecibo;
    private javax.swing.JTextField nombrecliente;
    private javax.swing.JTextField nombrecliente2;
    private javax.swing.JTextField nombrecliente3;
    private javax.swing.JTextField nrofactura;
    private javax.swing.JTextField nrorecibo;
    private javax.swing.JTextField nrorecibo1;
    private javax.swing.JTextField nrorecibo3;
    private javax.swing.JTextField nrotimbrado;
    private javax.swing.JTextArea observacion;
    private org.edisoncor.gui.panel.Panel panel1;
    private javax.swing.JButton refrescar;
    private javax.swing.JButton salir_recibo;
    private javax.swing.JButton salir_recibo2;
    private javax.swing.JButton salir_recibo4;
    private javax.swing.JDialog tablaaux;
    private javax.swing.JFormattedTextField totalpago;
    private javax.swing.JFormattedTextField totalpago2;
    private com.toedter.calendar.JDateChooser vencetimbrado;
    private javax.swing.JButton vistaprevia;
    private javax.swing.JButton vistaprevia3;
    // End of variables declaration//GEN-END:variables

    private class GenerarOp extends Thread {

        public void run() {
            con = new Conexion();
            stm = con.conectar();
            try {
                Map parameters = new HashMap();
                int nFila = jTable1.getSelectedRow();
                //Ahora que hay parametros le enviamos uno con el mismo nombre del que creamos
                //en el reporte
                String num = jTable1.getValueAt(nFila, 8).toString();
                num = num.replace(".", "");
                num = num.replace(",", ".");
                numero_a_letras numero = new numero_a_letras();

                parameters.put("Referencia", jTable1.getValueAt(nFila, 0).toString());
                parameters.put("Letra", numero.Convertir(num, true, 1));
                JasperReport jr = null;
                URL url = getClass().getClassLoader().getResource("Reports/orden_pago_prestamos.jasper");
                jr = (JasperReport) JRLoader.loadObject(url);
                JasperPrint masterPrint = null;
                //Se le incluye el parametro con el nombre parameters porque asi lo definimos
                masterPrint = JasperFillManager.fillReport(jr, parameters, stm.getConnection());
                JasperViewer ventana = new JasperViewer(masterPrint, false);
                ventana.setTitle("Vista Previa");
                ventana.setVisible(true);
            } catch (Exception e) {
                JDialog.setDefaultLookAndFeelDecorated(true);
                JOptionPane.showMessageDialog(null, e.getMessage(), "Error", 1);
            }
        }
    }

    private class VistaFactura extends Thread {

        public void run() {
            con = new Conexion();
            stm = con.conectar();
            String cSql = "SELECT idpagos,numero,cobrador,fecha,cliente,vence,diamora,cobranzas.moneda,totalpago,clientes.nombre, ";
            cSql += "SUM(gastos_cobranzas) AS tgastos,SUM(punitorio) AS tpunitorio,";
            cSql += "SUM(mora) AS tmora,0.0 as tinteres ";
            cSql += " FROM cobranzas ";
            cSql += " INNER JOIN detalle_cobranzas ";
            cSql += " ON cobranzas.idpagos=detalle_cobranzas.iddetalle ";
            cSql += " INNER JOIN clientes ";
            cSql += " ON clientes.codigo=cobranzas.cliente ";
            cSql += " WHERE idpagos= '" + cReferencia + "'";
            cSql += " GROUP BY idpagos";

            try {
                results = stm.executeQuery(cSql);
                while (results.next()) {
                    interespunitorio.setText(formatea.format(results.getDouble("tpunitorio")));
                    interesmoratorio.setText(formatea.format(results.getDouble("tmora")));
                    interesordinario.setText(formatea.format(results.getDouble("tinteres")));
                    gastos.setText(formatea.format(results.getDouble("tgastos")));
                }
                stm.close();
            } catch (SQLException ex) {
                Exceptions.printStackTrace(ex);
            }
        }
    }

    private class GeneraReciboDinero extends Thread {

        public void run() {
            con = new Conexion();
            stm = con.conectar();

            try {
                Map parameters = new HashMap();
                int nFila = jTable1.getSelectedRow();
                //Ahora que hay parametros le enviamos uno con el mismo nombre del que creamos
                //en el reporte
                String num = totalpago.getText();
                num = num.replace(".", "");
                num = num.replace(",", ".");
                numero_a_letras numero = new numero_a_letras();

                parameters.put("Letra", numero.Convertir(num, true, 1));
                //parameters.put("cNombreEmpresa", Config.cNombreEmpresa);
                parameters.put("cReferencia", jTable1.getValueAt(nFila, 0).toString());
                // parameters.put("Observacion", Observacion.getText().toString());
                JasperReport jr = null;
                //  URL url = getClass().getClassLoader().getResource("Reports/recibodineropb.jasper");
                URL url = getClass().getClassLoader().getResource("Reports/recibo_cobranza_crediefectivo.jasper");
                jr = (JasperReport) JRLoader.loadObject(url);
                JasperPrint masterPrint = null;
                //Se le incluye el parametro con el nombre parameters porque asi lo definimos
                masterPrint = JasperFillManager.fillReport(jr, parameters, stm.getConnection());
                JasperViewer ventana = new JasperViewer(masterPrint, false);
                ventana.setTitle("Vista Previa");
                ventana.setVisible(true);
            } catch (Exception e) {
                JDialog.setDefaultLookAndFeelDecorated(true);
                JOptionPane.showMessageDialog(null, e.getMessage(), "Error", 1);
            }
        }
    }

    private class GenerarLiquidacion extends Thread {

        public void run() {
            con = new Conexion();
            stm = con.conectar();
            try {
                Map parameters = new HashMap();
                int nFila = jTable1.getSelectedRow();
                //Ahora que hay parametros le enviamos uno con el mismo nombre del que creamos
                //en el reporte
                parameters.put("cNombreEmpresa", Config.cNombreEmpresa);
                parameters.put("nNumeroPrestamo", idcontrol.getText().trim());
                JasperReport jr = null;
                URL url = getClass().getClassLoader().getResource("Reports/liquidacion_prestamos.jasper");
                jr = (JasperReport) JRLoader.loadObject(url);
                JasperPrint masterPrint = null;
                //Se le incluye el parametro con el nombre parameters porque asi lo definimos
                masterPrint = JasperFillManager.fillReport(jr, parameters, stm.getConnection());
                JasperViewer ventana = new JasperViewer(masterPrint, false);
                ventana.setTitle("Vista Previa");
                ventana.setVisible(true);
            } catch (Exception e) {
                JDialog.setDefaultLookAndFeelDecorated(true);
                JOptionPane.showMessageDialog(null, e.getMessage(), "Error", 1);
            }
        }
    }

    private class GeneraReciboCapital extends Thread {

        public void run() {
            con = new Conexion();
            stm = con.conectar();
            try {
                Map parameters = new HashMap();
                int nFila = jTable1.getSelectedRow();
                //Ahora que hay parametros le enviamos uno con el mismo nombre del que creamos
                //en el reporte
                String num = totalpago2.getText();
                num = num.replace(".", "");
                num = num.replace(",", ".");
                numero_a_letras numero = new numero_a_letras();

                parameters.put("Letra", numero.Convertir(num, true, 1));
                parameters.put("cNombreEmpresa", Config.cNombreEmpresa);
                parameters.put("cReferencia", cReferencia);
                parameters.put("Observacion", Observacion1.getText().toString());

                JasperReport jr = null;
                URL url = getClass().getClassLoader().getResource("Reports/recibo_dinero_capital.jasper");
                jr = (JasperReport) JRLoader.loadObject(url);
                JasperPrint masterPrint = null;
                //Se le incluye el parametro con el nombre parameters porque asi lo definimos
                masterPrint = JasperFillManager.fillReport(jr, parameters, stm.getConnection());
                JasperViewer ventana = new JasperViewer(masterPrint, false);
                ventana.setTitle("Vista Previa");
                ventana.setVisible(true);
            } catch (Exception e) {
                JDialog.setDefaultLookAndFeelDecorated(true);
                JOptionPane.showMessageDialog(null, e.getMessage(), "Error", 1);
            }
        }
    }

    private class GenFacturaCobros extends Thread {

        public void run() {
            con = new Conexion();
            stm = con.conectar();
            String cSql = "SELECT factura+1  AS nRegistro FROM sucursales";
            try {
                results = stm.executeQuery(cSql);
                if (results.next()) {
                    nrofactura.setText(results.getString("nRegistro"));
                }
                stm.close();
            } catch (SQLException ex) {
                Exceptions.printStackTrace(ex);
            }
        }
    }

    private class GrabarFacturaCobros extends Thread {

        public void run() {
            //SE CAPTURA LOS DATOS DE LA CABECERA
            //Dando formato a los datos tipo Fecha

            Date FechaProceso = ODate.de_java_a_sql(fecha3.getDate());
            Date PrimerVence = ODate.de_java_a_sql(fecha3.getDate());
            Date VenceTimbrado = ODate.de_java_a_sql(vencetimbrado.getDate());
            String cNumeroFactura = nrofactura.getText();
            cNumeroFactura = cNumeroFactura.replace("-", "");
            String cContadorFactura = cNumeroFactura.substring(6, 13);
      
            String cFactura = nrofactura.getText();
            String cCantidad = "1";
            String cmoneda = Config.cMonedaDefecto;

            double montoiva = 0.00;
            String cOrdinario = "0";

            String cMora = interesmoratorio.getText();
            cMora = cMora.replace(".", "");
            cMora = cMora.replace(",", ".");

            String cPunitorio = interespunitorio.getText();
            cPunitorio = cPunitorio.replace(".", "");
            cPunitorio = cPunitorio.replace(",", ".");

            String cGastos = gastos.getText();
            cGastos = cGastos.replace(".", "");
            cGastos = cGastos.replace(",", ".");

            double TotalNeto = Double.valueOf(cMora) + Double.valueOf(cPunitorio) + Double.valueOf(cGastos);
            String cTotalNeto = String.valueOf(TotalNeto);
            double montoiva10 = Math.round(TotalNeto / 11);
            String cImpiva = String.valueOf(montoiva10);
            String cIva = "10";
            String cCotizacion = "1";

            con = new Conexion();
            stm = con.conectar();
            String cCodGasto = null;
            ResultSet results = null;
            Connection conn = null;

            try {
                conn = stm.getConnection();
                conn.setAutoCommit(false);

                String cSqlCab = "INSERT INTO cabecera_ventas (creferencia,fecha,factura,formatofactura,vencimiento,vencimientotimbrado,nrotimbrado,cliente,sucursal,moneda,giraduria,";
                cSqlCab += "comprobante,cotizacion,vendedor,caja,exentas,gravadas10,gravadas5,totalneto,observacion,idusuario)";
                cSqlCab += "VALUES ('" + cReferencia + "','" + FechaProceso + "','" + cNumeroFactura+"','"+cFactura + "','" + PrimerVence+"','"+VenceTimbrado+"','"+nrotimbrado.getText()+ "','" + cuenta3.getText() + "','" + "1" + "','" + cmoneda + "','" + "1" + "','";
                cSqlCab += "2" + "','" + cCotizacion + "','" + "1" + "','" + "1" + "','" + "0" + "','" + cTotalNeto + "','" + "0" + "','" + cTotalNeto + "','" + observacion.getText().toString() + "','" + Config.CodUsuario + "')";
                try {
                    stm.executeUpdate(cSqlCab);
                } catch (SQLException ex) {
                    Exceptions.printStackTrace(ex);
                }

                //Se graban los intereses moratorios
                if (Double.valueOf(cMora) > 0) {
                    montoiva = Double.valueOf(cMora);
                    montoiva = Math.round(montoiva / 11);
                    cImpiva = String.valueOf(montoiva);
                    String cSqlDetalle2 = "INSERT INTO detalle_ventas(dreferencia, codprod, cantidad, prcosto, precio, monto, impiva, porcentaje)";
                    cSqlDetalle2 += "VALUES ('" + cReferencia + "','" + Config.cCodMora + "','" + cCantidad + "','" + '0' + "','" + cMora + "','" + cMora + "','" + cImpiva + "','" + cIva + "')";

                    try {
                        stm.executeUpdate(cSqlDetalle2);
                    } catch (SQLException ex) {
                        Exceptions.printStackTrace(ex);
                    }
                }

                //Se graban los intereses punitorio
                if (Double.valueOf(cPunitorio) > 0) {
                    montoiva = Double.valueOf(cPunitorio);
                    montoiva = Math.round(montoiva / 11);
                    cImpiva = String.valueOf(montoiva);
                    String cSqlDetalle3 = "INSERT INTO detalle_ventas(dreferencia, codprod, cantidad, prcosto, precio, monto, impiva, porcentaje)";
                    cSqlDetalle3 += "VALUES ('" + cReferencia + "','" + Config.cCodPunitorio + "','" + cCantidad + "','" + '0' + "','" + cPunitorio + "','" + cPunitorio + "','" + cImpiva + "','" + cIva + "')";

                    try {
                        stm.executeUpdate(cSqlDetalle3);
                    } catch (SQLException ex) {
                        Exceptions.printStackTrace(ex);
                    }
                }

                //Se graban los gastos
                if (Double.valueOf(cGastos) > 0) {
                    montoiva = Double.valueOf(cGastos);
                    montoiva = Math.round(montoiva / 11);
                    cImpiva = String.valueOf(montoiva);
                    String cSqlDetalle4 = "INSERT INTO detalle_ventas(dreferencia, codprod, cantidad, prcosto, precio, monto, impiva, porcentaje)";
                    cSqlDetalle4 += "VALUES ('" + cReferencia + "','" + Config.cCodGastos + "','" + cCantidad + "','" + '0' + "','" + cGastos + "','" + cGastos + "','" + cImpiva + "','" + cIva + "')";

                    try {
                        stm.executeUpdate(cSqlDetalle4);
                    } catch (SQLException ex) {
                        Exceptions.printStackTrace(ex);
                    }
                }

                String cSqlFactura = "UPDATE sucursales SET factura= " + Double.valueOf(cContadorFactura)+1;

                try {
                    stm.executeUpdate(cSqlFactura);
                } catch (SQLException ex) {
                    Exceptions.printStackTrace(ex);
                }

                String cSqlControlFactura2 = "INSERT INTO facturacobranzas (idcobranzas,idfactura,opcion) VALUES('" + cReferencia + "','" + cReferencia + "','" + '1' + "')";
                try {
                    stm.executeUpdate(cSqlControlFactura2);
                    conn.commit();
                    stm.close();
                } catch (SQLException ex) {
                    conn.rollback();
                    stm.close();
                    JOptionPane.showMessageDialog(null, "La Factura ya fue Generada, Verifique");
                    Exceptions.printStackTrace(ex);
                }
            } catch (SQLException ex) {
                Exceptions.printStackTrace(ex);
            }
        }
    }

    private class ImprimirFacturaCobranzas extends Thread {

        public void run() {
            try {
                Map parameters = new HashMap();
                //Ahora que hay parametros le enviamos uno con el mismo nombre del que creamos
                //en el reporte

                String cMora = interesmoratorio.getText();
                cMora = cMora.replace(".", "");
                cMora = cMora.replace(",", ".");

                String cPunitorio = interespunitorio.getText();
                cPunitorio = cPunitorio.replace(".", "");
                cPunitorio = cPunitorio.replace(",", ".");

                String cGastos = gastos.getText();
                cGastos = cGastos.replace(".", "");
                cGastos = cGastos.replace(",", ".");

                double TotalNeto = Double.valueOf(cMora) + Double.valueOf(cPunitorio) + Double.valueOf(cGastos);

                String num = String.valueOf(TotalNeto);
                System.out.println(idcontrol.getText());

                num = num.replace(".", "");
                num = num.replace(",", ".");
                numero_a_letras numero = new numero_a_letras();

                parameters.put("Letra", numero.Convertir(num, true, 1));
                parameters.put("cReferencia", idcontrol.getText());
                JasperReport jr = null;
                //URL url = getClass().getClassLoader().getResource("Reports/factura.jasper");
                URL url = getClass().getClassLoader().getResource("Reports/" + Config.cNombreFactura.toString());
                jr = (JasperReport) JRLoader.loadObject(url);
                JasperPrint masterPrint = null;
                //Se le incluye el parametro con el nombre parameters porque asi lo definimos
                masterPrint = JasperFillManager.fillReport(jr, parameters, stm.getConnection());
                JasperViewer ventana = new JasperViewer(masterPrint, false);
                ventana.setTitle("Vista Previa");
                ventana.setVisible(true);
            } catch (Exception e) {
                JDialog.setDefaultLookAndFeelDecorated(true);
                JOptionPane.showMessageDialog(null, e.getMessage(), "Error", 1);
            }
        }
    }

    private class LoteRecibo extends Thread {

        public void run() {
            con = new Conexion();
            stm = con.conectar();
            stm2 = con.conectar();
            String cSql = "SELECT creferencia,totalneto,factura FROM cabecera_ventas WHERE factura>=" + facturainicial.getText() + " AND factura<= " + facturafinal.getText() + " ORDER BY factura ";
            try {
                results = stm.executeQuery(cSql);
                while (results.next()) {
                    cReferencia = results.getString("creferencia");
//                  nTotalNeto = results.getDouble("totalneto");
                    System.out.println(results.getString("creferencia"));

                    try {
                        Map parameters = new HashMap();
                        //Ahora que hay parametros le enviamos uno con el mismo nombre del que creamos
                        //en el reporte
                        //                    String num = String.valueOf(nTotalNeto);
                        numero_a_letras numero = new numero_a_letras();

                        //                  parameters.put("Letra", numero.Convertir(num, true, 1));
                        parameters.put("cNombreEmpresa", Config.cNombreEmpresa);
                        parameters.put("cReferencia", cReferencia);
                        JasperReport jr = null;
                        //URL url = getClass().getClassLoader().getResource("Reports/factura.jasper");
                        URL url = getClass().getClassLoader().getResource("Reports/" + Config.cNombreFactura.toString());
                        jr = (JasperReport) JRLoader.loadObject(url);
                        JasperPrint masterPrint = null;
                        //Se le incluye el parametro con el nombre parameters porque asi lo definimos
                        masterPrint = JasperFillManager.fillReport(jr, parameters, stm2.getConnection());
                        //         JasperViewer ventana = new JasperViewer(masterPrint, false);
                        //         ventana.setTitle("Vista Previa");
                        //          ventana.setVisible(true);

                        //Enviar Directo a Impresora
                        JasperPrintManager.printReport(masterPrint, false);
                    } catch (Exception e) {
                        JDialog.setDefaultLookAndFeelDecorated(true);
                        JOptionPane.showMessageDialog(null, e.getMessage(), "Error", 1);
                    }
                }
                stm.close();
                stm2.close();
            } catch (Exception e) {
                Exceptions.printStackTrace(e);
            }
        }
    }

    private class GrillaCobranzas extends Thread {

        public void run() {

            Date dFechaInicio = ODate.de_java_a_sql(FechaInicial.getDate());
            Date dFechaFinal = ODate.de_java_a_sql(FechaFinal.getDate());

            //Antes de Cargar el Jtable Ajustamos el ancho de las columnas con el Ancho que se nos antoje
            int cantidadRegistro = modelo.getRowCount();
            for (int i = 1; i <= cantidadRegistro; i++) {
                modelo.removeRow(0);
            }

            cobranzaDAO DAOCOB = new cobranzaDAO();
            try {
                for (cobranza cobros : DAOCOB.MostrarxFecha(dFechaInicio, dFechaFinal)) {
                    System.out.println(cobros.getNumero());
                    String Datos[] = {cobros.getIdpagos(), String.valueOf(cobros.getNumero()), formatoFecha.format(cobros.getFecha()), String.valueOf(cobros.getCliente().getCodigo()), cobros.getCliente().getNombre(), cobros.getMoneda().getNombre(), cobros.getSucursal().getNombre(), formatea.format(cobros.getCotizacionmoneda()), formatea.format(cobros.getTotalpago()), String.valueOf(cobros.getAsiento()), cobros.getCobrador().getNombre(), cobros.getCodusuario().getFirst_name()};
                    modelo.addRow(Datos);
                }
            } catch (SQLException e) {
                JOptionPane.showMessageDialog(null, "ERROR: " + e.getMessage());
            }

            jTable1.setRowSorter(new TableRowSorter(modelo));
            int cantFilas = jTable1.getRowCount();
            if (cantFilas > 0) {
                Agregar.setEnabled(true);
                Anular.setEnabled(true);
                Listar.setEnabled(true);
                Salir.setEnabled(true);
            } else {
                Agregar.setEnabled(true);
                Listar.setEnabled(false);
                Anular.setEnabled(false);
                Salir.setEnabled(true);
            }
        }
    }

    private class EmiteRecibo extends Thread {

        public void run() {
            con = new Conexion();
            stm = con.conectar();
            configuracionDAO configDAO = new configuracionDAO();
            configuracion config = configDAO.consultar();
            String cNombreRecibo = config.getNombrerecibo();
            int nFila = jTable1.getSelectedRow();
            String cCliente = jTable1.getValueAt(nFila, 3).toString();
            System.out.println("Cliente " + cCliente);
            try {
                Map parameters = new HashMap();
                //Ahora que hay parametros le enviamos uno con el mismo nombre del que creamos
                //en el reporte
                String num = jTable1.getValueAt(nFila, 8).toString();
                num = num.replace(".", "").replace(",", ".");
                numero_a_letras numero = new numero_a_letras();
                parameters.put("cNombreEmpresa", Config.cNombreEmpresa);
                parameters.put("cReferencia", jTable1.getValueAt(nFila,0).toString());
                parameters.put("cCliente", cCliente.toString());
                parameters.put("Letra", numero.Convertir(num, true, 1));

                JasperReport jr = null;
                URL url = getClass().getClassLoader().getResource("Reports/" + cNombreRecibo.toString());
                jr = (JasperReport) JRLoader.loadObject(url);
                JasperPrint masterPrint = null;
                //Se le incluye el parametro con el nombre parameters porque asi lo definimos
                masterPrint = JasperFillManager.fillReport(jr, parameters, stm.getConnection());
                JasperViewer ventana = new JasperViewer(masterPrint, false);
                ventana.setTitle("Vista Previa");
                ventana.setVisible(true);
                // }
            } catch (Exception e) {
                Exceptions.printStackTrace(e);
            }
        }
    }

}
