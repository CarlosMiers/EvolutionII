/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Vista;

import Clases.Config;
import Clases.ConvertirMayusculas;
import Clases.Job;
import Clases.UUID;
import Clases.clsExportarExcel;
import Clases.jcThread;
import Conexion.BDConexion;
import Conexion.Conexion;
import Conexion.Control;
import Conexion.ObtenerFecha;
import DAO.bancoplazaDAO;
import DAO.cierre_cobranzaDAO;
import DAO.clienteDAO;
import DAO.cobroplanillaDAO;
import DAO.cuenta_clienteDAO;
import DAO.formapagoDAO;
import DAO.gestioncobroDAO;
import DAO.giraduriaDAO;
import DAO.planillaDAO;
import Modelo.Tablas;
import Modelo.bancoplaza;
import Modelo.cierre_cobranza;
import Modelo.cliente;
import Modelo.cobroplanilla;
import Modelo.giraduria;
import Modelo.planilla;
import Modelo.cuenta_clientes;
import Modelo.formapago;
import Modelo.gestioncobro;
import java.awt.Color;
import java.awt.Font;
import java.awt.event.ActionEvent;
import java.awt.event.FocusEvent;
import java.awt.event.KeyAdapter;
import java.awt.event.KeyEvent;
import java.awt.event.MouseEvent;
import java.awt.event.WindowEvent;
import java.beans.PropertyChangeEvent;
import java.io.IOException;
import java.math.BigDecimal;
import static java.math.BigDecimal.ZERO;
import java.net.URL;
import java.sql.Date;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.text.DecimalFormat;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Calendar;
import java.util.GregorianCalendar;
import java.util.HashMap;
import java.util.Map;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.ComboBoxModel;
import javax.swing.JComboBox;
import javax.swing.JDialog;
import javax.swing.JFrame;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JScrollPane;
import javax.swing.RowFilter;
import javax.swing.UIManager;
import javax.swing.JTable;
import javax.swing.SwingConstants;
import javax.swing.table.DefaultTableCellRenderer;
import javax.swing.table.TableRowSorter;
import net.sf.jasperreports.engine.JasperFillManager;
import net.sf.jasperreports.engine.JasperPrint;
import net.sf.jasperreports.engine.JasperReport;
import net.sf.jasperreports.engine.util.JRLoader;
import net.sf.jasperreports.view.JasperViewer;
import org.openide.util.Exceptions;

/**
 *
 */
public class planillagiraduria extends javax.swing.JFrame {

    Conexion con = null;
    Statement stm = null;
    Tablas modelo = new Tablas();
    Tablas modelosucursal = new Tablas();
    Tablas modeloformapago = new Tablas();
    Tablas modelobancoplaza = new Tablas();
    Tablas modelogiraduria = new Tablas();
    Tablas modelobanco = new Tablas();
    Tablas modelocliente = new Tablas();
    Tablas modelocobro = new Tablas();
    Tablas modelocobrosocio = new Tablas();
    Tablas modelodetalle = new Tablas();
    JScrollPane scroll = new JScrollPane();
    private TableRowSorter trsfiltro, trsfiltrosuc, trsfiltrocli, trsfiltrogira, trsfiltrocasa, trsfiltroforma, trsfiltroplaza;
    SimpleDateFormat formatoFecha = new SimpleDateFormat("dd/MM/yyyy");
    DecimalFormat formatea = new DecimalFormat("###,###.##");
    DecimalFormat formatosinpunto = new DecimalFormat("######");
    String cSql, cPlanilla = null;
    ObtenerFecha ODate = new ObtenerFecha();
    Calendar c2 = new GregorianCalendar();
    String cTasa, referencia = null;
    double comision;
    String cReportePlanilla = null;
    clsExportarExcel obj;

    /**
     * Creates new form Template
     */
    public planillagiraduria() {
        initComponents();
        //this.jTable1.setShowHorizontalLines(false);
        //  this.setAlwaysOnTop(true); Convierte en Modal un jFrame
        this.jTable1.setShowGrid(false);
        this.jTable1.setOpaque(true);
        this.jTable1.setBackground(new Color(204, 204, 255));
        this.jTable1.setForeground(Color.BLACK);
        this.setLocationRelativeTo(null); //Centramos el formulario
        this.idControl.setVisible(false);
        this.idControl.setText("0");
        this.Inicializar();
        this.cargarTitulo();
        this.TitCobranza();
        this.TitGir();
        this.TitClie();
        this.TitForma();
        this.TitCobranzaSocio();
        this.TituloDetalle();
        this.TitBco();
        GrillaOCredito GrillaOC = new GrillaOCredito();
        Thread HiloGrilla = new Thread(GrillaOC);
        HiloGrilla.start();
    }

    Control hand = new Control();

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        BGiraduria = new javax.swing.JDialog();
        jPanel17 = new javax.swing.JPanel();
        combogiraduria = new javax.swing.JComboBox();
        jTBuscarGiraduria = new javax.swing.JTextField();
        jScrollPane6 = new javax.swing.JScrollPane();
        tablagiraduria = new javax.swing.JTable();
        jPanel18 = new javax.swing.JPanel();
        AceptarGir = new javax.swing.JButton();
        SalirGir = new javax.swing.JButton();
        generar = new javax.swing.JDialog();
        labelTask1 = new org.edisoncor.gui.label.LabelTask();
        jPanel1 = new javax.swing.JPanel();
        codgiraduria = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        BuscarCodGiraduria = new javax.swing.JButton();
        nomgiraduria = new javax.swing.JTextField();
        jProgressBar1 = new javax.swing.JProgressBar();
        jPanel8 = new javax.swing.JPanel();
        dFechaI = new com.toedter.calendar.JDateChooser();
        jLabel16 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        dFechaF = new com.toedter.calendar.JDateChooser();
        incluir = new javax.swing.JCheckBox();
        jPanel4 = new javax.swing.JPanel();
        gestionar = new javax.swing.JButton();
        salirgestion = new javax.swing.JButton();
        cobroxgiraduria = new javax.swing.JDialog();
        jPanel5 = new javax.swing.JPanel();
        jLabel15 = new javax.swing.JLabel();
        jPanel6 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        tablacobranza = new javax.swing.JTable();
        jPanel7 = new javax.swing.JPanel();
        jLabel4 = new javax.swing.JLabel();
        nroplanilla = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        fechaplanilla = new com.toedter.calendar.JDateChooser();
        jLabel6 = new javax.swing.JLabel();
        saldoplanilla = new javax.swing.JFormattedTextField();
        jLabel7 = new javax.swing.JLabel();
        fechacobro = new com.toedter.calendar.JDateChooser();
        jLabel9 = new javax.swing.JLabel();
        codcobro = new javax.swing.JTextField();
        BuscarFPago = new javax.swing.JButton();
        jLabel10 = new javax.swing.JLabel();
        cargobanco = new javax.swing.JTextField();
        BuscarBanco = new javax.swing.JButton();
        jLabel11 = new javax.swing.JLabel();
        nrocheque = new javax.swing.JTextField();
        jLabel12 = new javax.swing.JLabel();
        vencepago = new com.toedter.calendar.JDateChooser();
        jLabel13 = new javax.swing.JLabel();
        importecobro = new javax.swing.JFormattedTextField();
        BotonAgregar = new javax.swing.JButton();
        BotonBorrar = new javax.swing.JButton();
        nombreformapago = new javax.swing.JTextField();
        nombrecargobanco = new javax.swing.JTextField();
        neto = new javax.swing.JFormattedTextField();
        jLabel14 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        botonconfirmar = new javax.swing.JButton();
        generarInteres = new javax.swing.JCheckBox();
        BFormaPago = new javax.swing.JDialog();
        jPanel19 = new javax.swing.JPanel();
        comboformapago = new javax.swing.JComboBox();
        jTBuscarFormaPago = new javax.swing.JTextField();
        jScrollPane7 = new javax.swing.JScrollPane();
        tablaformapago = new javax.swing.JTable();
        jPanel20 = new javax.swing.JPanel();
        AceptarFormaPago = new javax.swing.JButton();
        SalirFormaPago = new javax.swing.JButton();
        wBuscarBco = new javax.swing.JDialog();
        jPanel21 = new javax.swing.JPanel();
        combobanco = new javax.swing.JComboBox();
        JTBuscarBanco = new javax.swing.JTextField();
        jScrollPane8 = new javax.swing.JScrollPane();
        tablabanco = new javax.swing.JTable();
        jPanel22 = new javax.swing.JPanel();
        AceptarBco = new javax.swing.JButton();
        SalirBco = new javax.swing.JButton();
        cobroxsocio = new javax.swing.JDialog();
        jPanel9 = new javax.swing.JPanel();
        jLabel17 = new javax.swing.JLabel();
        jPanel10 = new javax.swing.JPanel();
        jScrollPane3 = new javax.swing.JScrollPane();
        tablacobranzasocio = new javax.swing.JTable();
        jPanel11 = new javax.swing.JPanel();
        jLabel18 = new javax.swing.JLabel();
        nroplanillasocio = new javax.swing.JTextField();
        jLabel19 = new javax.swing.JLabel();
        fechaplanillasocio = new com.toedter.calendar.JDateChooser();
        jLabel20 = new javax.swing.JLabel();
        saldosocio = new javax.swing.JFormattedTextField();
        jLabel22 = new javax.swing.JLabel();
        socio = new javax.swing.JTextField();
        BuscarSocio = new javax.swing.JButton();
        jLabel26 = new javax.swing.JLabel();
        importecobrosocio = new javax.swing.JFormattedTextField();
        BotonGestion = new javax.swing.JButton();
        BotonConfirmar = new javax.swing.JButton();
        nombresocio = new javax.swing.JTextField();
        netosocio = new javax.swing.JFormattedTextField();
        jLabel27 = new javax.swing.JLabel();
        BotonSalirSocio = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        BCliente = new javax.swing.JDialog();
        jPanel14 = new javax.swing.JPanel();
        combocliente = new javax.swing.JComboBox();
        jTBuscarCliente = new javax.swing.JTextField();
        jScrollPane5 = new javax.swing.JScrollPane();
        tablacliente = new javax.swing.JTable();
        jPanel16 = new javax.swing.JPanel();
        AceptarCli = new javax.swing.JButton();
        SalirCli = new javax.swing.JButton();
        detalleplanilla = new javax.swing.JDialog();
        jPanel12 = new javax.swing.JPanel();
        jScrollPane4 = new javax.swing.JScrollPane();
        tabladetalle = new javax.swing.JTable();
        jPanel13 = new javax.swing.JPanel();
        jButton3 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        panel1 = new org.edisoncor.gui.panel.Panel();
        etiquetacredito = new org.edisoncor.gui.label.LabelMetric();
        jComboBox1 = new javax.swing.JComboBox();
        buscarcadena = new javax.swing.JTextField();
        jPanel2 = new javax.swing.JPanel();
        Modificar = new javax.swing.JButton();
        Agregar = new javax.swing.JButton();
        Eliminar = new javax.swing.JButton();
        Listar = new javax.swing.JButton();
        SalirCompleto = new javax.swing.JButton();
        idControl = new javax.swing.JTextField();
        jPanel3 = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        dInicial = new com.toedter.calendar.JDateChooser();
        jLabel8 = new javax.swing.JLabel();
        dFinal = new com.toedter.calendar.JDateChooser();
        refrescar = new javax.swing.JButton();
        verdetalles = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        jMenuItem3 = new javax.swing.JMenuItem();
        jSeparator2 = new javax.swing.JPopupMenu.Separator();
        jMenuItem2 = new javax.swing.JMenuItem();
        jSeparator3 = new javax.swing.JPopupMenu.Separator();
        jMenuItem1 = new javax.swing.JMenuItem();
        jSeparator1 = new javax.swing.JPopupMenu.Separator();
        jMenuItem4 = new javax.swing.JMenuItem();
        jSeparator4 = new javax.swing.JPopupMenu.Separator();
        jMenuItem5 = new javax.swing.JMenuItem();
        jSeparator5 = new javax.swing.JPopupMenu.Separator();
        jMenuItem6 = new javax.swing.JMenuItem();

        BGiraduria.setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        BGiraduria.setTitle("null");

        jPanel17.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));

        combogiraduria.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        combogiraduria.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Buscar por Nombre", "Buscar por Código" }));
        combogiraduria.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        combogiraduria.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                combogiraduriaActionPerformed(evt);
            }
        });

        jTBuscarGiraduria.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jTBuscarGiraduria.setText(org.openide.util.NbBundle.getMessage(planillagiraduria.class, "ventas.jTBuscarClientes.text")); // NOI18N
        jTBuscarGiraduria.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTBuscarGiraduriaActionPerformed(evt);
            }
        });
        jTBuscarGiraduria.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jTBuscarGiraduriaKeyPressed(evt);
            }
        });

        javax.swing.GroupLayout jPanel17Layout = new javax.swing.GroupLayout(jPanel17);
        jPanel17.setLayout(jPanel17Layout);
        jPanel17Layout.setHorizontalGroup(
            jPanel17Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel17Layout.createSequentialGroup()
                .addComponent(combogiraduria, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jTBuscarGiraduria, javax.swing.GroupLayout.PREFERRED_SIZE, 284, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel17Layout.setVerticalGroup(
            jPanel17Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel17Layout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addGroup(jPanel17Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(combogiraduria, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTBuscarGiraduria, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(19, Short.MAX_VALUE))
        );

        tablagiraduria.setModel(modelogiraduria);
        tablagiraduria.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tablagiraduriaMouseClicked(evt);
            }
        });
        tablagiraduria.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                tablagiraduriaKeyPressed(evt);
            }
        });
        jScrollPane6.setViewportView(tablagiraduria);

        jPanel18.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));

        AceptarGir.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        AceptarGir.setText(org.openide.util.NbBundle.getMessage(planillagiraduria.class, "ventas.Aceptarcliente.text")); // NOI18N
        AceptarGir.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        AceptarGir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AceptarGirActionPerformed(evt);
            }
        });

        SalirGir.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        SalirGir.setText(org.openide.util.NbBundle.getMessage(planillagiraduria.class, "ventas.SalirCliente.text")); // NOI18N
        SalirGir.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        SalirGir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SalirGirActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel18Layout = new javax.swing.GroupLayout(jPanel18);
        jPanel18.setLayout(jPanel18Layout);
        jPanel18Layout.setHorizontalGroup(
            jPanel18Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel18Layout.createSequentialGroup()
                .addGap(91, 91, 91)
                .addComponent(AceptarGir, javax.swing.GroupLayout.PREFERRED_SIZE, 111, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(85, 85, 85)
                .addComponent(SalirGir, javax.swing.GroupLayout.PREFERRED_SIZE, 114, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel18Layout.setVerticalGroup(
            jPanel18Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel18Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel18Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(AceptarGir)
                    .addComponent(SalirGir))
                .addContainerGap())
        );

        javax.swing.GroupLayout BGiraduriaLayout = new javax.swing.GroupLayout(BGiraduria.getContentPane());
        BGiraduria.getContentPane().setLayout(BGiraduriaLayout);
        BGiraduriaLayout.setHorizontalGroup(
            BGiraduriaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(BGiraduriaLayout.createSequentialGroup()
                .addComponent(jPanel17, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
            .addComponent(jScrollPane6, javax.swing.GroupLayout.Alignment.TRAILING)
            .addComponent(jPanel18, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        BGiraduriaLayout.setVerticalGroup(
            BGiraduriaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(BGiraduriaLayout.createSequentialGroup()
                .addComponent(jPanel17, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane6, javax.swing.GroupLayout.PREFERRED_SIZE, 410, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel18, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        labelTask1.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        labelTask1.setText("Generar Planilla");
        labelTask1.setDescription("Gestión de Cobros a Entidades");

        jPanel1.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));

        codgiraduria.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        codgiraduria.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                codgiraduriaActionPerformed(evt);
            }
        });

        jLabel1.setText("Giraduría");

        BuscarCodGiraduria.setText("....");
        BuscarCodGiraduria.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        BuscarCodGiraduria.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BuscarCodGiraduriaActionPerformed(evt);
            }
        });

        jProgressBar1.setForeground(new java.awt.Color(153, 153, 255));

        jPanel8.setBorder(javax.swing.BorderFactory.createTitledBorder("Rango de Vencimientos"));

        dFechaI.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                dFechaIFocusGained(evt);
            }
        });

        jLabel16.setText(org.openide.util.NbBundle.getMessage(planillagiraduria.class, "vencimientoxgiraduria.jLabel2.text")); // NOI18N

        jLabel2.setText(org.openide.util.NbBundle.getMessage(planillagiraduria.class, "vencimientoxgiraduria.jLabel2.text")); // NOI18N

        dFechaF.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                dFechaFFocusGained(evt);
            }
        });

        javax.swing.GroupLayout jPanel8Layout = new javax.swing.GroupLayout(jPanel8);
        jPanel8.setLayout(jPanel8Layout);
        jPanel8Layout.setHorizontalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel16)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(dFechaI, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(113, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel8Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(dFechaF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jPanel8Layout.setVerticalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(dFechaI, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel16))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(dFechaF, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2, javax.swing.GroupLayout.Alignment.TRAILING))
                .addContainerGap())
        );

        incluir.setText("Incluir Saldos Anteriores al Período");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jProgressBar1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(incluir)
                    .addComponent(jPanel8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addGap(32, 32, 32)
                        .addComponent(codgiraduria, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(BuscarCodGiraduria, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(nomgiraduria, javax.swing.GroupLayout.PREFERRED_SIZE, 212, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(codgiraduria, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1)
                    .addComponent(BuscarCodGiraduria)
                    .addComponent(nomgiraduria, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 13, Short.MAX_VALUE)
                .addComponent(jPanel8, javax.swing.GroupLayout.PREFERRED_SIZE, 88, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(incluir)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jProgressBar1, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18))
        );

        jPanel4.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));

        gestionar.setText("Generar Planilla");
        gestionar.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        gestionar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                gestionarActionPerformed(evt);
            }
        });

        salirgestion.setText("Salir");
        salirgestion.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        salirgestion.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                salirgestionActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(138, 138, 138)
                .addComponent(gestionar)
                .addGap(18, 18, 18)
                .addComponent(salirgestion, javax.swing.GroupLayout.PREFERRED_SIZE, 103, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(140, Short.MAX_VALUE))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(gestionar)
                    .addComponent(salirgestion))
                .addContainerGap(12, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout generarLayout = new javax.swing.GroupLayout(generar.getContentPane());
        generar.getContentPane().setLayout(generarLayout);
        generarLayout.setHorizontalGroup(
            generarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(labelTask1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        generarLayout.setVerticalGroup(
            generarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(generarLayout.createSequentialGroup()
                .addComponent(labelTask1, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        jPanel5.setBackground(new java.awt.Color(0, 153, 255));
        jPanel5.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jPanel5.setForeground(new java.awt.Color(0, 153, 255));

        jLabel15.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel15.setForeground(new java.awt.Color(255, 255, 255));
        jLabel15.setText("Ingrese los Pagos de las Giradurías");

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addGap(182, 182, 182)
                .addComponent(jLabel15)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel5Layout.createSequentialGroup()
                .addContainerGap(12, Short.MAX_VALUE)
                .addComponent(jLabel15)
                .addContainerGap())
        );

        jPanel6.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        tablacobranza.setModel(modelocobro);
        jScrollPane2.setViewportView(tablacobranza);

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane2)
                .addContainerGap())
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel6Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        jPanel7.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        jLabel4.setText("N° Planilla");

        nroplanilla.setEditable(false);
        nroplanilla.setHorizontalAlignment(javax.swing.JTextField.RIGHT);

        jLabel5.setText("Fecha");

        fechaplanilla.setEnabled(false);

        jLabel6.setText("Saldo");

        saldoplanilla.setEditable(false);
        saldoplanilla.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(new java.text.DecimalFormat("#,##0"))));
        saldoplanilla.setHorizontalAlignment(javax.swing.JTextField.RIGHT);

        jLabel7.setText("Fecha Cobro");

        fechacobro.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                fechacobroKeyPressed(evt);
            }
        });

        jLabel9.setText("Forma Pago");

        codcobro.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        codcobro.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                codcobroActionPerformed(evt);
            }
        });
        codcobro.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                codcobroKeyPressed(evt);
            }
        });

        BuscarFPago.setText("...");
        BuscarFPago.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        BuscarFPago.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BuscarFPagoActionPerformed(evt);
            }
        });

        jLabel10.setText("Cargo Banco");

        cargobanco.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        cargobanco.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cargobancoActionPerformed(evt);
            }
        });
        cargobanco.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                cargobancoKeyPressed(evt);
            }
        });

        BuscarBanco.setText("...");
        BuscarBanco.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        BuscarBanco.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BuscarBancoActionPerformed(evt);
            }
        });

        jLabel11.setText("N° de Cheque");

        nrocheque.setText(" ");
        nrocheque.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                nrochequeKeyPressed(evt);
            }
        });

        jLabel12.setText("Vence");

        vencepago.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                vencepagoKeyPressed(evt);
            }
        });

        jLabel13.setText("Importe");

        importecobro.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(new java.text.DecimalFormat("#,##0"))));
        importecobro.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        importecobro.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                importecobroActionPerformed(evt);
            }
        });
        importecobro.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                importecobroKeyPressed(evt);
            }
        });

        BotonAgregar.setText("Agregar");
        BotonAgregar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BotonAgregarActionPerformed(evt);
            }
        });

        BotonBorrar.setText("Borrar");
        BotonBorrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BotonBorrarActionPerformed(evt);
            }
        });

        nombreformapago.setEditable(false);

        nombrecargobanco.setEditable(false);

        neto.setEditable(false);
        neto.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(new java.text.DecimalFormat("#,##0"))));
        neto.setHorizontalAlignment(javax.swing.JTextField.RIGHT);

        jLabel14.setText("Neto");

        jButton1.setText("Salir");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        botonconfirmar.setText("Confirmar Cierre");
        botonconfirmar.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        botonconfirmar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonconfirmarActionPerformed(evt);
            }
        });

        generarInteres.setText("Generar Intereses Moratorios");

        javax.swing.GroupLayout jPanel7Layout = new javax.swing.GroupLayout(jPanel7);
        jPanel7.setLayout(jPanel7Layout);
        jPanel7Layout.setHorizontalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel7Layout.createSequentialGroup()
                        .addComponent(jLabel7)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(fechacobro, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel7Layout.createSequentialGroup()
                        .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel7Layout.createSequentialGroup()
                                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel7Layout.createSequentialGroup()
                                        .addGap(14, 14, 14)
                                        .addComponent(jLabel4)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED))
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel7Layout.createSequentialGroup()
                                        .addComponent(jLabel13)
                                        .addGap(4, 4, 4)))
                                .addComponent(nroplanilla, javax.swing.GroupLayout.PREFERRED_SIZE, 77, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(28, 28, 28)
                                .addComponent(jLabel5)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(fechaplanilla, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jLabel14)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(neto, javax.swing.GroupLayout.PREFERRED_SIZE, 79, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED))
                            .addGroup(jPanel7Layout.createSequentialGroup()
                                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel7Layout.createSequentialGroup()
                                        .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jLabel11)
                                            .addComponent(jLabel12, javax.swing.GroupLayout.Alignment.TRAILING))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(jPanel7Layout.createSequentialGroup()
                                                .addComponent(vencepago, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addGap(0, 0, Short.MAX_VALUE))
                                            .addComponent(nrocheque)
                                            .addComponent(importecobro)))
                                    .addGroup(jPanel7Layout.createSequentialGroup()
                                        .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(jPanel7Layout.createSequentialGroup()
                                                .addGap(10, 10, 10)
                                                .addComponent(jLabel9))
                                            .addGroup(jPanel7Layout.createSequentialGroup()
                                                .addGap(6, 6, 6)
                                                .addComponent(jLabel10)))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(codcobro)
                                            .addComponent(cargobanco))))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addGroup(jPanel7Layout.createSequentialGroup()
                                        .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                            .addComponent(BuscarBanco, javax.swing.GroupLayout.PREFERRED_SIZE, 1, Short.MAX_VALUE)
                                            .addComponent(BuscarFPago, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                            .addComponent(nombreformapago)
                                            .addComponent(nombrecargobanco, javax.swing.GroupLayout.PREFERRED_SIZE, 221, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                    .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(generarInteres)
                                        .addGroup(jPanel7Layout.createSequentialGroup()
                                            .addComponent(BotonAgregar, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                            .addComponent(BotonBorrar, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                            .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 74, javax.swing.GroupLayout.PREFERRED_SIZE))))
                                .addGap(37, 37, 37)))
                        .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel7Layout.createSequentialGroup()
                                .addComponent(jLabel6)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(saldoplanilla, javax.swing.GroupLayout.PREFERRED_SIZE, 79, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(botonconfirmar))
                        .addContainerGap())))
        );
        jPanel7Layout.setVerticalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel6)
                        .addComponent(saldoplanilla, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(neto, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel14))
                    .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(fechaplanilla, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(nroplanilla, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel5)
                            .addComponent(jLabel4))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel7)
                    .addComponent(fechacobro, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(13, 13, 13)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel7Layout.createSequentialGroup()
                        .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel9)
                            .addComponent(codcobro, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(BuscarFPago))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel10)
                            .addComponent(cargobanco, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(BuscarBanco)))
                    .addGroup(jPanel7Layout.createSequentialGroup()
                        .addComponent(nombreformapago, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(nombrecargobanco, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel11)
                    .addComponent(nrocheque, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(6, 6, 6)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel7Layout.createSequentialGroup()
                        .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(vencepago, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel12))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(importecobro, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel13)
                            .addComponent(BotonAgregar)
                            .addComponent(BotonBorrar)
                            .addComponent(jButton1)
                            .addComponent(botonconfirmar)))
                    .addComponent(generarInteres))
                .addGap(0, 10, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout cobroxgiraduriaLayout = new javax.swing.GroupLayout(cobroxgiraduria.getContentPane());
        cobroxgiraduria.getContentPane().setLayout(cobroxgiraduriaLayout);
        cobroxgiraduriaLayout.setHorizontalGroup(
            cobroxgiraduriaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, cobroxgiraduriaLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(cobroxgiraduriaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        cobroxgiraduriaLayout.setVerticalGroup(
            cobroxgiraduriaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(cobroxgiraduriaLayout.createSequentialGroup()
                .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jPanel6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        BFormaPago.setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        BFormaPago.setTitle("null");

        jPanel19.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));

        comboformapago.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        comboformapago.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Buscar por Nombre", "Buscar por Código" }));
        comboformapago.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        comboformapago.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                comboformapagoActionPerformed(evt);
            }
        });

        jTBuscarFormaPago.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jTBuscarFormaPago.setText(org.openide.util.NbBundle.getMessage(planillagiraduria.class, "ventas.jTBuscarClientes.text")); // NOI18N
        jTBuscarFormaPago.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTBuscarFormaPagoActionPerformed(evt);
            }
        });
        jTBuscarFormaPago.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jTBuscarFormaPagoKeyPressed(evt);
            }
        });

        javax.swing.GroupLayout jPanel19Layout = new javax.swing.GroupLayout(jPanel19);
        jPanel19.setLayout(jPanel19Layout);
        jPanel19Layout.setHorizontalGroup(
            jPanel19Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel19Layout.createSequentialGroup()
                .addComponent(comboformapago, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jTBuscarFormaPago, javax.swing.GroupLayout.PREFERRED_SIZE, 284, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel19Layout.setVerticalGroup(
            jPanel19Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel19Layout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addGroup(jPanel19Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(comboformapago, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTBuscarFormaPago, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(19, Short.MAX_VALUE))
        );

        tablaformapago.setModel(modeloformapago);
        tablaformapago.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tablaformapagoMouseClicked(evt);
            }
        });
        tablaformapago.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                tablaformapagoKeyPressed(evt);
            }
        });
        jScrollPane7.setViewportView(tablaformapago);

        jPanel20.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));

        AceptarFormaPago.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        AceptarFormaPago.setText(org.openide.util.NbBundle.getMessage(planillagiraduria.class, "ventas.Aceptarcliente.text")); // NOI18N
        AceptarFormaPago.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        AceptarFormaPago.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AceptarFormaPagoActionPerformed(evt);
            }
        });

        SalirFormaPago.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        SalirFormaPago.setText(org.openide.util.NbBundle.getMessage(planillagiraduria.class, "ventas.SalirCliente.text")); // NOI18N
        SalirFormaPago.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        SalirFormaPago.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SalirFormaPagoActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel20Layout = new javax.swing.GroupLayout(jPanel20);
        jPanel20.setLayout(jPanel20Layout);
        jPanel20Layout.setHorizontalGroup(
            jPanel20Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel20Layout.createSequentialGroup()
                .addGap(91, 91, 91)
                .addComponent(AceptarFormaPago, javax.swing.GroupLayout.PREFERRED_SIZE, 111, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(85, 85, 85)
                .addComponent(SalirFormaPago, javax.swing.GroupLayout.PREFERRED_SIZE, 114, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel20Layout.setVerticalGroup(
            jPanel20Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel20Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel20Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(AceptarFormaPago)
                    .addComponent(SalirFormaPago))
                .addContainerGap())
        );

        javax.swing.GroupLayout BFormaPagoLayout = new javax.swing.GroupLayout(BFormaPago.getContentPane());
        BFormaPago.getContentPane().setLayout(BFormaPagoLayout);
        BFormaPagoLayout.setHorizontalGroup(
            BFormaPagoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(BFormaPagoLayout.createSequentialGroup()
                .addComponent(jPanel19, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
            .addComponent(jScrollPane7, javax.swing.GroupLayout.Alignment.TRAILING)
            .addComponent(jPanel20, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        BFormaPagoLayout.setVerticalGroup(
            BFormaPagoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(BFormaPagoLayout.createSequentialGroup()
                .addComponent(jPanel19, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane7, javax.swing.GroupLayout.PREFERRED_SIZE, 410, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel20, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        wBuscarBco.setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        wBuscarBco.setTitle(org.openide.util.NbBundle.getMessage(planillagiraduria.class, "informe_extracciones.wBuscarBanco.title")); // NOI18N

        jPanel21.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));

        combobanco.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        combobanco.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Buscar por Nombre", "Buscar por Código" }));
        combobanco.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        combobanco.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                combobancoActionPerformed(evt);
            }
        });

        JTBuscarBanco.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        JTBuscarBanco.setText(org.openide.util.NbBundle.getMessage(planillagiraduria.class, "informe_extracciones.BuscarGiraduria.text")); // NOI18N
        JTBuscarBanco.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                JTBuscarBancoActionPerformed(evt);
            }
        });
        JTBuscarBanco.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                JTBuscarBancoKeyPressed(evt);
            }
        });

        javax.swing.GroupLayout jPanel21Layout = new javax.swing.GroupLayout(jPanel21);
        jPanel21.setLayout(jPanel21Layout);
        jPanel21Layout.setHorizontalGroup(
            jPanel21Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel21Layout.createSequentialGroup()
                .addComponent(combobanco, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(JTBuscarBanco, javax.swing.GroupLayout.PREFERRED_SIZE, 284, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel21Layout.setVerticalGroup(
            jPanel21Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel21Layout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addGroup(jPanel21Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(combobanco, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(JTBuscarBanco, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(19, Short.MAX_VALUE))
        );

        tablabanco.setModel(modelobanco);
        tablabanco.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tablabancoMouseClicked(evt);
            }
        });
        tablabanco.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                tablabancoKeyPressed(evt);
            }
        });
        jScrollPane8.setViewportView(tablabanco);

        jPanel22.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));

        AceptarBco.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        AceptarBco.setText(org.openide.util.NbBundle.getMessage(planillagiraduria.class, "informe_extracciones.AceptarGir.text")); // NOI18N
        AceptarBco.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        AceptarBco.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AceptarBcoActionPerformed(evt);
            }
        });

        SalirBco.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        SalirBco.setText(org.openide.util.NbBundle.getMessage(planillagiraduria.class, "informe_extracciones.SalirGir.text")); // NOI18N
        SalirBco.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        SalirBco.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SalirBcoActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel22Layout = new javax.swing.GroupLayout(jPanel22);
        jPanel22.setLayout(jPanel22Layout);
        jPanel22Layout.setHorizontalGroup(
            jPanel22Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel22Layout.createSequentialGroup()
                .addGap(91, 91, 91)
                .addComponent(AceptarBco, javax.swing.GroupLayout.PREFERRED_SIZE, 111, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(85, 85, 85)
                .addComponent(SalirBco, javax.swing.GroupLayout.PREFERRED_SIZE, 114, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel22Layout.setVerticalGroup(
            jPanel22Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel22Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel22Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(AceptarBco)
                    .addComponent(SalirBco))
                .addContainerGap())
        );

        javax.swing.GroupLayout wBuscarBcoLayout = new javax.swing.GroupLayout(wBuscarBco.getContentPane());
        wBuscarBco.getContentPane().setLayout(wBuscarBcoLayout);
        wBuscarBcoLayout.setHorizontalGroup(
            wBuscarBcoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(wBuscarBcoLayout.createSequentialGroup()
                .addComponent(jPanel21, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
            .addComponent(jScrollPane8, javax.swing.GroupLayout.Alignment.TRAILING)
            .addComponent(jPanel22, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        wBuscarBcoLayout.setVerticalGroup(
            wBuscarBcoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(wBuscarBcoLayout.createSequentialGroup()
                .addComponent(jPanel21, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane8, javax.swing.GroupLayout.PREFERRED_SIZE, 410, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel22, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        jPanel9.setBackground(new java.awt.Color(0, 153, 255));
        jPanel9.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jPanel9.setForeground(new java.awt.Color(0, 153, 255));

        jLabel17.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel17.setForeground(new java.awt.Color(255, 255, 255));
        jLabel17.setText("Ingrese los Pagos por Socios, esta opción solo se aplicarán a los no cobrados o cobros parciales.");

        javax.swing.GroupLayout jPanel9Layout = new javax.swing.GroupLayout(jPanel9);
        jPanel9.setLayout(jPanel9Layout);
        jPanel9Layout.setHorizontalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel9Layout.createSequentialGroup()
                .addGap(28, 28, 28)
                .addComponent(jLabel17)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel9Layout.setVerticalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel9Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel17)
                .addContainerGap(12, Short.MAX_VALUE))
        );

        jPanel10.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        tablacobranzasocio.setModel(modelocobrosocio);
        jScrollPane3.setViewportView(tablacobranzasocio);

        javax.swing.GroupLayout jPanel10Layout = new javax.swing.GroupLayout(jPanel10);
        jPanel10.setLayout(jPanel10Layout);
        jPanel10Layout.setHorizontalGroup(
            jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel10Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane3)
                .addContainerGap())
        );
        jPanel10Layout.setVerticalGroup(
            jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel10Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 119, Short.MAX_VALUE)
                .addContainerGap())
        );

        jPanel11.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        jLabel18.setText("N° Planilla");

        nroplanillasocio.setEditable(false);
        nroplanillasocio.setHorizontalAlignment(javax.swing.JTextField.RIGHT);

        jLabel19.setText("Fecha");

        fechaplanillasocio.setEnabled(false);

        jLabel20.setText("Saldo");

        saldosocio.setEditable(false);
        saldosocio.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(new java.text.DecimalFormat("#,##0"))));
        saldosocio.setHorizontalAlignment(javax.swing.JTextField.RIGHT);

        jLabel22.setText("Socio");

        socio.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        socio.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                socioActionPerformed(evt);
            }
        });
        socio.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                socioKeyPressed(evt);
            }
        });

        BuscarSocio.setText("...");
        BuscarSocio.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        BuscarSocio.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BuscarSocioActionPerformed(evt);
            }
        });

        jLabel26.setText("Cobrado");

        importecobrosocio.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(new java.text.DecimalFormat("#,##0"))));
        importecobrosocio.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        importecobrosocio.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                importecobrosocioActionPerformed(evt);
            }
        });
        importecobrosocio.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                importecobrosocioKeyPressed(evt);
            }
        });

        BotonGestion.setText("Mostrar cuentas");
        BotonGestion.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BotonGestionActionPerformed(evt);
            }
        });

        BotonConfirmar.setText("Confirmar");
        BotonConfirmar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BotonConfirmarActionPerformed(evt);
            }
        });

        nombresocio.setEditable(false);

        netosocio.setEditable(false);
        netosocio.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(new java.text.DecimalFormat("#,##0"))));
        netosocio.setHorizontalAlignment(javax.swing.JTextField.RIGHT);

        jLabel27.setText("Neto");

        BotonSalirSocio.setText("Salir");
        BotonSalirSocio.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BotonSalirSocioActionPerformed(evt);
            }
        });

        jButton2.setText("Gestionar Cobro");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel11Layout = new javax.swing.GroupLayout(jPanel11);
        jPanel11.setLayout(jPanel11Layout);
        jPanel11Layout.setHorizontalGroup(
            jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel11Layout.createSequentialGroup()
                .addGap(41, 41, 41)
                .addComponent(jLabel26)
                .addContainerGap(522, Short.MAX_VALUE))
            .addGroup(jPanel11Layout.createSequentialGroup()
                .addGap(32, 32, 32)
                .addGroup(jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel11Layout.createSequentialGroup()
                        .addComponent(BotonGestion)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(jPanel11Layout.createSequentialGroup()
                        .addGroup(jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel22)
                            .addComponent(jLabel18))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(importecobrosocio, javax.swing.GroupLayout.PREFERRED_SIZE, 77, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addComponent(socio, javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(nroplanillasocio, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 77, Short.MAX_VALUE)))
                        .addGroup(jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel11Layout.createSequentialGroup()
                                .addGap(28, 28, 28)
                                .addComponent(jLabel19)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(fechaplanillasocio, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 37, Short.MAX_VALUE)
                                .addComponent(jLabel27)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(netosocio, javax.swing.GroupLayout.PREFERRED_SIZE, 79, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jLabel20)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(saldosocio, javax.swing.GroupLayout.PREFERRED_SIZE, 79, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel11Layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addGroup(jPanel11Layout.createSequentialGroup()
                                        .addComponent(BuscarSocio, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(nombresocio, javax.swing.GroupLayout.PREFERRED_SIZE, 221, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(jPanel11Layout.createSequentialGroup()
                                        .addComponent(jButton2)
                                        .addGap(36, 36, 36)
                                        .addComponent(BotonConfirmar, javax.swing.GroupLayout.PREFERRED_SIZE, 107, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(BotonSalirSocio, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(34, 34, 34)))))
                .addContainerGap())
        );
        jPanel11Layout.setVerticalGroup(
            jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel11Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel20)
                        .addComponent(saldosocio, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(netosocio, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel27))
                    .addGroup(jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(fechaplanillasocio, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(nroplanillasocio, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel19)
                            .addComponent(jLabel18))))
                .addGap(12, 12, 12)
                .addGroup(jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(socio, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel22)
                    .addComponent(BuscarSocio)
                    .addComponent(nombresocio, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(importecobrosocio, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel26))
                .addGap(49, 49, 49)
                .addGroup(jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(BotonGestion)
                    .addComponent(BotonConfirmar)
                    .addComponent(BotonSalirSocio)
                    .addComponent(jButton2))
                .addGap(0, 17, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout cobroxsocioLayout = new javax.swing.GroupLayout(cobroxsocio.getContentPane());
        cobroxsocio.getContentPane().setLayout(cobroxsocioLayout);
        cobroxsocioLayout.setHorizontalGroup(
            cobroxsocioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, cobroxsocioLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(cobroxsocioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jPanel9, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel11, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel10, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        cobroxsocioLayout.setVerticalGroup(
            cobroxsocioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(cobroxsocioLayout.createSequentialGroup()
                .addComponent(jPanel9, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel11, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jPanel10, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        BCliente.setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        BCliente.setTitle("null");

        jPanel14.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));

        combocliente.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        combocliente.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Buscar por Nombre", "Buscar por Código", "Buscar por RUC" }));
        combocliente.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        combocliente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                comboclienteActionPerformed(evt);
            }
        });

        jTBuscarCliente.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jTBuscarCliente.setText(org.openide.util.NbBundle.getMessage(planillagiraduria.class, "ventas.jTBuscarClientes.text")); // NOI18N
        jTBuscarCliente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTBuscarClienteActionPerformed(evt);
            }
        });
        jTBuscarCliente.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jTBuscarClienteKeyPressed(evt);
            }
        });

        javax.swing.GroupLayout jPanel14Layout = new javax.swing.GroupLayout(jPanel14);
        jPanel14.setLayout(jPanel14Layout);
        jPanel14Layout.setHorizontalGroup(
            jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel14Layout.createSequentialGroup()
                .addComponent(combocliente, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jTBuscarCliente, javax.swing.GroupLayout.PREFERRED_SIZE, 284, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel14Layout.setVerticalGroup(
            jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel14Layout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addGroup(jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(combocliente, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTBuscarCliente, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(19, Short.MAX_VALUE))
        );

        tablacliente.setModel(modelocliente        );
        tablacliente.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tablaclienteMouseClicked(evt);
            }
        });
        tablacliente.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                tablaclienteKeyPressed(evt);
            }
        });
        jScrollPane5.setViewportView(tablacliente);

        jPanel16.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));

        AceptarCli.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        AceptarCli.setText(org.openide.util.NbBundle.getMessage(planillagiraduria.class, "ventas.Aceptarcliente.text")); // NOI18N
        AceptarCli.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        AceptarCli.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AceptarCliActionPerformed(evt);
            }
        });

        SalirCli.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        SalirCli.setText(org.openide.util.NbBundle.getMessage(planillagiraduria.class, "ventas.SalirCliente.text")); // NOI18N
        SalirCli.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        SalirCli.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SalirCliActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel16Layout = new javax.swing.GroupLayout(jPanel16);
        jPanel16.setLayout(jPanel16Layout);
        jPanel16Layout.setHorizontalGroup(
            jPanel16Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel16Layout.createSequentialGroup()
                .addGap(91, 91, 91)
                .addComponent(AceptarCli, javax.swing.GroupLayout.PREFERRED_SIZE, 111, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(85, 85, 85)
                .addComponent(SalirCli, javax.swing.GroupLayout.PREFERRED_SIZE, 114, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel16Layout.setVerticalGroup(
            jPanel16Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel16Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel16Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(AceptarCli)
                    .addComponent(SalirCli))
                .addContainerGap())
        );

        javax.swing.GroupLayout BClienteLayout = new javax.swing.GroupLayout(BCliente.getContentPane());
        BCliente.getContentPane().setLayout(BClienteLayout);
        BClienteLayout.setHorizontalGroup(
            BClienteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(BClienteLayout.createSequentialGroup()
                .addComponent(jPanel14, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
            .addComponent(jScrollPane5, javax.swing.GroupLayout.Alignment.TRAILING)
            .addComponent(jPanel16, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        BClienteLayout.setVerticalGroup(
            BClienteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(BClienteLayout.createSequentialGroup()
                .addComponent(jPanel14, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 410, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel16, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        detalleplanilla.setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jPanel12.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        tabladetalle.setModel(modelodetalle);
        jScrollPane4.setViewportView(tabladetalle);

        javax.swing.GroupLayout jPanel12Layout = new javax.swing.GroupLayout(jPanel12);
        jPanel12.setLayout(jPanel12Layout);
        jPanel12Layout.setHorizontalGroup(
            jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel12Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane4, javax.swing.GroupLayout.DEFAULT_SIZE, 629, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel12Layout.setVerticalGroup(
            jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel12Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 387, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel13.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        jButton3.setText("Pasar a Excel");
        jButton3.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jButton4.setText("Salir");
        jButton4.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel13Layout = new javax.swing.GroupLayout(jPanel13);
        jPanel13.setLayout(jPanel13Layout);
        jPanel13Layout.setHorizontalGroup(
            jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel13Layout.createSequentialGroup()
                .addGap(198, 198, 198)
                .addComponent(jButton3)
                .addGap(52, 52, 52)
                .addComponent(jButton4, javax.swing.GroupLayout.PREFERRED_SIZE, 93, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel13Layout.setVerticalGroup(
            jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel13Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton3)
                    .addComponent(jButton4))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout detalleplanillaLayout = new javax.swing.GroupLayout(detalleplanilla.getContentPane());
        detalleplanilla.getContentPane().setLayout(detalleplanillaLayout);
        detalleplanillaLayout.setHorizontalGroup(
            detalleplanillaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel12, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jPanel13, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        detalleplanillaLayout.setVerticalGroup(
            detalleplanillaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(detalleplanillaLayout.createSequentialGroup()
                .addComponent(jPanel12, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel13, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setName("frame_clientes"); // NOI18N
        addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                formFocusGained(evt);
            }
        });
        addWindowFocusListener(new java.awt.event.WindowFocusListener() {
            public void windowGainedFocus(java.awt.event.WindowEvent evt) {
                formWindowGainedFocus(evt);
            }
            public void windowLostFocus(java.awt.event.WindowEvent evt) {
            }
        });
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowActivated(java.awt.event.WindowEvent evt) {
                formWindowActivated(evt);
            }
        });

        panel1.setColorPrimario(new java.awt.Color(102, 153, 255));
        panel1.setColorSecundario(new java.awt.Color(0, 204, 255));

        etiquetacredito.setBackground(new java.awt.Color(255, 255, 255));
        etiquetacredito.setText("Planilla de Cobro");

        jComboBox1.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Nombre", "Nro de Orden" }));
        jComboBox1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox1ActionPerformed(evt);
            }
        });

        buscarcadena.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        buscarcadena.setSelectionColor(new java.awt.Color(0, 63, 62));
        buscarcadena.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                buscarcadenaKeyPressed(evt);
            }
        });

        javax.swing.GroupLayout panel1Layout = new javax.swing.GroupLayout(panel1);
        panel1.setLayout(panel1Layout);
        panel1Layout.setHorizontalGroup(
            panel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panel1Layout.createSequentialGroup()
                .addGap(26, 26, 26)
                .addComponent(etiquetacredito, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(40, 40, 40)
                .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, 137, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(buscarcadena, javax.swing.GroupLayout.PREFERRED_SIZE, 378, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(364, Short.MAX_VALUE))
        );
        panel1Layout.setVerticalGroup(
            panel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panel1Layout.createSequentialGroup()
                .addContainerGap(24, Short.MAX_VALUE)
                .addGroup(panel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(buscarcadena, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(etiquetacredito, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(22, 22, 22))
        );

        Modificar.setBackground(new java.awt.Color(255, 255, 255));
        Modificar.setFont(new java.awt.Font("Tahoma", 1, 10)); // NOI18N
        Modificar.setText("Editar Registro");
        Modificar.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        Modificar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ModificarActionPerformed(evt);
            }
        });

        Agregar.setBackground(new java.awt.Color(255, 255, 255));
        Agregar.setFont(new java.awt.Font("Tahoma", 1, 10)); // NOI18N
        Agregar.setText("Generar Planilla");
        Agregar.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        Agregar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AgregarActionPerformed(evt);
            }
        });

        Eliminar.setBackground(new java.awt.Color(255, 255, 255));
        Eliminar.setFont(new java.awt.Font("Tahoma", 1, 10)); // NOI18N
        Eliminar.setText("Eliminar Registro");
        Eliminar.setToolTipText("");
        Eliminar.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        Eliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                EliminarActionPerformed(evt);
            }
        });

        Listar.setBackground(new java.awt.Color(255, 255, 255));
        Listar.setFont(new java.awt.Font("Tahoma", 1, 10)); // NOI18N
        Listar.setText("Listar/Imprimir");
        Listar.setToolTipText("");
        Listar.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        Listar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ListarActionPerformed(evt);
            }
        });

        SalirCompleto.setBackground(new java.awt.Color(255, 255, 255));
        SalirCompleto.setFont(new java.awt.Font("Tahoma", 1, 10)); // NOI18N
        SalirCompleto.setText("     Salir");
        SalirCompleto.setToolTipText("");
        SalirCompleto.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        SalirCompleto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SalirCompletoActionPerformed(evt);
            }
        });

        idControl.setEditable(false);

        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder(org.openide.util.NbBundle.getMessage(planillagiraduria.class, "libroventaconsolidado.jPanel2.border.title"))); // NOI18N

        jLabel3.setText(org.openide.util.NbBundle.getMessage(planillagiraduria.class, "libroventaconsolidado.jLabel1.text")); // NOI18N

        jLabel8.setText(org.openide.util.NbBundle.getMessage(planillagiraduria.class, "libroventaconsolidado.jLabel2.text")); // NOI18N

        refrescar.setText("Refrescar");
        refrescar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                refrescarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel3)
                    .addComponent(jLabel8))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(0, 20, Short.MAX_VALUE)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addComponent(dInicial, javax.swing.GroupLayout.PREFERRED_SIZE, 103, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(dFinal, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(4, 4, 4)
                        .addComponent(refrescar, javax.swing.GroupLayout.PREFERRED_SIZE, 108, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(25, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(dInicial, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabel8)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(dFinal, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 22, Short.MAX_VALUE)
                .addComponent(refrescar)
                .addContainerGap())
        );

        verdetalles.setBackground(new java.awt.Color(255, 255, 255));
        verdetalles.setFont(new java.awt.Font("Tahoma", 1, 10)); // NOI18N
        verdetalles.setText("Ver Detalles");
        verdetalles.setToolTipText("");
        verdetalles.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        verdetalles.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                verdetallesActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                        .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap())
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(idControl, javax.swing.GroupLayout.PREFERRED_SIZE, 111, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addComponent(SalirCompleto, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(Listar, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(Modificar, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(Agregar, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(Eliminar, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(verdetalles, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                        .addGap(27, 27, 27))))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addComponent(Agregar)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(Modificar)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(Eliminar)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(Listar)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(verdetalles)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(SalirCompleto)
                .addGap(27, 27, 27)
                .addComponent(idControl, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(85, Short.MAX_VALUE))
        );

        jTable1.setAutoResizeMode(JTable.AUTO_RESIZE_OFF);
        jScrollPane1.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jScrollPane1.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                jScrollPane1FocusGained(evt);
            }
        });

        jTable1.setModel(modelo);
        jTable1.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        jTable1.setSelectionBackground(new java.awt.Color(51, 204, 255));
        jTable1.setSelectionForeground(new java.awt.Color(0, 0, 255));
        jTable1.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                jTable1FocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                jTable1FocusLost(evt);
            }
        });
        jTable1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable1MouseClicked(evt);
            }
        });
        jTable1.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                jTable1PropertyChange(evt);
            }
        });
        jTable1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jTable1KeyPressed(evt);
            }
        });
        jScrollPane1.setViewportView(jTable1);

        jMenu1.setText("Menú Planilla");
        jMenu1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenu1ActionPerformed(evt);
            }
        });

        jMenuItem3.setText("Confirmar Cobros a Socios");
        jMenuItem3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem3ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem3);
        jMenu1.add(jSeparator2);

        jMenuItem2.setText("Cobros de Planilla x Giraduría");
        jMenuItem2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem2ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem2);
        jMenu1.add(jSeparator3);

        jMenuItem1.setText("Planilla RR.HH / a)");
        jMenuItem1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem1ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem1);
        jMenu1.add(jSeparator1);

        jMenuItem4.setText("Planilla RR.HH / b)");
        jMenuItem4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem4ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem4);
        jMenu1.add(jSeparator4);

        jMenuItem5.setText("Planilla BNF");
        jMenuItem5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem5ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem5);
        jMenu1.add(jSeparator5);

        jMenuItem6.setText("Planilla ITAU");
        jMenuItem6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem6ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem6);

        jMenuBar1.add(jMenu1);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
            .addComponent(panel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(panel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 560, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(30, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void TitClie() {
        modelocliente.addColumn("Código");
        modelocliente.addColumn("Nombre");
        modelocliente.addColumn("Dirección");
        modelocliente.addColumn("RUC");

        int[] anchos = {90, 150, 100, 100};
        for (int i = 0; i < modelocliente.getColumnCount(); i++) {
            tablacliente.getColumnModel().getColumn(i).setPreferredWidth(anchos[i]);
        }
        ((DefaultTableCellRenderer) tablacliente.getTableHeader().getDefaultRenderer()).setHorizontalAlignment(JLabel.CENTER);// Este código es para centrar las cabeceras de la tabla.
        tablacliente.getTableHeader().setFont(new Font("Arial Black", 1, 10));

        // Hacemos Invisible la Celda de Costos de los Productos
        Font font = new Font("Arial", Font.BOLD, 9);
        this.tablacliente.setFont(font);

        DefaultTableCellRenderer TablaRenderer = new DefaultTableCellRenderer();
        TablaRenderer.setHorizontalAlignment(SwingConstants.RIGHT); // aqui defines donde alinear 
        this.tablacliente.getColumnModel().getColumn(0).setCellRenderer(TablaRenderer);
    }

    public void cargarcobrosocios() {
        ///ESTE PROCEDIMIENTO USAMOS PARA REALIZAR LAS SUMATORIAS DE
        ///CADA CELDA 
        double supago = 0.00;
        double sumpago = 0.00;

        int totalRow = tablacobranzasocio.getRowCount();
        totalRow -= 1;
        for (int i = 0; i <= (totalRow); i++) {
            this.tablacobranzasocio.setValueAt(formatea.format(0), i, 6);
        }

        String csupago = String.valueOf(importecobrosocio.getText());
        csupago = csupago.replace(".", "").replace(",", ".");

        supago = Double.valueOf(csupago);
        totalRow = tablacobranzasocio.getRowCount();
        totalRow -= 1;
        for (int i = 0; i <= (totalRow); i++) {
            String cItemCobro = this.tablacobranzasocio.getValueAt(i, 5).toString(); // COLUMNA IMPÓRTE A COBRAR
            cItemCobro = cItemCobro.replace(".", "").replace(",", ".");
            System.out.println("Item a Cobrar " + cItemCobro);
            sumpago = Double.valueOf(cItemCobro);
            if (supago > 0) {
                if (supago > sumpago) {
                    this.tablacobranzasocio.setValueAt(formatea.format(sumpago), i, 6);
                }
                if (supago < sumpago) {
                    this.tablacobranzasocio.setValueAt(formatea.format(supago), i, 6);
                }
                if (sumpago == supago) {
                    this.tablacobranzasocio.setValueAt(formatea.format(supago), i, 6);
                }
            }
            supago = supago - sumpago;
        }
        //LUEGO RESTAMOS AL VALOR NETO A ENTREGAR
    }

    private void limpiacobrosocios() {

        int cantidadRegistro = modelocobrosocio.getRowCount();
        for (int i = 1; i <= cantidadRegistro; i++) {
            modelocobrosocio.removeRow(0);
        }

        planillaDAO plDAO = new planillaDAO();
        planilla pl = null;
        try {
            pl = plDAO.buscarId(Integer.valueOf(idControl.getText()));
            if (pl != null) {
                nroplanillasocio.setText(formatosinpunto.format(pl.getIdnumero()));
                fechaplanillasocio.setDate(pl.getFecha());
                netosocio.setText(formatea.format(pl.getNetoacobrar()));
                saldosocio.setText(formatea.format(pl.getSaldoplanilla()));
            }
        } catch (SQLException ex) {
            Exceptions.printStackTrace(ex);
        }
        socio.setText("0");
        nombresocio.setText("");
        importecobrosocio.setText("0");
    }

    private void TitBco() {
        modelobanco.addColumn("Código");
        modelobanco.addColumn("Nombre");

        int[] anchos = {90, 200};
        for (int i = 0; i < modelobanco.getColumnCount(); i++) {
            tablabanco.getColumnModel().getColumn(i).setPreferredWidth(anchos[i]);
        }
        ((DefaultTableCellRenderer) tablabanco.getTableHeader().getDefaultRenderer()).setHorizontalAlignment(JLabel.CENTER);// Este código es para centrar las cabeceras de la tabla.
        tablabanco.getTableHeader().setFont(new Font("Arial Black", 1, 10));

        // Hacemos Invisible la Celda de Costos de los Productos
        Font font = new Font("Arial", Font.BOLD, 9);
        this.tablabanco.setFont(font);

        DefaultTableCellRenderer TablaRenderer = new DefaultTableCellRenderer();
        TablaRenderer.setHorizontalAlignment(SwingConstants.RIGHT); // aqui defines donde alinear 
        this.tablabanco.getColumnModel().getColumn(0).setCellRenderer(TablaRenderer);
    }

    private void Inicializar() {
        codgiraduria.setText("0");
        this.dInicial.setCalendar(c2);
        this.dFinal.setCalendar(c2);
    }

    public void limpiarCombos() {

    }

    private void jComboBox1ActionPerformed(ActionEvent evt) {//GEN-FIRST:event_jComboBox1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jComboBox1ActionPerformed

    private void buscarcadenaKeyPressed(KeyEvent evt) {//GEN-FIRST:event_buscarcadenaKeyPressed
        this.buscarcadena.addKeyListener(new KeyAdapter() {
            public void keyReleased(final KeyEvent e) {
                String cadena = (buscarcadena.getText()).toUpperCase();
                buscarcadena.setText(cadena);
                int indiceColumnaTabla = 0;
                switch (jComboBox1.getSelectedIndex()) {
                    case 0:
                        indiceColumnaTabla = 3;
                        break;//por nombre
                    case 1:
                        indiceColumnaTabla = 0;
                        break;//por codigo
                }
                repaint();
                filtro(indiceColumnaTabla);
            }
        });
        trsfiltro = new TableRowSorter(jTable1.getModel());
        jTable1.setRowSorter(trsfiltro);
        // TODO add your handling code here:
    }//GEN-LAST:event_buscarcadenaKeyPressed

    private void SalirCompletoActionPerformed(ActionEvent evt) {//GEN-FIRST:event_SalirCompletoActionPerformed
        this.dispose();
        // TODO add your handling code here:
    }//GEN-LAST:event_SalirCompletoActionPerformed

    private void AgregarActionPerformed(ActionEvent evt) {//GEN-FIRST:event_AgregarActionPerformed
        generar.setModal(true);
        generar.setSize(512, 385);
        generar.setTitle("Generar Planilla de Gestión de Cobro");
        generar.setLocationRelativeTo(null);
        generar.setVisible(true);
        nomgiraduria.setEnabled(false);
        codgiraduria.requestFocus();
        this.incluir.setSelected(false);
          }//GEN-LAST:event_AgregarActionPerformed

    private void jTable1KeyPressed(KeyEvent evt) {//GEN-FIRST:event_jTable1KeyPressed

        // TODO add your handling code here:
    }//GEN-LAST:event_jTable1KeyPressed

    private void jTable1MouseClicked(MouseEvent evt) {//GEN-FIRST:event_jTable1MouseClicked

    }//GEN-LAST:event_jTable1MouseClicked

    private void ModificarActionPerformed(ActionEvent evt) {//GEN-FIRST:event_ModificarActionPerformed
    }//GEN-LAST:event_ModificarActionPerformed

    private void jTable1FocusGained(FocusEvent evt) {//GEN-FIRST:event_jTable1FocusGained
        // TODO add your handling code here:
    }//GEN-LAST:event_jTable1FocusGained

    private void jScrollPane1FocusGained(FocusEvent evt) {//GEN-FIRST:event_jScrollPane1FocusGained
        // TODO add your handling code here:
    }//GEN-LAST:event_jScrollPane1FocusGained

    private void formWindowGainedFocus(WindowEvent evt) {//GEN-FIRST:event_formWindowGainedFocus
        // TODO add your handling code here:
    }//GEN-LAST:event_formWindowGainedFocus

    private void formWindowActivated(WindowEvent evt) {//GEN-FIRST:event_formWindowActivated

        // TODO add your handling code here:
    }//GEN-LAST:event_formWindowActivated

    private void formFocusGained(FocusEvent evt) {//GEN-FIRST:event_formFocusGained
        // TODO add your handling code here:
    }//GEN-LAST:event_formFocusGained

    private void EliminarActionPerformed(ActionEvent evt) {//GEN-FIRST:event_EliminarActionPerformed
        int nFila = jTable1.getSelectedRow();
        String num = jTable1.getValueAt(nFila, 0).toString();

        if (Config.cNivelUsuario.equals("1")) {
            Object[] opciones = {"   Si   ", "   No   "};
            int ret = JOptionPane.showOptionDialog(null, "Desea Eliminar el Registro ? ", "Confirmación", 0, 3, null, opciones, opciones[0]);
            if (ret == 0) {
                planillaDAO pl = new planillaDAO();
                try {
                    planilla p = pl.buscarId(Integer.valueOf(num));
                    if (p == null) {
                        JOptionPane.showMessageDialog(null, "Registro no Existe");
                    } else {
                        pl.borrarDetallePlanilla(Integer.valueOf(num));
                        pl.borrarPlanilla(Integer.valueOf(num));
                        JOptionPane.showMessageDialog(null, "Registro Eliminado Exitosamente");
                    }
                } catch (Exception e) {
                    JOptionPane.showMessageDialog(null, "ERROR: " + e.getMessage());
                }
            }
        }
        GrillaOCredito GrillaOC = new GrillaOCredito();
        Thread HiloGrilla = new Thread(GrillaOC);
        HiloGrilla.start();
        // TODO add your handling code here:
    }//GEN-LAST:event_EliminarActionPerformed

    private void jTable1FocusLost(FocusEvent evt) {//GEN-FIRST:event_jTable1FocusLost
        // TODO add your handling code here:
    }//GEN-LAST:event_jTable1FocusLost

    private void ListarActionPerformed(ActionEvent evt) {//GEN-FIRST:event_ListarActionPerformed
        GenerarReporte GenerarReporte = new GenerarReporte();
        Thread HiloReporte = new Thread(GenerarReporte);
        HiloReporte.start();
    }//GEN-LAST:event_ListarActionPerformed

    private void jTable1PropertyChange(PropertyChangeEvent evt) {//GEN-FIRST:event_jTable1PropertyChange
        // TODO add your handling code here:
    }//GEN-LAST:event_jTable1PropertyChange

    private void refrescarActionPerformed(ActionEvent evt) {//GEN-FIRST:event_refrescarActionPerformed
        GrillaOCredito GrillaOC = new GrillaOCredito();
        Thread HiloGrilla = new Thread(GrillaOC);
        HiloGrilla.start();        // TODO add your handling code here:
    }//GEN-LAST:event_refrescarActionPerformed

    private void combogiraduriaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_combogiraduriaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_combogiraduriaActionPerformed

    private void jTBuscarGiraduriaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTBuscarGiraduriaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTBuscarGiraduriaActionPerformed

    private void jTBuscarGiraduriaKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTBuscarGiraduriaKeyPressed
        this.jTBuscarGiraduria.addKeyListener(new KeyAdapter() {
            public void keyReleased(final KeyEvent e) {
                String cadena = (jTBuscarGiraduria.getText()).toUpperCase();
                jTBuscarGiraduria.setText(cadena);
                int indiceColumnaTabla = 0;
                switch (combogiraduria.getSelectedIndex()) {
                    case 0:
                        indiceColumnaTabla = 1;
                        break;//por nombre
                    case 1:
                        indiceColumnaTabla = 0;
                        break;//por codigo
                }
                repaint();
                filtrogira(indiceColumnaTabla);
            }
        });
        trsfiltrogira = new TableRowSorter(tablagiraduria.getModel());
        tablagiraduria.setRowSorter(trsfiltrogira);
        // TODO add your handling code here:
    }//GEN-LAST:event_jTBuscarGiraduriaKeyPressed

    private void tablagiraduriaKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tablagiraduriaKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            this.AceptarGir.doClick();
        }

        // TODO add your handling code here:
    }//GEN-LAST:event_tablagiraduriaKeyPressed

    private void AceptarGirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AceptarGirActionPerformed
        int nFila = this.tablagiraduria.getSelectedRow();
        this.codgiraduria.setText(this.tablagiraduria.getValueAt(nFila, 0).toString());
        this.nomgiraduria.setText(this.tablagiraduria.getValueAt(nFila, 1).toString());
        this.BGiraduria.setVisible(false);
        this.BGiraduria.setModal(false);
        this.dFechaF.requestFocus();

        // TODO add your handling code here:
    }//GEN-LAST:event_AceptarGirActionPerformed

    private void SalirGirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SalirGirActionPerformed
        this.BGiraduria.setModal(false);
        this.BGiraduria.setVisible(false);
        // TODO add your handling code here:
    }//GEN-LAST:event_SalirGirActionPerformed

    private void tablagiraduriaMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tablagiraduriaMouseClicked
        this.AceptarGir.doClick();
        // TODO add your handling code here:
    }//GEN-LAST:event_tablagiraduriaMouseClicked

    private void jMenu1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenu1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jMenu1ActionPerformed

    private void dFechaFFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_dFechaFFocusGained
        // TODO add your handling code here:
    }//GEN-LAST:event_dFechaFFocusGained

    private void salirgestionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_salirgestionActionPerformed
        generar.setModal(false);
        generar.setVisible(false);
        // TODO add your handling code here:
    }//GEN-LAST:event_salirgestionActionPerformed

    private void BuscarCodGiraduriaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BuscarCodGiraduriaActionPerformed
        giraduriaDAO girDAO = new giraduriaDAO();
        giraduria gi = null;
        try {
            gi = girDAO.buscarId(Integer.valueOf(this.codgiraduria.getText()));
            if (gi.getCodigo() == 0) {
                GrillaGiraduria grillagi = new GrillaGiraduria();
                Thread hilogi = new Thread(grillagi);
                hilogi.start();
                BGiraduria.setModal(true);
                BGiraduria.setSize(482, 575);
                BGiraduria.setLocationRelativeTo(null);
                BGiraduria.setVisible(true);
                BGiraduria.setTitle("Buscar Giraduria");
                this.dFechaF.requestFocus();
                BGiraduria.setModal(false);
            } else {
                nomgiraduria.setText(gi.getNombre());
                //Establecemos un título para el jDialog
                dFechaF.requestFocus();
            }

        } catch (SQLException e) {
            JOptionPane.showMessageDialog(null, "ERROR:" + e.getMessage());
        }
        // TODO add your handling code here:
    }//GEN-LAST:event_BuscarCodGiraduriaActionPerformed

    private void codgiraduriaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_codgiraduriaActionPerformed
        this.BuscarCodGiraduria.doClick();
        // TODO add your handling code here:
    }//GEN-LAST:event_codgiraduriaActionPerformed

    private void gestionarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_gestionarActionPerformed

        Object[] opciones = {"   Grabar   ", "   Salir   "};
        int ret = JOptionPane.showOptionDialog(null, "Desea Generar la Planilla del Período ? ", "Confirmación", 0, 3, null, opciones, opciones[0]);
        if (ret == 0) {
            if (incluir.isSelected()) {
                GenerarPlanillaIncluido genplanilla = new GenerarPlanillaIncluido();
                Thread genpla = new Thread(genplanilla);
                genpla.start();
                new Thread(new Job(Integer.valueOf("5"))).start();
                new Thread(new jcThread(jProgressBar1, Integer.valueOf("50"))).start();
            } else {
                GenerarPlanillaRango genplanilla = new GenerarPlanillaRango();
                Thread genpla = new Thread(genplanilla);
                genpla.start();
                new Thread(new Job(Integer.valueOf("5"))).start();
                new Thread(new jcThread(jProgressBar1, Integer.valueOf("50"))).start();
            }
        }
        // TODO add your handling code here:
    }//GEN-LAST:event_gestionarActionPerformed

    private void comboformapagoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_comboformapagoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_comboformapagoActionPerformed

    private void jTBuscarFormaPagoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTBuscarFormaPagoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTBuscarFormaPagoActionPerformed

    private void jTBuscarFormaPagoKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTBuscarFormaPagoKeyPressed
        this.jTBuscarFormaPago.addKeyListener(new KeyAdapter() {
            public void keyReleased(final KeyEvent e) {
                String cadena = (jTBuscarFormaPago.getText()).toUpperCase();
                jTBuscarFormaPago.setText(cadena);
                int indiceColumnaTabla = 0;
                switch (comboformapago.getSelectedIndex()) {
                    case 0:
                        indiceColumnaTabla = 1;
                        break;//por nombre
                    case 1:
                        indiceColumnaTabla = 0;
                        break;//por codigo
                }
                repaint();
                filtroforma(indiceColumnaTabla);
            }
        });
        trsfiltroforma = new TableRowSorter(tablaformapago.getModel());
        tablaformapago.setRowSorter(trsfiltroforma);

        // TODO add your handling code here:
    }//GEN-LAST:event_jTBuscarFormaPagoKeyPressed

    private void tablaformapagoMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tablaformapagoMouseClicked
        this.AceptarFormaPago.doClick();
        // TODO add your handling code here:
    }//GEN-LAST:event_tablaformapagoMouseClicked

    private void tablaformapagoKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tablaformapagoKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            this.AceptarFormaPago.doClick();
        }
        // TODO add your handling code here:
    }//GEN-LAST:event_tablaformapagoKeyPressed

    private void AceptarFormaPagoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AceptarFormaPagoActionPerformed
        int nFila = this.tablaformapago.getSelectedRow();
        this.codcobro.setText(this.tablaformapago.getValueAt(nFila, 0).toString());
        this.nombreformapago.setText(this.tablaformapago.getValueAt(nFila, 1).toString());
        this.BFormaPago.setVisible(false);
        this.BFormaPago.setModal(false);
        this.cargobanco.requestFocus();
        // TODO add your handling code here:
    }//GEN-LAST:event_AceptarFormaPagoActionPerformed

    private void SalirFormaPagoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SalirFormaPagoActionPerformed
        this.BFormaPago.setModal(false);
        this.BFormaPago.setVisible(false);
        // TODO add your handling code here:
    }//GEN-LAST:event_SalirFormaPagoActionPerformed

    private void BuscarFPagoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BuscarFPagoActionPerformed
        formapagoDAO frDAO = new formapagoDAO();
        formapago fr = null;
        try {
            fr = frDAO.buscarId(Integer.valueOf(this.codcobro.getText()));
            if (fr.getCodigo() == 0) {
                GrillaForma grillafr = new GrillaForma();
                Thread hilofr = new Thread(grillafr);
                hilofr.start();
                BFormaPago.setModal(true);
                BFormaPago.setSize(482, 575);
                BFormaPago.setLocationRelativeTo(null);
                BFormaPago.setVisible(true);
                BFormaPago.setTitle("Buscar Formas de Pago");
                this.cargobanco.requestFocus();
                BFormaPago.setModal(false);
            } else {
                nombreformapago.setText(fr.getNombre());
                //Establecemos un título para el jDialog
                cargobanco.requestFocus();
            }

        } catch (SQLException e) {
            JOptionPane.showMessageDialog(null, "ERROR:" + e.getMessage());
        }
    }//GEN-LAST:event_BuscarFPagoActionPerformed

    private void codcobroActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_codcobroActionPerformed
        this.BuscarFPago.doClick();
        // TODO add your handling code here:
    }//GEN-LAST:event_codcobroActionPerformed

    private void jMenuItem2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem2ActionPerformed
        int nFila = this.jTable1.getSelectedRow();
        cPlanilla = this.jTable1.getValueAt(nFila, 0).toString();
        idControl.setText(cPlanilla);
        gestioncobroDAO gDAO = new gestioncobroDAO();
        gestioncobro g = new gestioncobro();
        this.limpiacobros();
        try {
            g = gDAO.TotalCobroxNumero(Integer.valueOf(idControl.getText()));
            importecobro.setText(formatea.format(g.getCobrado()));
        } catch (SQLException ex) {
            Exceptions.printStackTrace(ex);
        }

        GrillaCobranza pcobro = new GrillaCobranza();
        Thread pcobroh = new Thread(pcobro);
        pcobroh.start();
        cobroxgiraduria.setModal(true);
        cobroxgiraduria.setSize(630, 435);
        cobroxgiraduria.setTitle("Cargar Cobranzas a Giradurías");
        cobroxgiraduria.setLocationRelativeTo(null);
        cobroxgiraduria.setVisible(true);
        fechacobro.requestFocus();
        // TODO add your handling code here:
    }//GEN-LAST:event_jMenuItem2ActionPerformed

    private void limpiacobros() {
        planillaDAO plDAO = new planillaDAO();
        planilla pl = null;
        try {
            pl = plDAO.buscarId(Integer.valueOf(idControl.getText()));
            if (pl != null) {
                nroplanilla.setText(formatosinpunto.format(pl.getIdnumero()));
                fechaplanilla.setDate(pl.getFecha());
                neto.setText(formatea.format(pl.getNetoacobrar()));
                saldoplanilla.setText(formatea.format(pl.getSaldoplanilla()));
            }
        } catch (SQLException ex) {
            Exceptions.printStackTrace(ex);
        }
        fechacobro.setCalendar(c2);
        this.vencepago.setCalendar(c2);
        codcobro.setText("0");
        cargobanco.setText("0");
        nrocheque.setText("");
        nombrecargobanco.setText("");
        nombreformapago.setText("");
        importecobro.setText("0");
    }

    private void BotonAgregarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BotonAgregarActionPerformed
        Object[] opciones = {"   Grabar   ", "   Salir   "};
        int ret = JOptionPane.showOptionDialog(null, "Desea Generar el cobro de esta Planilla ? ", "Confirmacion", 0, 3, null, opciones, opciones[0]);
        if (ret == 0) {
            cobroplanillaDAO cobDAO = new cobroplanillaDAO();
            cobroplanilla c = new cobroplanilla();

            formapagoDAO frmDAO = new formapagoDAO();
            formapago fr = null;

            bancoplazaDAO bcoDAO = new bancoplazaDAO();
            bancoplaza bpl = null;

            try {
                fr = frmDAO.buscarId(Integer.valueOf(codcobro.getText()));
                bpl = bcoDAO.buscarId(Integer.valueOf(cargobanco.getText()));
            } catch (SQLException ex) {
                Exceptions.printStackTrace(ex);
            }
            Date FechaPago = ODate.de_java_a_sql(fechacobro.getDate());
            Date Vence = ODate.de_java_a_sql(vencepago.getDate());
            String cImporte = importecobro.getText();
            cImporte = cImporte.replace(".", "");
            BigDecimal ncobrado = new BigDecimal(cImporte);

            c.setIdplanilla(Double.valueOf(nroplanilla.getText()));
            c.setFechacobro(FechaPago);
            c.setNrocheque(nrocheque.getText());
            c.setVencecheque(Vence);
            c.setFormacobro(fr);
            c.setCargobanco(bpl);
            c.setImporte(ncobrado);

            try {
                cobDAO.insertarCobro(c);
                JOptionPane.showMessageDialog(null, "Datos Agregados Correctamente");
            } catch (SQLException ex) {
                Exceptions.printStackTrace(ex);
                JOptionPane.showMessageDialog(null, "Error BD: " + ex.getMessage());
            }
            GrillaCobranza pcobro = new GrillaCobranza();
            Thread pcobroh = new Thread(pcobro);
            pcobroh.start();
            this.limpiacobros();
        }
        // TODO add your handling code here:
    }//GEN-LAST:event_BotonAgregarActionPerformed

    private void BotonBorrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BotonBorrarActionPerformed
        Object[] opciones = {"   Borrar   ", "   Salir   "};
        int ret = JOptionPane.showOptionDialog(null, "Desea Borrar el cobro Seleccionado ? ", "Confirmacion", 0, 3, null, opciones, opciones[0]);
        if (ret == 0) {
            int nFila = this.tablacobranza.getSelectedRow();
            cPlanilla = this.tablacobranza.getValueAt(nFila, 0).toString();
            cobroplanillaDAO bDAO = new cobroplanillaDAO();
            cobroplanilla cpl = null;

            try {
                cpl = bDAO.buscarId(Double.valueOf(cPlanilla));
                if (cpl != null) {
                    bDAO.borrarCobroPlanilla(cpl.getIdpago());
                    JOptionPane.showMessageDialog(null, "Registro Eliminado");
                    GrillaCobranza pcobro = new GrillaCobranza();
                    Thread pcobroh = new Thread(pcobro);
                    pcobroh.start();
                    this.limpiacobros();
                }
            } catch (SQLException ex) {
                Exceptions.printStackTrace(ex);
            }
        }

        // TODO add your handling code here:
    }//GEN-LAST:event_BotonBorrarActionPerformed

    private void combobancoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_combobancoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_combobancoActionPerformed

    private void JTBuscarBancoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_JTBuscarBancoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_JTBuscarBancoActionPerformed

    private void JTBuscarBancoKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_JTBuscarBancoKeyPressed
        this.JTBuscarBanco.addKeyListener(new KeyAdapter() {
            public void keyReleased(final KeyEvent e) {
                String cadena = (JTBuscarBanco.getText()).toUpperCase();
                JTBuscarBanco.setText(cadena);
                int indiceColumnaTabla = 0;
                switch (combobanco.getSelectedIndex()) {
                    case 0:
                        indiceColumnaTabla = 1;
                        break;//por nombre
                    case 1:
                        indiceColumnaTabla = 0;
                        break;//por codigo
                }
                repaint();
                filtro(indiceColumnaTabla);
            }
        });
        trsfiltroplaza = new TableRowSorter(tablabanco.getModel());
        tablabanco.setRowSorter(trsfiltroplaza);
        // TODO add your handling code here:
    }//GEN-LAST:event_JTBuscarBancoKeyPressed

    private void tablabancoMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tablabancoMouseClicked
        this.AceptarBco.doClick();
        // TODO add your handling code here:
    }//GEN-LAST:event_tablabancoMouseClicked

    private void tablabancoKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tablabancoKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            this.AceptarGir.doClick();
        }

        // TODO add your handling code here:
    }//GEN-LAST:event_tablabancoKeyPressed

    private void AceptarBcoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AceptarBcoActionPerformed
        int nFila = this.tablabanco.getSelectedRow();
        this.cargobanco.setText(this.tablabanco.getValueAt(nFila, 0).toString());
        this.nombrecargobanco.setText(this.tablabanco.getValueAt(nFila, 1).toString());

        this.wBuscarBco.setVisible(false);
        wBuscarBco.setModal(true);
        this.nrocheque.requestFocus();
        // TODO add your handling code here:
    }//GEN-LAST:event_AceptarBcoActionPerformed

    private void SalirBcoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SalirBcoActionPerformed
        wBuscarBco.setModal(false);
        wBuscarBco.setVisible(false);
        // TODO add your handling code here:
    }//GEN-LAST:event_SalirBcoActionPerformed

    private void BuscarBancoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BuscarBancoActionPerformed
        bancoplazaDAO plDAO = new bancoplazaDAO();
        bancoplaza pl = null;
        try {
            pl = plDAO.buscarId(Integer.valueOf(this.cargobanco.getText()));
            if (pl.getCodigo() == 0) {
                GrillaBanco grillapl = new GrillaBanco();
                Thread hilopl = new Thread(grillapl);
                hilopl.start();
                wBuscarBco.setModal(true);
                wBuscarBco.setSize(482, 575);
                wBuscarBco.setLocationRelativeTo(null);
                wBuscarBco.setVisible(true);
                wBuscarBco.setTitle("Buscar Bancos de Plaza");
                this.nrocheque.requestFocus();
                wBuscarBco.setModal(false);
            } else {
                nombrecargobanco.setText(pl.getNombre());
                //Establecemos un título para el jDialog
                nrocheque.requestFocus();
            }

        } catch (SQLException e) {
            JOptionPane.showMessageDialog(null, "ERROR:" + e.getMessage());
        }

        // TODO add your handling code here:
    }//GEN-LAST:event_BuscarBancoActionPerformed

    private void cargobancoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cargobancoActionPerformed
        this.BuscarBanco.doClick();
        // TODO add your handling code here:
    }//GEN-LAST:event_cargobancoActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        cobroxgiraduria.setModal(true);
        cobroxgiraduria.setVisible(false);
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton1ActionPerformed

    private void fechacobroKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_fechacobroKeyPressed
        if (evt.getKeyCode() == 10 || evt.getKeyCode() == KeyEvent.VK_DOWN) {
            this.codcobro.requestFocus();
        }
        // TODO add your handling code here:
    }//GEN-LAST:event_fechacobroKeyPressed

    private void codcobroKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_codcobroKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_UP) {
            this.fechacobro.requestFocus();
        }   // TO        // TODO add your handling code here:

        // TODO add your handling code here:
    }//GEN-LAST:event_codcobroKeyPressed

    private void cargobancoKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_cargobancoKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_UP) {
            this.codcobro.requestFocus();
        }   // TO        // TODO add your handling code here:
        // TODO add your handling code here:
    }//GEN-LAST:event_cargobancoKeyPressed

    private void nrochequeKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_nrochequeKeyPressed
        if (evt.getKeyCode() == 10 || evt.getKeyCode() == KeyEvent.VK_DOWN) {
            this.vencepago.requestFocus();
        }
        if (evt.getKeyCode() == KeyEvent.VK_UP) {
            this.cargobanco.requestFocus();
        }   // TO        // TODO add your handling code here:

        // TODO add your handling code here:
    }//GEN-LAST:event_nrochequeKeyPressed

    private void vencepagoKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_vencepagoKeyPressed
        if (evt.getKeyCode() == 10 || evt.getKeyCode() == KeyEvent.VK_DOWN) {
            this.importecobro.requestFocus();
        }
        if (evt.getKeyCode() == KeyEvent.VK_UP) {
            this.nrocheque.requestFocus();
        }   // TO        // TODO add your handling code here:

        // TODO add your handling code here:
    }//GEN-LAST:event_vencepagoKeyPressed

    private void importecobroActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_importecobroActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_importecobroActionPerformed

    private void importecobroKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_importecobroKeyPressed
        if (evt.getKeyCode() == 10 || evt.getKeyCode() == KeyEvent.VK_DOWN) {
            this.BotonAgregar.requestFocus();
        }
        if (evt.getKeyCode() == KeyEvent.VK_UP) {
            this.vencepago.requestFocus();
        }   // TO        // TODO add your handling code here:
        // TODO add your handling code here:
    }//GEN-LAST:event_importecobroKeyPressed

    private void dFechaIFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_dFechaIFocusGained
        // TODO add your handling code here:
    }//GEN-LAST:event_dFechaIFocusGained

    private void jMenuItem1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem1ActionPerformed
        GeneraPlanilla1 GenerarReporte = new GeneraPlanilla1(1);
        Thread HiloReporte = new Thread(GenerarReporte);
        HiloReporte.start();
        // TODO add your handling code here:
    }//GEN-LAST:event_jMenuItem1ActionPerformed

    private void jMenuItem4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem4ActionPerformed
        GeneraPlanilla1 GenerarReporte = new GeneraPlanilla1(2);
        Thread HiloReporte = new Thread(GenerarReporte);
        HiloReporte.start();
        // TODO add your handling code here:
    }//GEN-LAST:event_jMenuItem4ActionPerformed

    private void jMenuItem3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem3ActionPerformed
        int nFila = this.jTable1.getSelectedRow();
        cPlanilla = this.jTable1.getValueAt(nFila, 0).toString();
        idControl.setText(cPlanilla);
        this.limpiacobrosocios();
        cobroxsocio.setModal(true);
        cobroxsocio.setSize(630, 435);
        cobroxsocio.setTitle("Cargar Cobranzas a Socios");
        cobroxsocio.setLocationRelativeTo(null);
        cobroxsocio.setVisible(true);
        socio.requestFocus();
        // TODO add your handling code here:
    }//GEN-LAST:event_jMenuItem3ActionPerformed

    private void socioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_socioActionPerformed
        this.BuscarSocio.doClick();
        // TODO add your handling code here:
    }//GEN-LAST:event_socioActionPerformed

    private void socioKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_socioKeyPressed
        // TODO add your handling code here:
    }//GEN-LAST:event_socioKeyPressed

    private void BuscarSocioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BuscarSocioActionPerformed
        clienteDAO clDAO = new clienteDAO();
        cliente cl = null;
        try {
            cl = clDAO.buscarIdSimple(Integer.valueOf(this.socio.getText()));
            if (cl.getCodigo() == 0) {
                GrillaSocio grillacl = new GrillaSocio();
                Thread hilocl = new Thread(grillacl);
                hilocl.start();
                BCliente.setModal(true);
                BCliente.setSize(482, 575);
                BCliente.setLocationRelativeTo(null);
                BCliente.setTitle("Buscar Socio");
                BCliente.setVisible(true);
                BCliente.setModal(false);
            } else {
                nombresocio.setText(cl.getNombre());
                //Establecemos un título para el jDialog
            }
            importecobrosocio.requestFocus();

        } catch (SQLException e) {
            JOptionPane.showMessageDialog(null, "ERROR:" + e.getMessage());
        }
        // TODO add your handling code here:
    }//GEN-LAST:event_BuscarSocioActionPerformed

    private void importecobrosocioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_importecobrosocioActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_importecobrosocioActionPerformed

    private void importecobrosocioKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_importecobrosocioKeyPressed
        // TODO add your handling code here:
    }//GEN-LAST:event_importecobrosocioKeyPressed

    private void BotonGestionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BotonGestionActionPerformed
        GrillaCobranzaSocio pcobros = new GrillaCobranzaSocio();
        Thread pcobrosocio = new Thread(pcobros);
        pcobrosocio.start();
        // TODO add your handling code here:
    }//GEN-LAST:event_BotonGestionActionPerformed

    private void BotonConfirmarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BotonConfirmarActionPerformed
        //CONFIRMAMOS EL COBRO EN LA TABLA DE GESTIONES
        Object[] opciones = {"  Si   ", "   No   "};
        int ret = JOptionPane.showOptionDialog(null, "Confirmar el Importe Cobrado ? ", "Confirmación", 0, 3, null, opciones, opciones[0]);
        if (ret == 0) {
            String cItemCobro = "0";
            String idDocumento = "";
            BigDecimal nCobrado = new BigDecimal(0);
            gestioncobroDAO gcDAO = new gestioncobroDAO();
            int totalRow = tablacobranzasocio.getRowCount();
            totalRow -= 1;
            for (int i = 0; i <= (totalRow); i++) {
                idDocumento = this.tablacobranzasocio.getValueAt(i, 0).toString(); // COLUMNA ID
                cItemCobro = this.tablacobranzasocio.getValueAt(i, 6).toString(); // COLUMNA IMPÓRTE A COBRAR
                if (cItemCobro == "0") {
                    nCobrado = BigDecimal.ZERO;
                } else {
                    cItemCobro = cItemCobro.replace(".", "").replace(",", ".");
                    nCobrado = new BigDecimal(cItemCobro);
                }
                gestioncobro gc = new gestioncobro();
                gc.setIddocumento(idDocumento);
                gc.setCobrado(nCobrado);
                try {
                    gcDAO.ActualizarDebitoCuenta(gc);
                } catch (SQLException ex) {
                    Exceptions.printStackTrace(ex);
                }
            }
        }
        // TODO add your handling code here:
    }//GEN-LAST:event_BotonConfirmarActionPerformed

    private void BotonSalirSocioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BotonSalirSocioActionPerformed
        cobroxsocio.setModal(true);
        cobroxsocio.setVisible(false);
        // TODO add your handling code here:
    }//GEN-LAST:event_BotonSalirSocioActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        this.cargarcobrosocios();
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton2ActionPerformed

    private void comboclienteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_comboclienteActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_comboclienteActionPerformed

    private void jTBuscarClienteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTBuscarClienteActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTBuscarClienteActionPerformed

    private void jTBuscarClienteKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTBuscarClienteKeyPressed
        this.jTBuscarCliente.addKeyListener(new KeyAdapter() {
            public void keyReleased(final KeyEvent e) {
                String cadena = (jTBuscarCliente.getText()).toUpperCase();
                jTBuscarCliente.setText(cadena);
                int indiceColumnaTabla = 0;
                switch (combocliente.getSelectedIndex()) {
                    case 0:
                        indiceColumnaTabla = 1;
                        break;//por nombre
                    case 1:
                        indiceColumnaTabla = 0;
                        break;//por codigo
                    case 2:
                        indiceColumnaTabla = 3;
                        break;//por RUC
                }
                repaint();
                filtrocli(indiceColumnaTabla);
            }
        });
        trsfiltrocli = new TableRowSorter(tablacliente.getModel());
        tablacliente.setRowSorter(trsfiltrocli);
        // TODO add your handling code here:
    }//GEN-LAST:event_jTBuscarClienteKeyPressed

    public void filtrocli(int nNumeroColumna) {
        trsfiltrocli.setRowFilter(RowFilter.regexFilter(this.jTBuscarCliente.getText(), nNumeroColumna));
    }


    private void tablaclienteMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tablaclienteMouseClicked
        this.AceptarCli.doClick();
        // TODO add your handling code here:
    }//GEN-LAST:event_tablaclienteMouseClicked

    private void tablaclienteKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tablaclienteKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            this.AceptarCli.doClick();
        }
        // TODO add your handling code here:
    }//GEN-LAST:event_tablaclienteKeyPressed

    private void AceptarCliActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AceptarCliActionPerformed
        int nFila = this.tablacliente.getSelectedRow();
        this.socio.setText(this.tablacliente.getValueAt(nFila, 0).toString());
        this.nombresocio.setText(this.tablacliente.getValueAt(nFila, 1).toString());
        this.BCliente.setVisible(false);
        this.jTBuscarCliente.setText("");
        this.importecobrosocio.requestFocus();

        // TODO add your handling code here:
    }//GEN-LAST:event_AceptarCliActionPerformed

    private void SalirCliActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SalirCliActionPerformed
        this.BCliente.setVisible(false);
        // TODO add your handling code here:
    }//GEN-LAST:event_SalirCliActionPerformed

    private void botonconfirmarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonconfirmarActionPerformed
        Object[] opciones = {"   Grabar   ", "   Salir   "};
        int ret = JOptionPane.showOptionDialog(null, "Desea Generar el cobro de esta Planilla ? ", "Confirmacion", 0, 3, null, opciones, opciones[0]);

        //GESTION CIERRE
        if (ret == 0) {
            ConfirmaCierre GenerarCierre = new ConfirmaCierre();
            Thread HiloCierre = new Thread(GenerarCierre);
            HiloCierre.start();
        }
        // TODO add your handling code here:
    }//GEN-LAST:event_botonconfirmarActionPerformed

    private void jMenuItem5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem5ActionPerformed
        GeneraPlanilla1 GenerarReporte = new GeneraPlanilla1(3);
        Thread HiloReporte = new Thread(GenerarReporte);
        HiloReporte.start();
        // TODO add your handling code here:
    }//GEN-LAST:event_jMenuItem5ActionPerformed

    private void jMenuItem6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem6ActionPerformed
        GeneraPlanilla1 GenerarReporte = new GeneraPlanilla1(4);
        Thread HiloReporte = new Thread(GenerarReporte);
        HiloReporte.start();
        // TODO add your handling code here:
    }//GEN-LAST:event_jMenuItem6ActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        this.detalleplanilla.setVisible(false);
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton4ActionPerformed

    private void verdetallesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_verdetallesActionPerformed

        int nFila = jTable1.getSelectedRow();
        int nNumero = Integer.valueOf(jTable1.getValueAt(nFila, 0).toString());
        if (nFila < 0) {
            JOptionPane.showMessageDialog(null, "Debe Seleccionar un Registro");
            this.jTable1.requestFocus();
            return;
        }

        int cantidadRegistro = modelodetalle.getRowCount();
        for (int i = 1; i <= cantidadRegistro; i++) {
            modelodetalle.removeRow(0);
        }

        gestioncobroDAO detDAO = new gestioncobroDAO();
        try {
            for (gestioncobro detcob : detDAO.PlanillaGestionxNumero(nNumero)) {
                String Detalle[] = {formatea.format(detcob.getCliente().getCodigo()), detcob.getCliente().getCedula(), detcob.getCliente().getNombre(), formatea.format(detcob.getCobrado())};
                modelodetalle.addRow(Detalle);
            }
        } catch (SQLException e) {
            JOptionPane.showMessageDialog(null, "ERROR: " + e.getMessage());
        }
        int cantFilas = tabladetalle.getRowCount();
        detalleplanilla.setModal(true);
        //(Ancho,Alto)
        detalleplanilla.setSize(653, 500);
        //Establecemos un título para el jDialog
        detalleplanilla.setTitle("Detalle de Cuotas de Planilla");
        detalleplanilla.setLocationRelativeTo(null);
        detalleplanilla.setVisible(true);

        // TODO add your handling code here:
    }//GEN-LAST:event_verdetallesActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        try {
            obj = new clsExportarExcel();
            obj.exportarExcel(tabladetalle);
        } catch (IOException ex) {
            Logger.getLogger(planillagiraduria.class.getName()).log(Level.SEVERE, null, ex);
        }
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton3ActionPerformed

    public void filtro(int nNumeroColumna) {
        trsfiltro.setRowFilter(RowFilter.regexFilter(buscarcadena.getText(), nNumeroColumna));
    }

    public void filtrobco(int nNumeroColumna) {
        trsfiltroplaza.setRowFilter(RowFilter.regexFilter(JTBuscarBanco.getText(), nNumeroColumna));
    }

    public void filtrogira(int nNumeroColumna) {
        trsfiltrogira.setRowFilter(RowFilter.regexFilter(this.jTBuscarGiraduria.getText(), nNumeroColumna));
    }

    public void filtroforma(int nNumeroColumna) {
        trsfiltroforma.setRowFilter(RowFilter.regexFilter(this.jTBuscarFormaPago.getText(), nNumeroColumna));
    }

    private void cargarTitulo() {
        modelo.addColumn("Nro. Planilla");
        modelo.addColumn("Fecha");
        modelo.addColumn("Giraduria");
        modelo.addColumn("Descripción");
        modelo.addColumn("SubTotal");
        modelo.addColumn("Neto a Cobrar");

        int[] anchos = {120, 90, 90, 250, 100, 250};
        for (int i = 0; i < modelo.getColumnCount(); i++) {
            jTable1.getColumnModel().getColumn(i).setPreferredWidth(anchos[i]);
        }
        ((DefaultTableCellRenderer) jTable1.getTableHeader().getDefaultRenderer()).setHorizontalAlignment(JLabel.CENTER);// Este código es para centrar las cabeceras de la tabla.
        jTable1.getTableHeader().setFont(new Font("Arial Black", 1, 11));

        Font font = new Font("Arial", Font.BOLD, 10);
        this.jTable1.setFont(font);

        DefaultTableCellRenderer TablaRenderer = new DefaultTableCellRenderer();
        DefaultTableCellRenderer AlinearCentro = new DefaultTableCellRenderer();
        TablaRenderer.setHorizontalAlignment(SwingConstants.RIGHT); // aqui defines donde alinear 
        AlinearCentro.setHorizontalAlignment(SwingConstants.CENTER);
        this.jTable1.getColumnModel().getColumn(0).setCellRenderer(TablaRenderer);
        this.jTable1.getColumnModel().getColumn(2).setCellRenderer(TablaRenderer);
        this.jTable1.getColumnModel().getColumn(4).setCellRenderer(TablaRenderer);
        this.jTable1.getColumnModel().getColumn(5).setCellRenderer(TablaRenderer);
    }

    private void TituloDetalle() {
        modelodetalle.addColumn("Código");
        modelodetalle.addColumn("RUC");
        modelodetalle.addColumn("Nombre del Socio");
        modelodetalle.addColumn("Total a Cobrar");

        int[] anchos = {90, 90, 150, 100};
        for (int i = 0; i < modelodetalle.getColumnCount(); i++) {
            tabladetalle.getColumnModel().getColumn(i).setPreferredWidth(anchos[i]);
        }
        ((DefaultTableCellRenderer) tabladetalle.getTableHeader().getDefaultRenderer()).setHorizontalAlignment(JLabel.CENTER);// Este código es para centrar las cabeceras de la tabla.
        tabladetalle.getTableHeader().setFont(new Font("Arial Black", 1, 11));

        Font font = new Font("Arial", Font.BOLD, 10);
        this.tabladetalle.setFont(font);

        DefaultTableCellRenderer TablaRenderer = new DefaultTableCellRenderer();
        DefaultTableCellRenderer AlinearCentro = new DefaultTableCellRenderer();
        TablaRenderer.setHorizontalAlignment(SwingConstants.RIGHT); // aqui defines donde alinear 
        AlinearCentro.setHorizontalAlignment(SwingConstants.CENTER);
        this.tabladetalle.getColumnModel().getColumn(0).setCellRenderer(TablaRenderer);
        this.tabladetalle.getColumnModel().getColumn(1).setCellRenderer(TablaRenderer);
        this.tabladetalle.getColumnModel().getColumn(3).setCellRenderer(TablaRenderer);
    }

    private void TitGir() {
        modelogiraduria.addColumn("Código");
        modelogiraduria.addColumn("Nombre");

        int[] anchos = {90, 200};
        for (int i = 0; i < modelogiraduria.getColumnCount(); i++) {
            tablagiraduria.getColumnModel().getColumn(i).setPreferredWidth(anchos[i]);
        }
        ((DefaultTableCellRenderer) tablagiraduria.getTableHeader().getDefaultRenderer()).setHorizontalAlignment(JLabel.CENTER);// Este código es para centrar las cabeceras de la tabla.
        tablagiraduria.getTableHeader().setFont(new Font("Arial Black", 1, 10));

        // Hacemos Invisible la Celda de Costos de los Productos
        Font font = new Font("Arial", Font.BOLD, 9);
        this.tablagiraduria.setFont(font);

        DefaultTableCellRenderer TablaRenderer = new DefaultTableCellRenderer();
        TablaRenderer.setHorizontalAlignment(SwingConstants.RIGHT); // aqui defines donde alinear 
        this.tablagiraduria.getColumnModel().getColumn(0).setCellRenderer(TablaRenderer);
    }

    private void TitForma() {
        modeloformapago.addColumn("Código");
        modeloformapago.addColumn("Nombre");

        int[] anchos = {90, 200};
        for (int i = 0; i < modeloformapago.getColumnCount(); i++) {
            tablaformapago.getColumnModel().getColumn(i).setPreferredWidth(anchos[i]);
        }
        ((DefaultTableCellRenderer) tablaformapago.getTableHeader().getDefaultRenderer()).setHorizontalAlignment(JLabel.CENTER);// Este código es para centrar las cabeceras de la tabla.
        tablaformapago.getTableHeader().setFont(new Font("Arial Black", 1, 10));

        // Hacemos Invisible la Celda de Costos de los Productos
        Font font = new Font("Arial", Font.BOLD, 9);
        this.tablaformapago.setFont(font);

        DefaultTableCellRenderer TablaRenderer = new DefaultTableCellRenderer();
        TablaRenderer.setHorizontalAlignment(SwingConstants.RIGHT); // aqui defines donde alinear 
        this.tablaformapago.getColumnModel().getColumn(0).setCellRenderer(TablaRenderer);
    }

    private void TitCobranzaSocio() {
        modelocobrosocio.addColumn("Id");
        modelocobrosocio.addColumn("Documento");
        modelocobrosocio.addColumn("Fecha");
        modelocobrosocio.addColumn("Vence");
        modelocobrosocio.addColumn("Concepto");
        modelocobrosocio.addColumn("Enviado");
        modelocobrosocio.addColumn("Cobrado");

        int[] anchos = {200, 90, 90, 100, 160, 90, 90};
        for (int i = 0; i < modelocobrosocio.getColumnCount(); i++) {
            tablacobranzasocio.getColumnModel().getColumn(i).setPreferredWidth(anchos[i]);
        }
        ((DefaultTableCellRenderer) tablacobranzasocio.getTableHeader().getDefaultRenderer()).setHorizontalAlignment(JLabel.CENTER);// Este código es para centrar las cabeceras de la tabla.
        tablacobranzasocio.getTableHeader().setFont(new Font("Arial Black", 1, 10));

        // Hacemos Invisible la Celda de Costos de los Productos
        Font font = new Font("Arial", Font.BOLD, 9);
        this.tablacobranzasocio.setFont(font);

        DefaultTableCellRenderer TablaRenderer = new DefaultTableCellRenderer();
        TablaRenderer.setHorizontalAlignment(SwingConstants.RIGHT); // aqui defines donde alinear 
        this.tablacobranzasocio.getColumnModel().getColumn(1).setCellRenderer(TablaRenderer);
        this.tablacobranzasocio.getColumnModel().getColumn(5).setCellRenderer(TablaRenderer);
        this.tablacobranzasocio.getColumnModel().getColumn(6).setCellRenderer(TablaRenderer);

        this.tablacobranzasocio.getColumnModel().getColumn(0).setMaxWidth(0);
        this.tablacobranzasocio.getColumnModel().getColumn(0).setMinWidth(0);
        this.tablacobranzasocio.getTableHeader().getColumnModel().getColumn(0).setMaxWidth(0);
        this.tablacobranzasocio.getTableHeader().getColumnModel().getColumn(0).setMinWidth(0);

    }

    private void TitCobranza() {
        modelocobro.addColumn("Id");
        modelocobro.addColumn("Fecha Cobro");
        modelocobro.addColumn("Cargo Banco");
        modelocobro.addColumn("N° Cheque");
        modelocobro.addColumn("Importe");

        int[] anchos = {90, 200, 250, 100, 100};
        for (int i = 0; i < modelocobro.getColumnCount(); i++) {
            tablacobranza.getColumnModel().getColumn(i).setPreferredWidth(anchos[i]);
        }
        ((DefaultTableCellRenderer) tablacobranza.getTableHeader().getDefaultRenderer()).setHorizontalAlignment(JLabel.CENTER);// Este código es para centrar las cabeceras de la tabla.
        tablacobranza.getTableHeader().setFont(new Font("Arial Black", 1, 10));

        // Hacemos Invisible la Celda de Costos de los Productos
        Font font = new Font("Arial", Font.BOLD, 9);
        this.tablacobranza.setFont(font);

        DefaultTableCellRenderer TablaRenderer = new DefaultTableCellRenderer();
        TablaRenderer.setHorizontalAlignment(SwingConstants.RIGHT); // aqui defines donde alinear 
        this.tablacobranza.getColumnModel().getColumn(0).setCellRenderer(TablaRenderer);
        this.tablacobranza.getColumnModel().getColumn(4).setCellRenderer(TablaRenderer);
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            javax.swing.UIManager.setLookAndFeel(UIManager.getSystemLookAndFeelClassName());
        } catch (Exception e) {    //</editor-fold>
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new planillagiraduria().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton AceptarBco;
    private javax.swing.JButton AceptarCli;
    private javax.swing.JButton AceptarFormaPago;
    private javax.swing.JButton AceptarGir;
    private javax.swing.JButton Agregar;
    private javax.swing.JDialog BCliente;
    private javax.swing.JDialog BFormaPago;
    private javax.swing.JDialog BGiraduria;
    private javax.swing.JButton BotonAgregar;
    private javax.swing.JButton BotonBorrar;
    private javax.swing.JButton BotonConfirmar;
    private javax.swing.JButton BotonGestion;
    private javax.swing.JButton BotonSalirSocio;
    private javax.swing.JButton BuscarBanco;
    private javax.swing.JButton BuscarCodGiraduria;
    private javax.swing.JButton BuscarFPago;
    private javax.swing.JButton BuscarSocio;
    private javax.swing.JButton Eliminar;
    private javax.swing.JTextField JTBuscarBanco;
    private javax.swing.JButton Listar;
    private javax.swing.JButton Modificar;
    private javax.swing.JButton SalirBco;
    private javax.swing.JButton SalirCli;
    private javax.swing.JButton SalirCompleto;
    private javax.swing.JButton SalirFormaPago;
    private javax.swing.JButton SalirGir;
    private javax.swing.JButton botonconfirmar;
    private javax.swing.JTextField buscarcadena;
    private javax.swing.JTextField cargobanco;
    private javax.swing.JDialog cobroxgiraduria;
    private javax.swing.JDialog cobroxsocio;
    private javax.swing.JTextField codcobro;
    private javax.swing.JTextField codgiraduria;
    private javax.swing.JComboBox combobanco;
    private javax.swing.JComboBox combocliente;
    private javax.swing.JComboBox comboformapago;
    private javax.swing.JComboBox combogiraduria;
    private com.toedter.calendar.JDateChooser dFechaF;
    private com.toedter.calendar.JDateChooser dFechaI;
    private com.toedter.calendar.JDateChooser dFinal;
    private com.toedter.calendar.JDateChooser dInicial;
    private javax.swing.JDialog detalleplanilla;
    private org.edisoncor.gui.label.LabelMetric etiquetacredito;
    private com.toedter.calendar.JDateChooser fechacobro;
    private com.toedter.calendar.JDateChooser fechaplanilla;
    private com.toedter.calendar.JDateChooser fechaplanillasocio;
    private javax.swing.JDialog generar;
    private javax.swing.JCheckBox generarInteres;
    private javax.swing.JButton gestionar;
    private javax.swing.JTextField idControl;
    private javax.swing.JFormattedTextField importecobro;
    private javax.swing.JFormattedTextField importecobrosocio;
    private javax.swing.JCheckBox incluir;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JComboBox jComboBox1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel26;
    private javax.swing.JLabel jLabel27;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JMenuItem jMenuItem2;
    private javax.swing.JMenuItem jMenuItem3;
    private javax.swing.JMenuItem jMenuItem4;
    private javax.swing.JMenuItem jMenuItem5;
    private javax.swing.JMenuItem jMenuItem6;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel10;
    private javax.swing.JPanel jPanel11;
    private javax.swing.JPanel jPanel12;
    private javax.swing.JPanel jPanel13;
    private javax.swing.JPanel jPanel14;
    private javax.swing.JPanel jPanel16;
    private javax.swing.JPanel jPanel17;
    private javax.swing.JPanel jPanel18;
    private javax.swing.JPanel jPanel19;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel20;
    private javax.swing.JPanel jPanel21;
    private javax.swing.JPanel jPanel22;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JPanel jPanel9;
    private javax.swing.JProgressBar jProgressBar1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JScrollPane jScrollPane6;
    private javax.swing.JScrollPane jScrollPane7;
    private javax.swing.JScrollPane jScrollPane8;
    private javax.swing.JPopupMenu.Separator jSeparator1;
    private javax.swing.JPopupMenu.Separator jSeparator2;
    private javax.swing.JPopupMenu.Separator jSeparator3;
    private javax.swing.JPopupMenu.Separator jSeparator4;
    private javax.swing.JPopupMenu.Separator jSeparator5;
    private javax.swing.JTextField jTBuscarCliente;
    private javax.swing.JTextField jTBuscarFormaPago;
    private javax.swing.JTextField jTBuscarGiraduria;
    private javax.swing.JTable jTable1;
    private org.edisoncor.gui.label.LabelTask labelTask1;
    private javax.swing.JFormattedTextField neto;
    private javax.swing.JFormattedTextField netosocio;
    private javax.swing.JTextField nombrecargobanco;
    private javax.swing.JTextField nombreformapago;
    private javax.swing.JTextField nombresocio;
    private javax.swing.JTextField nomgiraduria;
    private javax.swing.JTextField nrocheque;
    private javax.swing.JTextField nroplanilla;
    private javax.swing.JTextField nroplanillasocio;
    private org.edisoncor.gui.panel.Panel panel1;
    private javax.swing.JButton refrescar;
    private javax.swing.JFormattedTextField saldoplanilla;
    private javax.swing.JFormattedTextField saldosocio;
    private javax.swing.JButton salirgestion;
    private javax.swing.JTextField socio;
    private javax.swing.JTable tablabanco;
    private javax.swing.JTable tablacliente;
    private javax.swing.JTable tablacobranza;
    private javax.swing.JTable tablacobranzasocio;
    private javax.swing.JTable tabladetalle;
    private javax.swing.JTable tablaformapago;
    private javax.swing.JTable tablagiraduria;
    private com.toedter.calendar.JDateChooser vencepago;
    private javax.swing.JButton verdetalles;
    private javax.swing.JDialog wBuscarBco;
    // End of variables declaration//GEN-END:variables

    private class GenerarReporte extends Thread {

        public void run() {
            con = new Conexion();
            stm = con.conectar();
            try {
                Map parameters = new HashMap();
                //Ahora que hay parametros le enviamos uno con el mismo nombre del que creamos
                //en el reporte
                int nFila = jTable1.getSelectedRow();
                String num = jTable1.getValueAt(nFila, 0).toString();

                parameters.put("cNombreEmpresa", Config.cNombreEmpresa);
                parameters.put("Numero", num);
                parameters.put("Ruc", Config.cRucEmpresa);
                parameters.put("Ramo", Config.cRamos);
                parameters.put("Telefono", Config.cTelefono);
                parameters.put("Direccion", Config.cDireccion);
                JasperReport jr = null;
                URL url = getClass().getClassLoader().getResource("Reports/planilla_giraduria_crediefectivo.jasper");
                jr = (JasperReport) JRLoader.loadObject(url);
                JasperPrint masterPrint = null;
                //Se le incluye el parametro con el nombre parameters porque asi lo definimos
                masterPrint = JasperFillManager.fillReport(jr, parameters, stm.getConnection());
                JasperViewer ventana = new JasperViewer(masterPrint, false);
                ventana.setTitle("Vista Previa");
                ventana.setVisible(true);
            } catch (Exception e) {
                JDialog.setDefaultLookAndFeelDecorated(true);
                JOptionPane.showMessageDialog(null, e.getMessage(), "Error", 1);
            }
        }
    }

    private class GrillaOCredito extends Thread {

        public void run() {

            Date dFechaInicio = ODate.de_java_a_sql(dInicial.getDate());
            Date dFechaFinal = ODate.de_java_a_sql(dFinal.getDate());

            //Antes de Cargar el Jtable Ajustamos el ancho de las columnas con el Ancho que se nos antoje
            int cantidadRegistro = modelo.getRowCount();
            for (int i = 1; i <= cantidadRegistro; i++) {
                modelo.removeRow(0);
            }
            //      clienteDAO cliente = new clienteDAO();
            //     cliente cl = null;

            planillaDAO DAO = new planillaDAO();
            try {
                for (planilla orden : DAO.MostrarxFecha(dFechaInicio, dFechaFinal)) {
                    String Datos[] = {formatosinpunto.format(orden.getIdnumero()), formatoFecha.format(orden.getFecha()), String.valueOf(orden.getGiraduria().getCodigo()), orden.getGiraduria().getNombre(), formatea.format(orden.getTotal()), formatea.format(orden.getNetoacobrar())};
                    modelo.addRow(Datos);
                }
            } catch (SQLException e) {
                JOptionPane.showMessageDialog(null, "ERROR: " + e.getMessage());
            }

            jTable1.setRowSorter(new TableRowSorter(modelo));
            int cantFilas = jTable1.getRowCount();
            if (cantFilas > 0) {
                Modificar.setEnabled(true);
                Eliminar.setEnabled(true);
                Listar.setEnabled(true);
                verdetalles.setEnabled(true);
            } else {
                Modificar.setEnabled(false);
                Eliminar.setEnabled(false);
                Listar.setEnabled(false);
                verdetalles.setEnabled(false);
            }
        }
    }

    private class GrillaGiraduria extends Thread {

        public void run() {

            //Antes de Cargar el Jtable Ajustamos el ancho de las columnas con el Ancho que se nos antoje
            int cantidadRegistro = modelogiraduria.getRowCount();
            for (int i = 1; i <= cantidadRegistro; i++) {
                modelogiraduria.removeRow(0);
            }
            giraduriaDAO DAOGIR = new giraduriaDAO();
            try {
                for (giraduria gi : DAOGIR.todos()) {
                    String Datos[] = {String.valueOf(gi.getCodigo()), gi.getNombre()};
                    modelogiraduria.addRow(Datos);
                }
            } catch (SQLException e) {
                JOptionPane.showMessageDialog(null, "ERROR: " + e.getMessage());
            }

            tablagiraduria.setRowSorter(new TableRowSorter(modelogiraduria));
            int cantFilas = tablagiraduria.getRowCount();
        }
    }

    private class GrillaForma extends Thread {

        public void run() {

            //Antes de Cargar el Jtable Ajustamos el ancho de las columnas con el Ancho que se nos antoje
            int cantidadRegistro = modeloformapago.getRowCount();
            for (int i = 1; i <= cantidadRegistro; i++) {
                modeloformapago.removeRow(0);
            }
            formapagoDAO DAOFR = new formapagoDAO();
            try {
                for (formapago fr : DAOFR.todos()) {
                    String Datos[] = {String.valueOf(fr.getCodigo()), fr.getNombre()};
                    modeloformapago.addRow(Datos);
                }
            } catch (SQLException e) {
                JOptionPane.showMessageDialog(null, "ERROR: " + e.getMessage());
            }
            tablaformapago.setRowSorter(new TableRowSorter(modeloformapago));
            int cantFilas = tablaformapago.getRowCount();
        }
    }

    private class GenerarPlanilla extends Thread {

        public void run() {
            Date FechaI = ODate.de_java_a_sql(dFechaF.getDate());
            int mes = dFechaF.getCalendar().get(Calendar.MONTH);
            mes = mes + 1;
            int anual = dFechaF.getCalendar().get(Calendar.YEAR);
            int nGiraduria = Integer.valueOf(codgiraduria.getText());
            double sum = 0.00;
            cuenta_clienteDAO DAO = new cuenta_clienteDAO();
            try {
                String detalle = "[";
                for (cuenta_clientes ct : DAO.MostrarxMes(nGiraduria, mes, anual)) {
                    String linea = "{iddetalle : " + 1 + ","
                            + "iddocumento : " + ct.getIddocumento() + ","
                            + "fecha : " + ct.getFecha() + ","
                            + "vencimiento : " + ct.getVencimiento() + ","
                            + "documento : " + ct.getDocumento() + ","
                            + "fecha_cobro : " + FechaI + ","
                            + "enviado : " + ct.getSaldo() + ","
                            + "autorizacion : " + ct.getAutorizacion() + ","
                            + "cliente : " + ct.getCliente().getCodigo() + ","
                            + "sucursal : " + 1 + ","
                            + "moneda : " + 1 + ","
                            + "comprobante : " + ct.getComprobante().getCodigo() + ","
                            + "giraduria : " + ct.getGiraduria().getCodigo() + ","
                            + "numerocuota : " + ct.getNumerocuota() + ","
                            + "creferencia : " + ct.getCreferencia() + ","
                            + "comercial : " + ct.getComercial().getCodigo() + ","
                            + "cuota : " + ct.getCuota() + ","
                            + "cobrado : " + ct.getSaldo()
                            + "},";
                    detalle += linea;
                    //suma.add(ct.getSaldo());
                    sum += ct.getSaldo().doubleValue();
                    System.out.println("La suma " + sum);
                }
                BigDecimal suma = new BigDecimal(sum);
                if (!detalle.equals("[")) {
                    detalle = detalle.substring(0, detalle.length() - 1);
                }
                detalle += "]";
                System.out.println(detalle);
                giraduriaDAO girDAO = new giraduriaDAO();
                giraduria gr = null;

                try {
                    gr = girDAO.buscarId(Integer.valueOf(codgiraduria.getText()));
                    comision = Math.round(sum * gr.getComision() / 100);
                } catch (SQLException ex) {
                    Exceptions.printStackTrace(ex);
                }

                BigDecimal ncomision = new BigDecimal(comision);
                BigDecimal porcentaje = new BigDecimal(gr.getComision());
                BigDecimal importeiva = new BigDecimal("0");
                BigDecimal retencion = new BigDecimal("0");
                //En caso que tenga IVA
                double subtotal = 0;
                if (gr.getIva() > 0) {
                    importeiva = new BigDecimal(Math.round(comision * gr.getIva() / 100));
                    retencion = new BigDecimal(Math.round(importeiva.doubleValue() * 30 / 100));
                    subtotal = sum - (comision + importeiva.doubleValue());
                } else {
                    subtotal = sum - comision;
                    importeiva = new BigDecimal(Math.round(comision * 10 / 100));
                    retencion = new BigDecimal(Math.round(importeiva.doubleValue() * 30 / 100));
                    importeiva = new BigDecimal("0");
                }
                BigDecimal sbtotal = new BigDecimal(subtotal);
                planillaDAO planiDAO = new planillaDAO();
                planilla pla = new planilla();
                pla.setFecha(FechaI);
                pla.setVence(FechaI);
                pla.setGiraduria(gr);
                pla.setTotal(suma);
                pla.setPorcentajebonif(porcentaje);
                pla.setImportebonif(ncomision);
                pla.setImporteiva(importeiva);
                pla.setSubtotal(sbtotal);
                pla.setRetencion(retencion);
                if (gr.getIva() > 0) {
                    pla.setNetoacobrar(sbtotal.add(retencion));
                    pla.setSaldoplanilla(sbtotal.add(retencion));
                } else {
                    pla.setNetoacobrar(sbtotal);
                    pla.setSaldoplanilla(sbtotal);
                }
                planiDAO.insertarPlanilla(pla, detalle);
            } catch (SQLException e) {
                JOptionPane.showMessageDialog(null, "ERROR: " + e.getMessage());
            }
        }
    }

    private class GenerarPlanillaRango extends Thread {

        public void run() {
            Date FechaI = ODate.de_java_a_sql(dFechaI.getDate());
            Date FechaF = ODate.de_java_a_sql(dFechaF.getDate());
            int nGiraduria = Integer.valueOf(codgiraduria.getText());
            double sum = 0.00;
            cuenta_clienteDAO DAO = new cuenta_clienteDAO();
            //.MostrarxGiraduriaxRangoFecha ANTERIOR
            try {
                String detalle = "[";
                for (cuenta_clientes ct : DAO.MostrarxGiraduriaxRango(nGiraduria, FechaI, FechaF)) {
                    String linea = "{iddetalle : " + 1 + ","
                            + "iddocumento : " + ct.getIddocumento() + ","
                            + "fecha : " + ct.getFecha() + ","
                            + "vencimiento : " + ct.getVencimiento() + ","
                            + "documento : " + ct.getDocumento() + ","
                            + "fecha_cobro : " + FechaI + ","
                            + "enviado : " + ct.getSaldo() + ","
                            + "autorizacion : " + ct.getAutorizacion() + ","
                            + "cliente : " + ct.getCliente().getCodigo() + ","
                            + "sucursal : " + 1 + ","
                            + "moneda : " + 1 + ","
                            + "comprobante : " + ct.getComprobante().getCodigo() + ","
                            + "giraduria : " + ct.getGiraduria().getCodigo() + ","
                            + "numerocuota : " + ct.getNumerocuota() + ","
                            + "creferencia : " + ct.getCreferencia() + ","
                            + "comercial : " + ct.getComercial().getCodigo() + ","
                            + "amortiza: " + ct.getAmortiza() + ","
                            + "minteres : " + ct.getMinteres() + ","
                            + "cuota : " + ct.getCuota() + ","
                            + "cobrado : " + ct.getSaldo()
                            + "},";
                    detalle += linea;
                    //suma.add(ct.getSaldo());
                    sum += ct.getSaldo().doubleValue();
                    System.out.println("La suma " + sum);
                }
                BigDecimal suma = new BigDecimal(sum);
                if (!detalle.equals("[")) {
                    detalle = detalle.substring(0, detalle.length() - 1);
                }
                detalle += "]";
                System.out.println(detalle);
                giraduriaDAO girDAO = new giraduriaDAO();
                giraduria gr = null;

                try {
                    gr = girDAO.buscarId(Integer.valueOf(codgiraduria.getText()));
                    comision = Math.round(sum * gr.getComision() / 100);
                } catch (SQLException ex) {
                    Exceptions.printStackTrace(ex);
                }

                BigDecimal ncomision = new BigDecimal(comision);
                BigDecimal porcentaje = new BigDecimal(gr.getComision());
                BigDecimal importeiva = new BigDecimal("0");
                BigDecimal retencion = new BigDecimal("0");
                //En caso que tenga IVA
                double subtotal = 0;
                if (gr.getIva() > 0) {
                    importeiva = new BigDecimal(Math.round(comision * gr.getIva() / 100));
                    retencion = new BigDecimal(Math.round(importeiva.doubleValue() / 11 * 30 / 100));
                    subtotal = sum - (comision + importeiva.doubleValue());
                } else {
                    subtotal = sum - comision;
                    importeiva = new BigDecimal(Math.round(comision * 10 / 100));
                    retencion = new BigDecimal(Math.round(importeiva.doubleValue() / 11 * 30 / 100));
                    importeiva = new BigDecimal("0");
                }
                BigDecimal sbtotal = new BigDecimal(subtotal);
                planillaDAO planiDAO = new planillaDAO();
                planilla pla = new planilla();
                pla.setFecha(FechaI);
                pla.setVence(FechaI);
                pla.setGiraduria(gr);
                pla.setTotal(suma);
                pla.setPorcentajebonif(porcentaje);
                pla.setImportebonif(ncomision);
                pla.setImporteiva(importeiva);
                pla.setSubtotal(sbtotal);
                pla.setRetencion(retencion);
                if (gr.getIva() > 0) {
                    pla.setNetoacobrar(sbtotal.add(retencion));
                    pla.setSaldoplanilla(sbtotal.add(retencion));
                } else {
                    pla.setNetoacobrar(sbtotal);
                    pla.setSaldoplanilla(sbtotal);
                }
                planiDAO.insertarPlanilla(pla, detalle);
            } catch (SQLException e) {
                JOptionPane.showMessageDialog(null, "ERROR: " + e.getMessage());
            }
        }
    }

    private class GenerarPlanillaIncluido extends Thread {

        public void run() {
            Date FechaI = ODate.de_java_a_sql(dFechaI.getDate());
            Date FechaF = ODate.de_java_a_sql(dFechaF.getDate());
            int nGiraduria = Integer.valueOf(codgiraduria.getText());
            double sum = 0.00;
            cuenta_clienteDAO DAO = new cuenta_clienteDAO();
            try {
                String detalle = "[";
                for (cuenta_clientes ct : DAO.MostrarxGiraduriaIncluidoCorto(nGiraduria, FechaF)) {
                    System.out.println(ct.getIddocumento());
                    System.out.println(ct.getCliente().getCodigo());
                    System.out.println(ct.getVencimiento());
                    System.out.println(ct.getComercial().getCodigo());

                    String linea = "{iddetalle : " + 1 + ","
                            + "iddocumento : '" + ct.getIddocumento() + "',"
                            + "fecha : '" + ct.getFecha() + "',"
                            + "vencimiento : '" + ct.getVencimiento() + "',"
                            + "documento : " + ct.getDocumento() + ","
                            + "fecha_cobro : '" + FechaI + "',"
                            + "enviado : " + ct.getSaldo() + ","
                            + "autorizacion : " + "SD" + ","
                            + "cliente : " + ct.getCliente().getCodigo() + ","
                            + "sucursal : " + 1 + ","
                            + "moneda : " + 1 + ","
                            + "comprobante : " + ct.getComprobante().getCodigo() + ","
                            + "giraduria : " + ct.getGiraduria().getCodigo() + ","
                            + "numerocuota : " + ct.getNumerocuota() + ","
                            + "creferencia : '" + ct.getCreferencia() + "',"
                            + "comercial : " + ct.getComercial().getCodigo() + ","
                            + "amortiza: " + ct.getAmortiza() + ","
                            + "minteres : " + ct.getMinteres() + ","
                            + "cuota : " + ct.getCuota() + ","
                            + "cobrado : " + ct.getSaldo()
                            + "},";
                    detalle += linea;
                    //suma.add(ct.getSaldo());
                    sum += ct.getSaldo().doubleValue();
                    System.out.println("La suma " + sum);
                }
                BigDecimal suma = new BigDecimal(sum);
                if (!detalle.equals("[")) {
                    detalle = detalle.substring(0, detalle.length() - 1);
                }
                detalle += "]";
                System.out.println(detalle);
                giraduriaDAO girDAO = new giraduriaDAO();
                giraduria gr = null;

                try {
                    gr = girDAO.buscarId(Integer.valueOf(codgiraduria.getText()));
                    comision = Math.round(sum * gr.getComision() / 100);
                } catch (SQLException ex) {
                    Exceptions.printStackTrace(ex);
                }

                BigDecimal ncomision = new BigDecimal(comision);
                BigDecimal porcentaje = new BigDecimal(gr.getComision());
                BigDecimal importeiva = new BigDecimal("0");
                BigDecimal retencion = new BigDecimal("0");
                //En caso que tenga IVA
                double subtotal = 0;
                if (gr.getIva() > 0) {
                    importeiva = new BigDecimal(Math.round(comision * gr.getIva() / 100));
                    retencion = new BigDecimal(Math.round(importeiva.doubleValue() / 11 * 30 / 100));
                    subtotal = sum - (comision + importeiva.doubleValue());
                } else {
                    subtotal = sum - comision;
                    importeiva = new BigDecimal(Math.round(comision * 10 / 100));
                    retencion = new BigDecimal(Math.round(importeiva.doubleValue() / 11 * 30 / 100));
                    importeiva = new BigDecimal("0");
                }
                BigDecimal sbtotal = new BigDecimal(subtotal);
                planillaDAO planiDAO = new planillaDAO();
                planilla pla = new planilla();
                pla.setFecha(FechaI);
                pla.setVence(FechaI);
                pla.setGiraduria(gr);
                pla.setTotal(suma);
                pla.setPorcentajebonif(porcentaje);
                pla.setImportebonif(ncomision);
                pla.setImporteiva(importeiva);
                pla.setSubtotal(sbtotal);
                pla.setRetencion(retencion);
                if (gr.getIva() > 0) {
                    pla.setNetoacobrar(sbtotal.add(retencion));
                    pla.setSaldoplanilla(sbtotal.add(retencion));
                } else {
                    pla.setNetoacobrar(sbtotal);
                    pla.setSaldoplanilla(sbtotal);
                }
                planiDAO.insertarPlanilla(pla, detalle);
                JOptionPane.showMessageDialog(null, "Proceso Terminado, Verifique");
            } catch (SQLException e) {
                JOptionPane.showMessageDialog(null, "ERROR: " + e.getMessage());
            }
        }
    }

    private class GrillaCobranza extends Thread {

        public void run() {

            //Antes de Cargar el Jtable Ajustamos el ancho de las columnas con el Ancho que se nos antoje
            int cantidadRegistro = modelocobro.getRowCount();
            for (int i = 1; i <= cantidadRegistro; i++) {
                modelocobro.removeRow(0);
            }
            cobroplanillaDAO cobDAO = new cobroplanillaDAO();
            try {
                for (cobroplanilla cb : cobDAO.muestrarxplanilla(Integer.valueOf(idControl.getText()))) {
                    String Datos[] = {formatosinpunto.format(cb.getIdpago()), formatoFecha.format(cb.getFechacobro()), cb.getCargobanco().getNombre(), cb.getNrocheque(), formatea.format(cb.getImporte())};
                    modelocobro.addRow(Datos);
                }
            } catch (SQLException e) {
                JOptionPane.showMessageDialog(null, "ERROR: " + e.getMessage());
            }
            tablacobranza.setRowSorter(new TableRowSorter(modelocobro));
            int cantFilas = tablacobranza.getRowCount();
            if (cantFilas > 0) {
                BotonBorrar.setEnabled(true);
            } else {
                BotonBorrar.setEnabled(false);
            }
        }
    }

    private class GrillaCobranzaSocio extends Thread {

        public void run() {
            int nsocio = Integer.valueOf(socio.getText());
            int nplanilla = Integer.valueOf(nroplanillasocio.getText());
            //Antes de Cargar el Jtable Ajustamos el ancho de las columnas con el Ancho que se nos antoje
            int cantidadRegistro = modelocobrosocio.getRowCount();
            for (int i = 1; i <= cantidadRegistro; i++) {
                modelocobrosocio.removeRow(0);
            }
            gestioncobroDAO gcDAO = new gestioncobroDAO();
            try {
                for (gestioncobro gc : gcDAO.MostrarxSocioxPlanilla(nsocio, nplanilla)) {
                    String Datos[] = {gc.getIddocumento(), String.valueOf(gc.getDocumento()), formatoFecha.format(gc.getFecha()), formatoFecha.format(gc.getFecha_cobro()), gc.getComprobante().getNombre(), formatea.format(gc.getEnviado()), formatea.format(gc.getCobrado())};
                    modelocobrosocio.addRow(Datos);
                }
            } catch (SQLException e) {
                JOptionPane.showMessageDialog(null, "ERROR: " + e.getMessage());
            }
            tablacobranzasocio.setRowSorter(new TableRowSorter(modelocobrosocio));
            int cantFilas = tablacobranzasocio.getRowCount();
            if (cantFilas > 0) {
                BotonConfirmar.setEnabled(true);
            } else {
                BotonConfirmar.setEnabled(false);
            }
        }
    }

    private class GrillaBanco extends Thread {

        public void run() {

            //Antes de Cargar el Jtable Ajustamos el ancho de las columnas con el Ancho que se nos antoje
            int cantidadRegistro = modelobanco.getRowCount();
            for (int i = 1; i <= cantidadRegistro; i++) {
                modelobanco.removeRow(0);
            }
            bancoplazaDAO DAOBAN = new bancoplazaDAO();
            try {
                for (bancoplaza b : DAOBAN.todos()) {
                    String Datos[] = {String.valueOf(b.getCodigo()), b.getNombre()};
                    modelobanco.addRow(Datos);
                }
            } catch (SQLException e) {
                JOptionPane.showMessageDialog(null, "ERROR: " + e.getMessage());
            }

            tablabanco.setRowSorter(new TableRowSorter(modelobanco));
            int cantFilas = tablabanco.getRowCount();
        }
    }

    private class GrillaSocio extends Thread {

        public void run() {

            //Antes de Cargar el Jtable Ajustamos el ancho de las columnas con el Ancho que se nos antoje
            int cantidadRegistro = modelocliente.getRowCount();
            for (int i = 1; i <= cantidadRegistro; i++) {
                modelocliente.removeRow(0);
            }

            clienteDAO DAOCLIE = new clienteDAO();
            try {
                for (cliente cli : DAOCLIE.todosimple()) {
                    String Datos[] = {String.valueOf(cli.getCodigo()), cli.getNombre(), cli.getDireccion(), cli.getRuc(), String.valueOf(cli.getGiraduria().getCodigo()), cli.getGiraduria().getNombre()};
                    modelocliente.addRow(Datos);
                }
            } catch (SQLException e) {
                JOptionPane.showMessageDialog(null, "ERROR: " + e.getMessage());
            }

            tablacliente.setRowSorter(new TableRowSorter(modelocliente));
            int cantFilas = tablacliente.getRowCount();
        }
    }

    private class ConfirmaCierre extends Thread {

        public void run() {
            String detalle = "[";
            cierre_cobranzaDAO cierreDAO = new cierre_cobranzaDAO();
            cierre_cobranza ci = null;
            try {
                ci = cierreDAO.VerificarControl(Integer.valueOf(nroplanilla.getText()));
            } catch (SQLException ex) {
                Exceptions.printStackTrace(ex);
            }
            System.out.println("COBRADO " + ci.getCobrado());
            if (ci.getCobrado() == null) {
                gestioncobroDAO gcDAO = new gestioncobroDAO();
                try {
                    for (gestioncobro ct : gcDAO.MostrarxPlanilla(Integer.valueOf(nroplanilla.getText()))) {
                        String linea = "{iddetalle : '" + ct.getIddetalle() + "',"
                                + "iddocumento : '" + ct.getIddocumento() + "',"
                                + "fecha : '" + ct.getFecha() + "',"
                                + "vencimiento : '" + ct.getVencimiento() + "',"
                                + "documento : " + ct.getDocumento() + ","
                                + "fecha_cobro : '" + ct.getFecha_cobro() + "',"
                                + "enviado : " + ct.getEnviado() + ","
                                + "autorizacion : " + ct.getDocumento() + ","
                                + "cliente : " + ct.getCliente().getCodigo() + ","
                                + "sucursal : " + ct.getSucursal() + ","
                                + "moneda : " + ct.getMoneda() + ","
                                + "comprobante : " + ct.getComprobante().getCodigo() + ","
                                + "giraduria : " + ct.getGiraduria().getCodigo() + ","
                                + "numerocuota : " + ct.getNumerocuota() + ","
                                + "creferencia : '" + ct.getCreferencia() + "',"
                                + "comercial : " + ct.getComercial().getCodigo() + ","
                                + "amortiza : " + ct.getAmortiza() + ","
                                + "minteres : " + ct.getMinteres() + ","
                                + "cuota : " + ct.getCuota() + ","
                                + "cobrado : " + ct.getCobrado()
                                + "},";
                        detalle += linea;
                    }
                    if (!detalle.equals("[")) {
                        detalle = detalle.substring(0, detalle.length() - 1);
                    }
                    detalle += "]";
                } catch (SQLException e) {
                    JOptionPane.showMessageDialog(null, "ERROR: " + e.getMessage());
                }
                cierre_cobranzaDAO ctaDAO = new cierre_cobranzaDAO();
                try {
                    ctaDAO.guardarCobrosxGiraduria(detalle);
                } catch (SQLException ex) {
                    Exceptions.printStackTrace(ex);
                }
            } else {
                JOptionPane.showMessageDialog(null, "Planilla ya Fué Confirmada");
                return;
            }
            if (generarInteres.isSelected()) {
                try {
                    cierreDAO.GenerarInteres(Double.valueOf(nroplanilla.getText()));
                } catch (SQLException ex) {
                    Exceptions.printStackTrace(ex);
                }
            }
            JOptionPane.showMessageDialog(null, "Planilla Confirmada con Éxito");
        }
    }

    public class GeneraPlanilla1 extends Thread {

        public GeneraPlanilla1(int ntipo) {
            int tipo = ntipo;
            switch (tipo) {
                case 1:
                    cReportePlanilla = "planillagiraduria1.jasper";
                    break;
                case 2:
                    cReportePlanilla = "planillagiraduria2.jasper";
                    break;
                case 3:
                    cReportePlanilla = "planilla_bnf.jasper";
                    break;
                case 4:
                    cReportePlanilla = "planilla_itau.jasper";
                    break;
            }
        }

        public void run() {
            con = new Conexion();
            stm = con.conectar();
            try {
                Map parameters = new HashMap();
                //Ahora que hay parametros le enviamos uno con el mismo nombre del que creamos
                //en el reporte
                int nFila = jTable1.getSelectedRow();
                String num = jTable1.getValueAt(nFila, 0).toString();

                parameters.put("cNombreEmpresa", Config.cNombreEmpresa);
                parameters.put("Numero", num);
                JasperReport jr = null;
                URL url = getClass().getClassLoader().getResource("Reports/" + cReportePlanilla.toString());
                jr = (JasperReport) JRLoader.loadObject(url);
                JasperPrint masterPrint = null;
                //Se le incluye el parametro con el nombre parameters porque asi lo definimos
                masterPrint = JasperFillManager.fillReport(jr, parameters, stm.getConnection());
                JasperViewer ventana = new JasperViewer(masterPrint, false);
                ventana.setTitle("Vista Previa");
                ventana.setVisible(true);
            } catch (Exception e) {
                JDialog.setDefaultLookAndFeelDecorated(true);
                JOptionPane.showMessageDialog(null, e.getMessage(), "Error", 1);
            }
        }
    }
}
